
zad2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006e  00800100  0000095a  000009ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000095a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080016e  0080016e  00000a5c  2**0
                  ALLOC
  3 .stab         000009fc  00000000  00000000  00000a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f1a  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002372  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002384  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000023c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000029b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00002f5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002f74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
   c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	63 64       	ori	r22, 0x43	; 67
  6a:	69 6e       	ori	r22, 0xE9	; 233
  6c:	6f 70       	andi	r22, 0x0F	; 15
  6e:	73 75       	andi	r23, 0x53	; 83
  70:	78 58       	subi	r23, 0x88	; 136
  72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	11 e0       	ldi	r17, 0x01	; 1
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b1 e0       	ldi	r27, 0x01	; 1
  86:	ea e5       	ldi	r30, 0x5A	; 90
  88:	f9 e0       	ldi	r31, 0x09	; 9
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	ae 36       	cpi	r26, 0x6E	; 110
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
  96:	21 e0       	ldi	r18, 0x01	; 1
  98:	ae e6       	ldi	r26, 0x6E	; 110
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
  9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
  a0:	a2 38       	cpi	r26, 0x82	; 130
  a2:	b2 07       	cpc	r27, r18
  a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
  a6:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
  aa:	0c 94 ab 04 	jmp	0x956	; 0x956 <_exit>

000000ae <__bad_interrupt>:
  ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <uart_transmit>:
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
}

int uart_transmit(char data, FILE *stream)
{
    while (!(UCSR0A & _BV(UDRE0)))
  b2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  b6:	95 ff       	sbrs	r25, 5
  b8:	fc cf       	rjmp	.-8      	; 0xb2 <uart_transmit>
        ;
    UDR0 = data;
  ba:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    return 0;
}
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	08 95       	ret

000000c4 <uart_receive>:

int uart_receive(FILE *stream)
{
    while (!(UCSR0A & _BV(RXC0)))
  c4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  c8:	87 ff       	sbrs	r24, 7
  ca:	fc cf       	rjmp	.-8      	; 0xc4 <uart_receive>
        ;
    return UDR0;
  cc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	08 95       	ret

000000d4 <uart_init>:
    "1100",
};

void uart_init()
{
    UBRR0 = UBRR_VALUE;
  d4:	87 e6       	ldi	r24, 0x67	; 103
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0A = 0;
  e0:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  e4:	88 e1       	ldi	r24, 0x18	; 24
  e6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  f0:	08 95       	ret

000000f2 <display_char>:
FILE uart_file;


void display_char(char l)
{
    char *morse_sig = mors[l - 97];
  f2:	88 0f       	add	r24, r24
  f4:	99 0b       	sbc	r25, r25
  f6:	fc 01       	movw	r30, r24
  f8:	e2 5c       	subi	r30, 0xC2	; 194
  fa:	ff 4f       	sbci	r31, 0xFF	; 255
  fc:	01 90       	ld	r0, Z+
  fe:	f0 81       	ld	r31, Z
 100:	e0 2d       	mov	r30, r0
    for (int i = 0; morse_sig[i] != '\0'; ++i)
 102:	80 81       	ld	r24, Z
 104:	88 23       	and	r24, r24
 106:	e1 f0       	breq	.+56     	; 0x140 <display_char+0x4e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 108:	2f ef       	ldi	r18, 0xFF	; 255
 10a:	87 e8       	ldi	r24, 0x87	; 135
 10c:	93 e1       	ldi	r25, 0x13	; 19
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <display_char+0x1c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <display_char+0x26>
 118:	00 00       	nop
    {
        _delay_ms(400);
        if (morse_sig[i] == '0'){
 11a:	81 91       	ld	r24, Z+
 11c:	80 33       	cpi	r24, 0x30	; 48
 11e:	d1 f0       	breq	.+52     	; 0x154 <display_char+0x62>
            LED_PORT |= _BV(LED);
            _delay_ms(400);
            LED_PORT &= ~_BV(LED);
        }
        else if (morse_sig[i] == '1')
 120:	81 33       	cpi	r24, 0x31	; 49
 122:	79 f7       	brne	.-34     	; 0x102 <display_char+0x10>
        {
            LED_PORT |= _BV(LED);
 124:	2b 9a       	sbi	0x05, 3	; 5
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	87 e9       	ldi	r24, 0x97	; 151
 12a:	9a e3       	ldi	r25, 0x3A	; 58
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <display_char+0x3a>
 134:	00 c0       	rjmp	.+0      	; 0x136 <display_char+0x44>
 136:	00 00       	nop
            _delay_ms(1200);
            LED_PORT &= ~_BV(LED);
 138:	2b 98       	cbi	0x05, 3	; 5


void display_char(char l)
{
    char *morse_sig = mors[l - 97];
    for (int i = 0; morse_sig[i] != '\0'; ++i)
 13a:	80 81       	ld	r24, Z
 13c:	81 11       	cpse	r24, r1
 13e:	e4 cf       	rjmp	.-56     	; 0x108 <display_char+0x16>
 140:	2f ef       	ldi	r18, 0xFF	; 255
 142:	8b e4       	ldi	r24, 0x4B	; 75
 144:	9d e1       	ldi	r25, 0x1D	; 29
 146:	21 50       	subi	r18, 0x01	; 1
 148:	80 40       	sbci	r24, 0x00	; 0
 14a:	90 40       	sbci	r25, 0x00	; 0
 14c:	e1 f7       	brne	.-8      	; 0x146 <display_char+0x54>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <display_char+0x5e>
 150:	00 00       	nop
            _delay_ms(1200);
            LED_PORT &= ~_BV(LED);
        }
    }
    _delay_ms(600);
}
 152:	08 95       	ret
    char *morse_sig = mors[l - 97];
    for (int i = 0; morse_sig[i] != '\0'; ++i)
    {
        _delay_ms(400);
        if (morse_sig[i] == '0'){
            LED_PORT |= _BV(LED);
 154:	2b 9a       	sbi	0x05, 3	; 5
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	87 e8       	ldi	r24, 0x87	; 135
 15a:	93 e1       	ldi	r25, 0x13	; 19
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <display_char+0x6a>
 164:	00 c0       	rjmp	.+0      	; 0x166 <display_char+0x74>
 166:	00 00       	nop
            _delay_ms(400);
            LED_PORT &= ~_BV(LED);
 168:	2b 98       	cbi	0x05, 3	; 5
 16a:	cb cf       	rjmp	.-106    	; 0x102 <display_char+0x10>

0000016c <main>:
    }
    _delay_ms(600);
}

int main(void)
{
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	cd b7       	in	r28, 0x3d	; 61
 172:	de b7       	in	r29, 0x3e	; 62
 174:	2a 97       	sbiw	r28, 0x0a	; 10
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	f8 94       	cli
 17a:	de bf       	out	0x3e, r29	; 62
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	cd bf       	out	0x3d, r28	; 61
    "1100",
};

void uart_init()
{
    UBRR0 = UBRR_VALUE;
 180:	87 e6       	ldi	r24, 0x67	; 103
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 188:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0A = 0;
 18c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 190:	88 e1       	ldi	r24, 0x18	; 24
 192:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 196:	86 e0       	ldi	r24, 0x06	; 6
 198:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
}

int main(void)
{
    uart_init();
    fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 19c:	8e e6       	ldi	r24, 0x6E	; 110
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	29 e5       	ldi	r18, 0x59	; 89
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	30 93 77 01 	sts	0x0177, r19	; 0x800177 <__data_end+0x9>
 1a8:	20 93 76 01 	sts	0x0176, r18	; 0x800176 <__data_end+0x8>
 1ac:	22 e6       	ldi	r18, 0x62	; 98
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	30 93 79 01 	sts	0x0179, r19	; 0x800179 <__data_end+0xb>
 1b4:	20 93 78 01 	sts	0x0178, r18	; 0x800178 <__data_end+0xa>
 1b8:	23 e0       	ldi	r18, 0x03	; 3
 1ba:	20 93 71 01 	sts	0x0171, r18	; 0x800171 <__data_end+0x3>
 1be:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <__data_end+0xd>
 1c2:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <__data_end+0xc>
    stdin = stdout = stderr = &uart_file;
 1c6:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <__iob+0x5>
 1ca:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__iob+0x4>
 1ce:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <__iob+0x3>
 1d2:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__iob+0x2>
 1d6:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <__iob+0x1>
 1da:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <__iob>
    LED_DDR |= _BV(LED);
 1de:	23 9a       	sbi	0x04, 3	; 4
 1e0:	ce 01       	movw	r24, r28
 1e2:	01 96       	adiw	r24, 0x01	; 1
 1e4:	7c 01       	movw	r14, r24
    while (1)
    {
        char code[10];
        scanf("%s", code);
 1e6:	04 e3       	ldi	r16, 0x34	; 52
 1e8:	11 e0       	ldi	r17, 0x01	; 1
 1ea:	ff 92       	push	r15
 1ec:	ef 92       	push	r14
 1ee:	1f 93       	push	r17
 1f0:	0f 93       	push	r16
 1f2:	0e 94 43 01 	call	0x286	; 0x286 <scanf>
        for (int i = 0; code[i] != '\0'; i++)
 1f6:	e9 81       	ldd	r30, Y+1	; 0x01
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	ee 23       	and	r30, r30
 202:	99 f3       	breq	.-26     	; 0x1ea <main+0x7e>
 204:	de 01       	movw	r26, r28
 206:	12 96       	adiw	r26, 0x02	; 2
FILE uart_file;


void display_char(char l)
{
    char *morse_sig = mors[l - 97];
 208:	ee 0f       	add	r30, r30
 20a:	ff 0b       	sbc	r31, r31
 20c:	e2 5c       	subi	r30, 0xC2	; 194
 20e:	ff 4f       	sbci	r31, 0xFF	; 255
 210:	01 90       	ld	r0, Z+
 212:	f0 81       	ld	r31, Z
 214:	e0 2d       	mov	r30, r0
    for (int i = 0; morse_sig[i] != '\0'; ++i)
 216:	80 81       	ld	r24, Z
 218:	88 23       	and	r24, r24
 21a:	e1 f0       	breq	.+56     	; 0x254 <main+0xe8>
 21c:	9f ef       	ldi	r25, 0xFF	; 255
 21e:	27 e8       	ldi	r18, 0x87	; 135
 220:	83 e1       	ldi	r24, 0x13	; 19
 222:	91 50       	subi	r25, 0x01	; 1
 224:	20 40       	sbci	r18, 0x00	; 0
 226:	80 40       	sbci	r24, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0xb6>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0xc0>
 22c:	00 00       	nop
    {
        _delay_ms(400);
        if (morse_sig[i] == '0'){
 22e:	81 91       	ld	r24, Z+
 230:	80 33       	cpi	r24, 0x30	; 48
 232:	e9 f0       	breq	.+58     	; 0x26e <main+0x102>
            LED_PORT |= _BV(LED);
            _delay_ms(400);
            LED_PORT &= ~_BV(LED);
        }
        else if (morse_sig[i] == '1')
 234:	81 33       	cpi	r24, 0x31	; 49
 236:	79 f7       	brne	.-34     	; 0x216 <main+0xaa>
        {
            LED_PORT |= _BV(LED);
 238:	2b 9a       	sbi	0x05, 3	; 5
 23a:	9f ef       	ldi	r25, 0xFF	; 255
 23c:	27 e9       	ldi	r18, 0x97	; 151
 23e:	8a e3       	ldi	r24, 0x3A	; 58
 240:	91 50       	subi	r25, 0x01	; 1
 242:	20 40       	sbci	r18, 0x00	; 0
 244:	80 40       	sbci	r24, 0x00	; 0
 246:	e1 f7       	brne	.-8      	; 0x240 <main+0xd4>
 248:	00 c0       	rjmp	.+0      	; 0x24a <main+0xde>
 24a:	00 00       	nop
            _delay_ms(1200);
            LED_PORT &= ~_BV(LED);
 24c:	2b 98       	cbi	0x05, 3	; 5


void display_char(char l)
{
    char *morse_sig = mors[l - 97];
    for (int i = 0; morse_sig[i] != '\0'; ++i)
 24e:	80 81       	ld	r24, Z
 250:	81 11       	cpse	r24, r1
 252:	e4 cf       	rjmp	.-56     	; 0x21c <main+0xb0>
 254:	9f ef       	ldi	r25, 0xFF	; 255
 256:	2b e4       	ldi	r18, 0x4B	; 75
 258:	8d e1       	ldi	r24, 0x1D	; 29
 25a:	91 50       	subi	r25, 0x01	; 1
 25c:	20 40       	sbci	r18, 0x00	; 0
 25e:	80 40       	sbci	r24, 0x00	; 0
 260:	e1 f7       	brne	.-8      	; 0x25a <main+0xee>
 262:	00 c0       	rjmp	.+0      	; 0x264 <main+0xf8>
 264:	00 00       	nop
    LED_DDR |= _BV(LED);
    while (1)
    {
        char code[10];
        scanf("%s", code);
        for (int i = 0; code[i] != '\0'; i++)
 266:	ed 91       	ld	r30, X+
 268:	e1 11       	cpse	r30, r1
 26a:	ce cf       	rjmp	.-100    	; 0x208 <main+0x9c>
 26c:	be cf       	rjmp	.-132    	; 0x1ea <main+0x7e>
    char *morse_sig = mors[l - 97];
    for (int i = 0; morse_sig[i] != '\0'; ++i)
    {
        _delay_ms(400);
        if (morse_sig[i] == '0'){
            LED_PORT |= _BV(LED);
 26e:	2b 9a       	sbi	0x05, 3	; 5
 270:	9f ef       	ldi	r25, 0xFF	; 255
 272:	27 e8       	ldi	r18, 0x87	; 135
 274:	83 e1       	ldi	r24, 0x13	; 19
 276:	91 50       	subi	r25, 0x01	; 1
 278:	20 40       	sbci	r18, 0x00	; 0
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	e1 f7       	brne	.-8      	; 0x276 <main+0x10a>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <main+0x114>
 280:	00 00       	nop
            _delay_ms(400);
            LED_PORT &= ~_BV(LED);
 282:	2b 98       	cbi	0x05, 3	; 5
 284:	c8 cf       	rjmp	.-112    	; 0x216 <main+0xaa>

00000286 <scanf>:
 286:	a0 e0       	ldi	r26, 0x00	; 0
 288:	b0 e0       	ldi	r27, 0x00	; 0
 28a:	e9 e4       	ldi	r30, 0x49	; 73
 28c:	f1 e0       	ldi	r31, 0x01	; 1
 28e:	0c 94 84 04 	jmp	0x908	; 0x908 <__stack+0x9>
 292:	ae 01       	movw	r20, r28
 294:	4b 5f       	subi	r20, 0xFB	; 251
 296:	5f 4f       	sbci	r21, 0xFF	; 255
 298:	fa 01       	movw	r30, r20
 29a:	61 91       	ld	r22, Z+
 29c:	71 91       	ld	r23, Z+
 29e:	af 01       	movw	r20, r30
 2a0:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__iob>
 2a4:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <__iob+0x1>
 2a8:	0e 94 f5 02 	call	0x5ea	; 0x5ea <vfscanf>
 2ac:	e2 e0       	ldi	r30, 0x02	; 2
 2ae:	0c 94 a0 04 	jmp	0x940	; 0x940 <__epilogue_restores__+0x20>

000002b2 <putval>:
 2b2:	20 fd       	sbrc	r18, 0
 2b4:	09 c0       	rjmp	.+18     	; 0x2c8 <putval+0x16>
 2b6:	fc 01       	movw	r30, r24
 2b8:	23 fd       	sbrc	r18, 3
 2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <putval+0x14>
 2bc:	22 ff       	sbrs	r18, 2
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <putval+0x12>
 2c0:	73 83       	std	Z+3, r23	; 0x03
 2c2:	62 83       	std	Z+2, r22	; 0x02
 2c4:	51 83       	std	Z+1, r21	; 0x01
 2c6:	40 83       	st	Z, r20
 2c8:	08 95       	ret

000002ca <mulacc>:
 2ca:	44 fd       	sbrc	r20, 4
 2cc:	17 c0       	rjmp	.+46     	; 0x2fc <mulacc+0x32>
 2ce:	46 fd       	sbrc	r20, 6
 2d0:	17 c0       	rjmp	.+46     	; 0x300 <mulacc+0x36>
 2d2:	ab 01       	movw	r20, r22
 2d4:	bc 01       	movw	r22, r24
 2d6:	da 01       	movw	r26, r20
 2d8:	fb 01       	movw	r30, r22
 2da:	aa 0f       	add	r26, r26
 2dc:	bb 1f       	adc	r27, r27
 2de:	ee 1f       	adc	r30, r30
 2e0:	ff 1f       	adc	r31, r31
 2e2:	10 94       	com	r1
 2e4:	d1 f7       	brne	.-12     	; 0x2da <mulacc+0x10>
 2e6:	4a 0f       	add	r20, r26
 2e8:	5b 1f       	adc	r21, r27
 2ea:	6e 1f       	adc	r22, r30
 2ec:	7f 1f       	adc	r23, r31
 2ee:	cb 01       	movw	r24, r22
 2f0:	ba 01       	movw	r22, r20
 2f2:	66 0f       	add	r22, r22
 2f4:	77 1f       	adc	r23, r23
 2f6:	88 1f       	adc	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	09 c0       	rjmp	.+18     	; 0x30e <mulacc+0x44>
 2fc:	33 e0       	ldi	r19, 0x03	; 3
 2fe:	01 c0       	rjmp	.+2      	; 0x302 <mulacc+0x38>
 300:	34 e0       	ldi	r19, 0x04	; 4
 302:	66 0f       	add	r22, r22
 304:	77 1f       	adc	r23, r23
 306:	88 1f       	adc	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	31 50       	subi	r19, 0x01	; 1
 30c:	d1 f7       	brne	.-12     	; 0x302 <mulacc+0x38>
 30e:	62 0f       	add	r22, r18
 310:	71 1d       	adc	r23, r1
 312:	81 1d       	adc	r24, r1
 314:	91 1d       	adc	r25, r1
 316:	08 95       	ret

00000318 <skip_spaces>:
 318:	0f 93       	push	r16
 31a:	1f 93       	push	r17
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	8c 01       	movw	r16, r24
 322:	c8 01       	movw	r24, r16
 324:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 328:	ec 01       	movw	r28, r24
 32a:	97 fd       	sbrc	r25, 7
 32c:	08 c0       	rjmp	.+16     	; 0x33e <skip_spaces+0x26>
 32e:	0e 94 06 04 	call	0x80c	; 0x80c <isspace>
 332:	89 2b       	or	r24, r25
 334:	b1 f7       	brne	.-20     	; 0x322 <skip_spaces+0xa>
 336:	b8 01       	movw	r22, r16
 338:	ce 01       	movw	r24, r28
 33a:	0e 94 58 04 	call	0x8b0	; 0x8b0 <ungetc>
 33e:	ce 01       	movw	r24, r28
 340:	df 91       	pop	r29
 342:	cf 91       	pop	r28
 344:	1f 91       	pop	r17
 346:	0f 91       	pop	r16
 348:	08 95       	ret

0000034a <conv_int>:
 34a:	8f 92       	push	r8
 34c:	9f 92       	push	r9
 34e:	af 92       	push	r10
 350:	bf 92       	push	r11
 352:	ef 92       	push	r14
 354:	ff 92       	push	r15
 356:	0f 93       	push	r16
 358:	1f 93       	push	r17
 35a:	cf 93       	push	r28
 35c:	df 93       	push	r29
 35e:	8c 01       	movw	r16, r24
 360:	d6 2f       	mov	r29, r22
 362:	7a 01       	movw	r14, r20
 364:	b2 2e       	mov	r11, r18
 366:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 36a:	9c 01       	movw	r18, r24
 36c:	33 27       	eor	r19, r19
 36e:	2b 32       	cpi	r18, 0x2B	; 43
 370:	31 05       	cpc	r19, r1
 372:	31 f0       	breq	.+12     	; 0x380 <conv_int+0x36>
 374:	2d 32       	cpi	r18, 0x2D	; 45
 376:	31 05       	cpc	r19, r1
 378:	61 f4       	brne	.+24     	; 0x392 <conv_int+0x48>
 37a:	8b 2d       	mov	r24, r11
 37c:	80 68       	ori	r24, 0x80	; 128
 37e:	b8 2e       	mov	r11, r24
 380:	d1 50       	subi	r29, 0x01	; 1
 382:	11 f4       	brne	.+4      	; 0x388 <conv_int+0x3e>
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	68 c0       	rjmp	.+208    	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 388:	c8 01       	movw	r24, r16
 38a:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 38e:	97 fd       	sbrc	r25, 7
 390:	f9 cf       	rjmp	.-14     	; 0x384 <conv_int+0x3a>
 392:	cb 2d       	mov	r28, r11
 394:	cd 7f       	andi	r28, 0xFD	; 253
 396:	2b 2d       	mov	r18, r11
 398:	20 73       	andi	r18, 0x30	; 48
 39a:	09 f5       	brne	.+66     	; 0x3de <conv_int+0x94>
 39c:	80 33       	cpi	r24, 0x30	; 48
 39e:	f9 f4       	brne	.+62     	; 0x3de <conv_int+0x94>
 3a0:	aa 24       	eor	r10, r10
 3a2:	aa 94       	dec	r10
 3a4:	ad 0e       	add	r10, r29
 3a6:	09 f4       	brne	.+2      	; 0x3aa <conv_int+0x60>
 3a8:	43 c0       	rjmp	.+134    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3aa:	c8 01       	movw	r24, r16
 3ac:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 3b0:	97 fd       	sbrc	r25, 7
 3b2:	3e c0       	rjmp	.+124    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3b4:	9c 01       	movw	r18, r24
 3b6:	2f 7d       	andi	r18, 0xDF	; 223
 3b8:	33 27       	eor	r19, r19
 3ba:	28 35       	cpi	r18, 0x58	; 88
 3bc:	31 05       	cpc	r19, r1
 3be:	49 f4       	brne	.+18     	; 0x3d2 <conv_int+0x88>
 3c0:	c2 64       	ori	r28, 0x42	; 66
 3c2:	d2 50       	subi	r29, 0x02	; 2
 3c4:	a9 f1       	breq	.+106    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3c6:	c8 01       	movw	r24, r16
 3c8:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 3cc:	97 ff       	sbrs	r25, 7
 3ce:	07 c0       	rjmp	.+14     	; 0x3de <conv_int+0x94>
 3d0:	2f c0       	rjmp	.+94     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 3d2:	b6 fe       	sbrs	r11, 6
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <conv_int+0x90>
 3d6:	c2 60       	ori	r28, 0x02	; 2
 3d8:	01 c0       	rjmp	.+2      	; 0x3dc <conv_int+0x92>
 3da:	c2 61       	ori	r28, 0x12	; 18
 3dc:	da 2d       	mov	r29, r10
 3de:	81 2c       	mov	r8, r1
 3e0:	91 2c       	mov	r9, r1
 3e2:	54 01       	movw	r10, r8
 3e4:	20 ed       	ldi	r18, 0xD0	; 208
 3e6:	28 0f       	add	r18, r24
 3e8:	28 30       	cpi	r18, 0x08	; 8
 3ea:	80 f0       	brcs	.+32     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ec:	c4 ff       	sbrs	r28, 4
 3ee:	04 c0       	rjmp	.+8      	; 0x3f8 <conv_int+0xae>
 3f0:	b8 01       	movw	r22, r16
 3f2:	0e 94 58 04 	call	0x8b0	; 0x8b0 <ungetc>
 3f6:	19 c0       	rjmp	.+50     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f8:	2a 30       	cpi	r18, 0x0A	; 10
 3fa:	40 f0       	brcs	.+16     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fc:	c6 ff       	sbrs	r28, 6
 3fe:	f8 cf       	rjmp	.-16     	; 0x3f0 <conv_int+0xa6>
 400:	2f 7d       	andi	r18, 0xDF	; 223
 402:	3f ee       	ldi	r19, 0xEF	; 239
 404:	32 0f       	add	r19, r18
 406:	36 30       	cpi	r19, 0x06	; 6
 408:	98 f7       	brcc	.-26     	; 0x3f0 <conv_int+0xa6>
 40a:	27 50       	subi	r18, 0x07	; 7
 40c:	4c 2f       	mov	r20, r28
 40e:	c5 01       	movw	r24, r10
 410:	b4 01       	movw	r22, r8
 412:	0e 94 65 01 	call	0x2ca	; 0x2ca <mulacc>
 416:	4b 01       	movw	r8, r22
 418:	5c 01       	movw	r10, r24
 41a:	c2 60       	ori	r28, 0x02	; 2
 41c:	d1 50       	subi	r29, 0x01	; 1
 41e:	59 f0       	breq	.+22     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 420:	c8 01       	movw	r24, r16
 422:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 426:	97 ff       	sbrs	r25, 7
 428:	dd cf       	rjmp	.-70     	; 0x3e4 <conv_int+0x9a>
 42a:	c1 fd       	sbrc	r28, 1
 42c:	04 c0       	rjmp	.+8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42e:	aa cf       	rjmp	.-172    	; 0x384 <conv_int+0x3a>
 430:	81 2c       	mov	r8, r1
 432:	91 2c       	mov	r9, r1
 434:	54 01       	movw	r10, r8
 436:	c7 ff       	sbrs	r28, 7
 438:	08 c0       	rjmp	.+16     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 43a:	b0 94       	com	r11
 43c:	a0 94       	com	r10
 43e:	90 94       	com	r9
 440:	80 94       	com	r8
 442:	81 1c       	adc	r8, r1
 444:	91 1c       	adc	r9, r1
 446:	a1 1c       	adc	r10, r1
 448:	b1 1c       	adc	r11, r1
 44a:	2c 2f       	mov	r18, r28
 44c:	b5 01       	movw	r22, r10
 44e:	a4 01       	movw	r20, r8
 450:	c7 01       	movw	r24, r14
 452:	0e 94 59 01 	call	0x2b2	; 0x2b2 <putval>
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	df 91       	pop	r29
 45a:	cf 91       	pop	r28
 45c:	1f 91       	pop	r17
 45e:	0f 91       	pop	r16
 460:	ff 90       	pop	r15
 462:	ef 90       	pop	r14
 464:	bf 90       	pop	r11
 466:	af 90       	pop	r10
 468:	9f 90       	pop	r9
 46a:	8f 90       	pop	r8
 46c:	08 95       	ret

0000046e <conv_brk>:
 46e:	a0 e2       	ldi	r26, 0x20	; 32
 470:	b0 e0       	ldi	r27, 0x00	; 0
 472:	ed e3       	ldi	r30, 0x3D	; 61
 474:	f2 e0       	ldi	r31, 0x02	; 2
 476:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__prologue_saves__+0x6>
 47a:	5c 01       	movw	r10, r24
 47c:	96 2e       	mov	r9, r22
 47e:	7a 01       	movw	r14, r20
 480:	f9 01       	movw	r30, r18
 482:	8e 01       	movw	r16, r28
 484:	0f 5f       	subi	r16, 0xFF	; 255
 486:	1f 4f       	sbci	r17, 0xFF	; 255
 488:	68 01       	movw	r12, r16
 48a:	80 e2       	ldi	r24, 0x20	; 32
 48c:	d8 01       	movw	r26, r16
 48e:	1d 92       	st	X+, r1
 490:	8a 95       	dec	r24
 492:	e9 f7       	brne	.-6      	; 0x48e <conv_brk+0x20>
 494:	d5 01       	movw	r26, r10
 496:	13 96       	adiw	r26, 0x03	; 3
 498:	8c 90       	ld	r8, X
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	61 2c       	mov	r6, r1
 4a0:	71 2c       	mov	r7, r1
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	61 e0       	ldi	r22, 0x01	; 1
 4a6:	70 e0       	ldi	r23, 0x00	; 0
 4a8:	83 fc       	sbrc	r8, 3
 4aa:	25 91       	lpm	r18, Z+
 4ac:	83 fe       	sbrs	r8, 3
 4ae:	21 91       	ld	r18, Z+
 4b0:	8f 01       	movw	r16, r30
 4b2:	52 2e       	mov	r5, r18
 4b4:	21 11       	cpse	r18, r1
 4b6:	03 c0       	rjmp	.+6      	; 0x4be <conv_brk+0x50>
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	92 c0       	rjmp	.+292    	; 0x5e2 <conv_brk+0x174>
 4be:	2e 35       	cpi	r18, 0x5E	; 94
 4c0:	11 f4       	brne	.+4      	; 0x4c6 <conv_brk+0x58>
 4c2:	00 97       	sbiw	r24, 0x00	; 0
 4c4:	51 f1       	breq	.+84     	; 0x51a <conv_brk+0xac>
 4c6:	43 2f       	mov	r20, r19
 4c8:	50 e0       	ldi	r21, 0x00	; 0
 4ca:	48 17       	cp	r20, r24
 4cc:	59 07       	cpc	r21, r25
 4ce:	3c f4       	brge	.+14     	; 0x4de <conv_brk+0x70>
 4d0:	2d 35       	cpi	r18, 0x5D	; 93
 4d2:	59 f1       	breq	.+86     	; 0x52a <conv_brk+0xbc>
 4d4:	2d 32       	cpi	r18, 0x2D	; 45
 4d6:	19 f4       	brne	.+6      	; 0x4de <conv_brk+0x70>
 4d8:	77 20       	and	r7, r7
 4da:	09 f1       	breq	.+66     	; 0x51e <conv_brk+0xb0>
 4dc:	03 c0       	rjmp	.+6      	; 0x4e4 <conv_brk+0x76>
 4de:	77 20       	and	r7, r7
 4e0:	09 f4       	brne	.+2      	; 0x4e4 <conv_brk+0x76>
 4e2:	6a c0       	rjmp	.+212    	; 0x5b8 <conv_brk+0x14a>
 4e4:	45 2d       	mov	r20, r5
 4e6:	46 95       	lsr	r20
 4e8:	46 95       	lsr	r20
 4ea:	46 95       	lsr	r20
 4ec:	d6 01       	movw	r26, r12
 4ee:	a4 0f       	add	r26, r20
 4f0:	b1 1d       	adc	r27, r1
 4f2:	45 2d       	mov	r20, r5
 4f4:	47 70       	andi	r20, 0x07	; 7
 4f6:	8b 01       	movw	r16, r22
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <conv_brk+0x90>
 4fa:	00 0f       	add	r16, r16
 4fc:	11 1f       	adc	r17, r17
 4fe:	4a 95       	dec	r20
 500:	e2 f7       	brpl	.-8      	; 0x4fa <conv_brk+0x8c>
 502:	a8 01       	movw	r20, r16
 504:	5c 91       	ld	r21, X
 506:	45 2b       	or	r20, r21
 508:	4c 93       	st	X, r20
 50a:	65 14       	cp	r6, r5
 50c:	59 f0       	breq	.+22     	; 0x524 <conv_brk+0xb6>
 50e:	56 14       	cp	r5, r6
 510:	10 f4       	brcc	.+4      	; 0x516 <conv_brk+0xa8>
 512:	53 94       	inc	r5
 514:	e7 cf       	rjmp	.-50     	; 0x4e4 <conv_brk+0x76>
 516:	5a 94       	dec	r5
 518:	e5 cf       	rjmp	.-54     	; 0x4e4 <conv_brk+0x76>
 51a:	31 e0       	ldi	r19, 0x01	; 1
 51c:	04 c0       	rjmp	.+8      	; 0x526 <conv_brk+0xb8>
 51e:	77 24       	eor	r7, r7
 520:	73 94       	inc	r7
 522:	01 c0       	rjmp	.+2      	; 0x526 <conv_brk+0xb8>
 524:	71 2c       	mov	r7, r1
 526:	01 96       	adiw	r24, 0x01	; 1
 528:	bf cf       	rjmp	.-130    	; 0x4a8 <conv_brk+0x3a>
 52a:	77 20       	and	r7, r7
 52c:	19 f0       	breq	.+6      	; 0x534 <conv_brk+0xc6>
 52e:	8e 81       	ldd	r24, Y+6	; 0x06
 530:	80 62       	ori	r24, 0x20	; 32
 532:	8e 83       	std	Y+6, r24	; 0x06
 534:	31 11       	cpse	r19, r1
 536:	03 c0       	rjmp	.+6      	; 0x53e <conv_brk+0xd0>
 538:	88 24       	eor	r8, r8
 53a:	83 94       	inc	r8
 53c:	17 c0       	rjmp	.+46     	; 0x56c <conv_brk+0xfe>
 53e:	f6 01       	movw	r30, r12
 540:	9e 01       	movw	r18, r28
 542:	2f 5d       	subi	r18, 0xDF	; 223
 544:	3f 4f       	sbci	r19, 0xFF	; 255
 546:	80 81       	ld	r24, Z
 548:	80 95       	com	r24
 54a:	81 93       	st	Z+, r24
 54c:	2e 17       	cp	r18, r30
 54e:	3f 07       	cpc	r19, r31
 550:	d1 f7       	brne	.-12     	; 0x546 <conv_brk+0xd8>
 552:	f2 cf       	rjmp	.-28     	; 0x538 <conv_brk+0xca>
 554:	e1 14       	cp	r14, r1
 556:	f1 04       	cpc	r15, r1
 558:	29 f0       	breq	.+10     	; 0x564 <conv_brk+0xf6>
 55a:	d7 01       	movw	r26, r14
 55c:	8c 93       	st	X, r24
 55e:	f7 01       	movw	r30, r14
 560:	31 96       	adiw	r30, 0x01	; 1
 562:	7f 01       	movw	r14, r30
 564:	9a 94       	dec	r9
 566:	81 2c       	mov	r8, r1
 568:	99 20       	and	r9, r9
 56a:	f9 f0       	breq	.+62     	; 0x5aa <conv_brk+0x13c>
 56c:	c5 01       	movw	r24, r10
 56e:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 572:	97 fd       	sbrc	r25, 7
 574:	18 c0       	rjmp	.+48     	; 0x5a6 <conv_brk+0x138>
 576:	fc 01       	movw	r30, r24
 578:	ff 27       	eor	r31, r31
 57a:	23 e0       	ldi	r18, 0x03	; 3
 57c:	f5 95       	asr	r31
 57e:	e7 95       	ror	r30
 580:	2a 95       	dec	r18
 582:	e1 f7       	brne	.-8      	; 0x57c <conv_brk+0x10e>
 584:	ec 0d       	add	r30, r12
 586:	fd 1d       	adc	r31, r13
 588:	20 81       	ld	r18, Z
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	ac 01       	movw	r20, r24
 58e:	47 70       	andi	r20, 0x07	; 7
 590:	55 27       	eor	r21, r21
 592:	02 c0       	rjmp	.+4      	; 0x598 <conv_brk+0x12a>
 594:	35 95       	asr	r19
 596:	27 95       	ror	r18
 598:	4a 95       	dec	r20
 59a:	e2 f7       	brpl	.-8      	; 0x594 <conv_brk+0x126>
 59c:	20 fd       	sbrc	r18, 0
 59e:	da cf       	rjmp	.-76     	; 0x554 <conv_brk+0xe6>
 5a0:	b5 01       	movw	r22, r10
 5a2:	0e 94 58 04 	call	0x8b0	; 0x8b0 <ungetc>
 5a6:	81 10       	cpse	r8, r1
 5a8:	87 cf       	rjmp	.-242    	; 0x4b8 <conv_brk+0x4a>
 5aa:	e1 14       	cp	r14, r1
 5ac:	f1 04       	cpc	r15, r1
 5ae:	11 f0       	breq	.+4      	; 0x5b4 <conv_brk+0x146>
 5b0:	d7 01       	movw	r26, r14
 5b2:	1c 92       	st	X, r1
 5b4:	c8 01       	movw	r24, r16
 5b6:	15 c0       	rjmp	.+42     	; 0x5e2 <conv_brk+0x174>
 5b8:	42 2f       	mov	r20, r18
 5ba:	46 95       	lsr	r20
 5bc:	46 95       	lsr	r20
 5be:	46 95       	lsr	r20
 5c0:	d6 01       	movw	r26, r12
 5c2:	a4 0f       	add	r26, r20
 5c4:	b1 1d       	adc	r27, r1
 5c6:	42 2f       	mov	r20, r18
 5c8:	47 70       	andi	r20, 0x07	; 7
 5ca:	8b 01       	movw	r16, r22
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <conv_brk+0x164>
 5ce:	00 0f       	add	r16, r16
 5d0:	11 1f       	adc	r17, r17
 5d2:	4a 95       	dec	r20
 5d4:	e2 f7       	brpl	.-8      	; 0x5ce <conv_brk+0x160>
 5d6:	a8 01       	movw	r20, r16
 5d8:	5c 91       	ld	r21, X
 5da:	45 2b       	or	r20, r21
 5dc:	4c 93       	st	X, r20
 5de:	62 2e       	mov	r6, r18
 5e0:	a2 cf       	rjmp	.-188    	; 0x526 <conv_brk+0xb8>
 5e2:	a0 96       	adiw	r28, 0x20	; 32
 5e4:	ef e0       	ldi	r30, 0x0F	; 15
 5e6:	0c 94 93 04 	jmp	0x926	; 0x926 <__epilogue_restores__+0x6>

000005ea <vfscanf>:
 5ea:	a0 e0       	ldi	r26, 0x00	; 0
 5ec:	b0 e0       	ldi	r27, 0x00	; 0
 5ee:	eb ef       	ldi	r30, 0xFB	; 251
 5f0:	f2 e0       	ldi	r31, 0x02	; 2
 5f2:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__prologue_saves__+0x6>
 5f6:	6c 01       	movw	r12, r24
 5f8:	eb 01       	movw	r28, r22
 5fa:	5a 01       	movw	r10, r20
 5fc:	fc 01       	movw	r30, r24
 5fe:	17 82       	std	Z+7, r1	; 0x07
 600:	16 82       	std	Z+6, r1	; 0x06
 602:	51 2c       	mov	r5, r1
 604:	f6 01       	movw	r30, r12
 606:	e3 80       	ldd	r14, Z+3	; 0x03
 608:	fe 01       	movw	r30, r28
 60a:	e3 fc       	sbrc	r14, 3
 60c:	85 91       	lpm	r24, Z+
 60e:	e3 fe       	sbrs	r14, 3
 610:	81 91       	ld	r24, Z+
 612:	18 2f       	mov	r17, r24
 614:	ef 01       	movw	r28, r30
 616:	88 23       	and	r24, r24
 618:	09 f4       	brne	.+2      	; 0x61c <vfscanf+0x32>
 61a:	ee c0       	rjmp	.+476    	; 0x7f8 <vfscanf+0x20e>
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	0e 94 06 04 	call	0x80c	; 0x80c <isspace>
 622:	89 2b       	or	r24, r25
 624:	21 f0       	breq	.+8      	; 0x62e <vfscanf+0x44>
 626:	c6 01       	movw	r24, r12
 628:	0e 94 8c 01 	call	0x318	; 0x318 <skip_spaces>
 62c:	eb cf       	rjmp	.-42     	; 0x604 <vfscanf+0x1a>
 62e:	15 32       	cpi	r17, 0x25	; 37
 630:	41 f4       	brne	.+16     	; 0x642 <vfscanf+0x58>
 632:	fe 01       	movw	r30, r28
 634:	e3 fc       	sbrc	r14, 3
 636:	15 91       	lpm	r17, Z+
 638:	e3 fe       	sbrs	r14, 3
 63a:	11 91       	ld	r17, Z+
 63c:	ef 01       	movw	r28, r30
 63e:	15 32       	cpi	r17, 0x25	; 37
 640:	81 f4       	brne	.+32     	; 0x662 <vfscanf+0x78>
 642:	c6 01       	movw	r24, r12
 644:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 648:	97 fd       	sbrc	r25, 7
 64a:	d4 c0       	rjmp	.+424    	; 0x7f4 <vfscanf+0x20a>
 64c:	41 2f       	mov	r20, r17
 64e:	50 e0       	ldi	r21, 0x00	; 0
 650:	9c 01       	movw	r18, r24
 652:	33 27       	eor	r19, r19
 654:	24 17       	cp	r18, r20
 656:	35 07       	cpc	r19, r21
 658:	a9 f2       	breq	.-86     	; 0x604 <vfscanf+0x1a>
 65a:	b6 01       	movw	r22, r12
 65c:	0e 94 58 04 	call	0x8b0	; 0x8b0 <ungetc>
 660:	cb c0       	rjmp	.+406    	; 0x7f8 <vfscanf+0x20e>
 662:	1a 32       	cpi	r17, 0x2A	; 42
 664:	39 f4       	brne	.+14     	; 0x674 <vfscanf+0x8a>
 666:	e3 fc       	sbrc	r14, 3
 668:	15 91       	lpm	r17, Z+
 66a:	e3 fe       	sbrs	r14, 3
 66c:	11 91       	ld	r17, Z+
 66e:	ef 01       	movw	r28, r30
 670:	01 e0       	ldi	r16, 0x01	; 1
 672:	01 c0       	rjmp	.+2      	; 0x676 <vfscanf+0x8c>
 674:	00 e0       	ldi	r16, 0x00	; 0
 676:	f1 2c       	mov	r15, r1
 678:	20 ed       	ldi	r18, 0xD0	; 208
 67a:	21 0f       	add	r18, r17
 67c:	2a 30       	cpi	r18, 0x0A	; 10
 67e:	80 f4       	brcc	.+32     	; 0x6a0 <vfscanf+0xb6>
 680:	02 60       	ori	r16, 0x02	; 2
 682:	6f 2d       	mov	r22, r15
 684:	70 e0       	ldi	r23, 0x00	; 0
 686:	80 e0       	ldi	r24, 0x00	; 0
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	40 e2       	ldi	r20, 0x20	; 32
 68c:	0e 94 65 01 	call	0x2ca	; 0x2ca <mulacc>
 690:	f6 2e       	mov	r15, r22
 692:	fe 01       	movw	r30, r28
 694:	e3 fc       	sbrc	r14, 3
 696:	15 91       	lpm	r17, Z+
 698:	e3 fe       	sbrs	r14, 3
 69a:	11 91       	ld	r17, Z+
 69c:	ef 01       	movw	r28, r30
 69e:	ec cf       	rjmp	.-40     	; 0x678 <vfscanf+0x8e>
 6a0:	01 ff       	sbrs	r16, 1
 6a2:	03 c0       	rjmp	.+6      	; 0x6aa <vfscanf+0xc0>
 6a4:	f1 10       	cpse	r15, r1
 6a6:	03 c0       	rjmp	.+6      	; 0x6ae <vfscanf+0xc4>
 6a8:	a7 c0       	rjmp	.+334    	; 0x7f8 <vfscanf+0x20e>
 6aa:	ff 24       	eor	r15, r15
 6ac:	fa 94       	dec	r15
 6ae:	18 36       	cpi	r17, 0x68	; 104
 6b0:	19 f0       	breq	.+6      	; 0x6b8 <vfscanf+0xce>
 6b2:	1c 36       	cpi	r17, 0x6C	; 108
 6b4:	51 f0       	breq	.+20     	; 0x6ca <vfscanf+0xe0>
 6b6:	10 c0       	rjmp	.+32     	; 0x6d8 <vfscanf+0xee>
 6b8:	fe 01       	movw	r30, r28
 6ba:	e3 fc       	sbrc	r14, 3
 6bc:	15 91       	lpm	r17, Z+
 6be:	e3 fe       	sbrs	r14, 3
 6c0:	11 91       	ld	r17, Z+
 6c2:	ef 01       	movw	r28, r30
 6c4:	18 36       	cpi	r17, 0x68	; 104
 6c6:	41 f4       	brne	.+16     	; 0x6d8 <vfscanf+0xee>
 6c8:	08 60       	ori	r16, 0x08	; 8
 6ca:	04 60       	ori	r16, 0x04	; 4
 6cc:	fe 01       	movw	r30, r28
 6ce:	e3 fc       	sbrc	r14, 3
 6d0:	15 91       	lpm	r17, Z+
 6d2:	e3 fe       	sbrs	r14, 3
 6d4:	11 91       	ld	r17, Z+
 6d6:	ef 01       	movw	r28, r30
 6d8:	11 23       	and	r17, r17
 6da:	09 f4       	brne	.+2      	; 0x6de <vfscanf+0xf4>
 6dc:	8d c0       	rjmp	.+282    	; 0x7f8 <vfscanf+0x20e>
 6de:	61 2f       	mov	r22, r17
 6e0:	70 e0       	ldi	r23, 0x00	; 0
 6e2:	88 e6       	ldi	r24, 0x68	; 104
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	0e 94 0f 04 	call	0x81e	; 0x81e <strchr_P>
 6ea:	89 2b       	or	r24, r25
 6ec:	09 f4       	brne	.+2      	; 0x6f0 <vfscanf+0x106>
 6ee:	84 c0       	rjmp	.+264    	; 0x7f8 <vfscanf+0x20e>
 6f0:	00 fd       	sbrc	r16, 0
 6f2:	07 c0       	rjmp	.+14     	; 0x702 <vfscanf+0x118>
 6f4:	f5 01       	movw	r30, r10
 6f6:	80 80       	ld	r8, Z
 6f8:	91 80       	ldd	r9, Z+1	; 0x01
 6fa:	c5 01       	movw	r24, r10
 6fc:	02 96       	adiw	r24, 0x02	; 2
 6fe:	5c 01       	movw	r10, r24
 700:	02 c0       	rjmp	.+4      	; 0x706 <vfscanf+0x11c>
 702:	81 2c       	mov	r8, r1
 704:	91 2c       	mov	r9, r1
 706:	1e 36       	cpi	r17, 0x6E	; 110
 708:	51 f4       	brne	.+20     	; 0x71e <vfscanf+0x134>
 70a:	f6 01       	movw	r30, r12
 70c:	46 81       	ldd	r20, Z+6	; 0x06
 70e:	57 81       	ldd	r21, Z+7	; 0x07
 710:	60 e0       	ldi	r22, 0x00	; 0
 712:	70 e0       	ldi	r23, 0x00	; 0
 714:	20 2f       	mov	r18, r16
 716:	c4 01       	movw	r24, r8
 718:	0e 94 59 01 	call	0x2b2	; 0x2b2 <putval>
 71c:	73 cf       	rjmp	.-282    	; 0x604 <vfscanf+0x1a>
 71e:	13 36       	cpi	r17, 0x63	; 99
 720:	a9 f4       	brne	.+42     	; 0x74c <vfscanf+0x162>
 722:	01 fd       	sbrc	r16, 1
 724:	02 c0       	rjmp	.+4      	; 0x72a <vfscanf+0x140>
 726:	ff 24       	eor	r15, r15
 728:	f3 94       	inc	r15
 72a:	c6 01       	movw	r24, r12
 72c:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 730:	97 fd       	sbrc	r25, 7
 732:	60 c0       	rjmp	.+192    	; 0x7f4 <vfscanf+0x20a>
 734:	81 14       	cp	r8, r1
 736:	91 04       	cpc	r9, r1
 738:	29 f0       	breq	.+10     	; 0x744 <vfscanf+0x15a>
 73a:	f4 01       	movw	r30, r8
 73c:	80 83       	st	Z, r24
 73e:	c4 01       	movw	r24, r8
 740:	01 96       	adiw	r24, 0x01	; 1
 742:	4c 01       	movw	r8, r24
 744:	fa 94       	dec	r15
 746:	f1 10       	cpse	r15, r1
 748:	f0 cf       	rjmp	.-32     	; 0x72a <vfscanf+0x140>
 74a:	50 c0       	rjmp	.+160    	; 0x7ec <vfscanf+0x202>
 74c:	1b 35       	cpi	r17, 0x5B	; 91
 74e:	59 f4       	brne	.+22     	; 0x766 <vfscanf+0x17c>
 750:	9e 01       	movw	r18, r28
 752:	a4 01       	movw	r20, r8
 754:	6f 2d       	mov	r22, r15
 756:	c6 01       	movw	r24, r12
 758:	0e 94 37 02 	call	0x46e	; 0x46e <conv_brk>
 75c:	ec 01       	movw	r28, r24
 75e:	89 2b       	or	r24, r25
 760:	09 f0       	breq	.+2      	; 0x764 <vfscanf+0x17a>
 762:	44 c0       	rjmp	.+136    	; 0x7ec <vfscanf+0x202>
 764:	3e c0       	rjmp	.+124    	; 0x7e2 <vfscanf+0x1f8>
 766:	c6 01       	movw	r24, r12
 768:	0e 94 8c 01 	call	0x318	; 0x318 <skip_spaces>
 76c:	97 fd       	sbrc	r25, 7
 76e:	42 c0       	rjmp	.+132    	; 0x7f4 <vfscanf+0x20a>
 770:	1f 36       	cpi	r17, 0x6F	; 111
 772:	61 f1       	breq	.+88     	; 0x7cc <vfscanf+0x1e2>
 774:	28 f4       	brcc	.+10     	; 0x780 <vfscanf+0x196>
 776:	14 36       	cpi	r17, 0x64	; 100
 778:	39 f1       	breq	.+78     	; 0x7c8 <vfscanf+0x1de>
 77a:	19 36       	cpi	r17, 0x69	; 105
 77c:	51 f1       	breq	.+84     	; 0x7d2 <vfscanf+0x1e8>
 77e:	28 c0       	rjmp	.+80     	; 0x7d0 <vfscanf+0x1e6>
 780:	13 37       	cpi	r17, 0x73	; 115
 782:	71 f0       	breq	.+28     	; 0x7a0 <vfscanf+0x1b6>
 784:	15 37       	cpi	r17, 0x75	; 117
 786:	01 f1       	breq	.+64     	; 0x7c8 <vfscanf+0x1de>
 788:	23 c0       	rjmp	.+70     	; 0x7d0 <vfscanf+0x1e6>
 78a:	81 14       	cp	r8, r1
 78c:	91 04       	cpc	r9, r1
 78e:	29 f0       	breq	.+10     	; 0x79a <vfscanf+0x1b0>
 790:	f4 01       	movw	r30, r8
 792:	60 82       	st	Z, r6
 794:	c4 01       	movw	r24, r8
 796:	01 96       	adiw	r24, 0x01	; 1
 798:	4c 01       	movw	r8, r24
 79a:	fa 94       	dec	r15
 79c:	ff 20       	and	r15, r15
 79e:	71 f0       	breq	.+28     	; 0x7bc <vfscanf+0x1d2>
 7a0:	c6 01       	movw	r24, r12
 7a2:	0e 94 1a 04 	call	0x834	; 0x834 <fgetc>
 7a6:	3c 01       	movw	r6, r24
 7a8:	97 fd       	sbrc	r25, 7
 7aa:	08 c0       	rjmp	.+16     	; 0x7bc <vfscanf+0x1d2>
 7ac:	0e 94 06 04 	call	0x80c	; 0x80c <isspace>
 7b0:	89 2b       	or	r24, r25
 7b2:	59 f3       	breq	.-42     	; 0x78a <vfscanf+0x1a0>
 7b4:	b6 01       	movw	r22, r12
 7b6:	c3 01       	movw	r24, r6
 7b8:	0e 94 58 04 	call	0x8b0	; 0x8b0 <ungetc>
 7bc:	81 14       	cp	r8, r1
 7be:	91 04       	cpc	r9, r1
 7c0:	a9 f0       	breq	.+42     	; 0x7ec <vfscanf+0x202>
 7c2:	f4 01       	movw	r30, r8
 7c4:	10 82       	st	Z, r1
 7c6:	12 c0       	rjmp	.+36     	; 0x7ec <vfscanf+0x202>
 7c8:	00 62       	ori	r16, 0x20	; 32
 7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <vfscanf+0x1e8>
 7cc:	00 61       	ori	r16, 0x10	; 16
 7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <vfscanf+0x1e8>
 7d0:	00 64       	ori	r16, 0x40	; 64
 7d2:	20 2f       	mov	r18, r16
 7d4:	a4 01       	movw	r20, r8
 7d6:	6f 2d       	mov	r22, r15
 7d8:	c6 01       	movw	r24, r12
 7da:	0e 94 a5 01 	call	0x34a	; 0x34a <conv_int>
 7de:	81 11       	cpse	r24, r1
 7e0:	05 c0       	rjmp	.+10     	; 0x7ec <vfscanf+0x202>
 7e2:	f6 01       	movw	r30, r12
 7e4:	83 81       	ldd	r24, Z+3	; 0x03
 7e6:	80 73       	andi	r24, 0x30	; 48
 7e8:	29 f4       	brne	.+10     	; 0x7f4 <vfscanf+0x20a>
 7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <vfscanf+0x20e>
 7ec:	00 fd       	sbrc	r16, 0
 7ee:	0a cf       	rjmp	.-492    	; 0x604 <vfscanf+0x1a>
 7f0:	53 94       	inc	r5
 7f2:	08 cf       	rjmp	.-496    	; 0x604 <vfscanf+0x1a>
 7f4:	55 20       	and	r5, r5
 7f6:	19 f0       	breq	.+6      	; 0x7fe <vfscanf+0x214>
 7f8:	85 2d       	mov	r24, r5
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfscanf+0x218>
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	9f ef       	ldi	r25, 0xFF	; 255
 802:	cd b7       	in	r28, 0x3d	; 61
 804:	de b7       	in	r29, 0x3e	; 62
 806:	ef e0       	ldi	r30, 0x0F	; 15
 808:	0c 94 93 04 	jmp	0x926	; 0x926 <__epilogue_restores__+0x6>

0000080c <isspace>:
 80c:	91 11       	cpse	r25, r1
 80e:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__ctype_isfalse>
 812:	80 32       	cpi	r24, 0x20	; 32
 814:	19 f0       	breq	.+6      	; 0x81c <isspace+0x10>
 816:	89 50       	subi	r24, 0x09	; 9
 818:	85 50       	subi	r24, 0x05	; 5
 81a:	c8 f7       	brcc	.-14     	; 0x80e <isspace+0x2>
 81c:	08 95       	ret

0000081e <strchr_P>:
 81e:	fc 01       	movw	r30, r24
 820:	05 90       	lpm	r0, Z+
 822:	06 16       	cp	r0, r22
 824:	21 f0       	breq	.+8      	; 0x82e <strchr_P+0x10>
 826:	00 20       	and	r0, r0
 828:	d9 f7       	brne	.-10     	; 0x820 <strchr_P+0x2>
 82a:	c0 01       	movw	r24, r0
 82c:	08 95       	ret
 82e:	31 97       	sbiw	r30, 0x01	; 1
 830:	cf 01       	movw	r24, r30
 832:	08 95       	ret

00000834 <fgetc>:
 834:	cf 93       	push	r28
 836:	df 93       	push	r29
 838:	ec 01       	movw	r28, r24
 83a:	2b 81       	ldd	r18, Y+3	; 0x03
 83c:	20 ff       	sbrs	r18, 0
 83e:	33 c0       	rjmp	.+102    	; 0x8a6 <fgetc+0x72>
 840:	26 ff       	sbrs	r18, 6
 842:	0a c0       	rjmp	.+20     	; 0x858 <fgetc+0x24>
 844:	2f 7b       	andi	r18, 0xBF	; 191
 846:	2b 83       	std	Y+3, r18	; 0x03
 848:	8e 81       	ldd	r24, Y+6	; 0x06
 84a:	9f 81       	ldd	r25, Y+7	; 0x07
 84c:	01 96       	adiw	r24, 0x01	; 1
 84e:	9f 83       	std	Y+7, r25	; 0x07
 850:	8e 83       	std	Y+6, r24	; 0x06
 852:	8a 81       	ldd	r24, Y+2	; 0x02
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	29 c0       	rjmp	.+82     	; 0x8aa <fgetc+0x76>
 858:	22 ff       	sbrs	r18, 2
 85a:	0f c0       	rjmp	.+30     	; 0x87a <fgetc+0x46>
 85c:	e8 81       	ld	r30, Y
 85e:	f9 81       	ldd	r31, Y+1	; 0x01
 860:	80 81       	ld	r24, Z
 862:	08 2e       	mov	r0, r24
 864:	00 0c       	add	r0, r0
 866:	99 0b       	sbc	r25, r25
 868:	00 97       	sbiw	r24, 0x00	; 0
 86a:	19 f4       	brne	.+6      	; 0x872 <fgetc+0x3e>
 86c:	20 62       	ori	r18, 0x20	; 32
 86e:	2b 83       	std	Y+3, r18	; 0x03
 870:	1a c0       	rjmp	.+52     	; 0x8a6 <fgetc+0x72>
 872:	31 96       	adiw	r30, 0x01	; 1
 874:	f9 83       	std	Y+1, r31	; 0x01
 876:	e8 83       	st	Y, r30
 878:	0e c0       	rjmp	.+28     	; 0x896 <fgetc+0x62>
 87a:	ea 85       	ldd	r30, Y+10	; 0x0a
 87c:	fb 85       	ldd	r31, Y+11	; 0x0b
 87e:	09 95       	icall
 880:	97 ff       	sbrs	r25, 7
 882:	09 c0       	rjmp	.+18     	; 0x896 <fgetc+0x62>
 884:	2b 81       	ldd	r18, Y+3	; 0x03
 886:	01 96       	adiw	r24, 0x01	; 1
 888:	11 f0       	breq	.+4      	; 0x88e <fgetc+0x5a>
 88a:	80 e2       	ldi	r24, 0x20	; 32
 88c:	01 c0       	rjmp	.+2      	; 0x890 <fgetc+0x5c>
 88e:	80 e1       	ldi	r24, 0x10	; 16
 890:	82 2b       	or	r24, r18
 892:	8b 83       	std	Y+3, r24	; 0x03
 894:	08 c0       	rjmp	.+16     	; 0x8a6 <fgetc+0x72>
 896:	2e 81       	ldd	r18, Y+6	; 0x06
 898:	3f 81       	ldd	r19, Y+7	; 0x07
 89a:	2f 5f       	subi	r18, 0xFF	; 255
 89c:	3f 4f       	sbci	r19, 0xFF	; 255
 89e:	3f 83       	std	Y+7, r19	; 0x07
 8a0:	2e 83       	std	Y+6, r18	; 0x06
 8a2:	99 27       	eor	r25, r25
 8a4:	02 c0       	rjmp	.+4      	; 0x8aa <fgetc+0x76>
 8a6:	8f ef       	ldi	r24, 0xFF	; 255
 8a8:	9f ef       	ldi	r25, 0xFF	; 255
 8aa:	df 91       	pop	r29
 8ac:	cf 91       	pop	r28
 8ae:	08 95       	ret

000008b0 <ungetc>:
 8b0:	fb 01       	movw	r30, r22
 8b2:	23 81       	ldd	r18, Z+3	; 0x03
 8b4:	20 ff       	sbrs	r18, 0
 8b6:	12 c0       	rjmp	.+36     	; 0x8dc <ungetc+0x2c>
 8b8:	26 fd       	sbrc	r18, 6
 8ba:	10 c0       	rjmp	.+32     	; 0x8dc <ungetc+0x2c>
 8bc:	8f 3f       	cpi	r24, 0xFF	; 255
 8be:	3f ef       	ldi	r19, 0xFF	; 255
 8c0:	93 07       	cpc	r25, r19
 8c2:	61 f0       	breq	.+24     	; 0x8dc <ungetc+0x2c>
 8c4:	82 83       	std	Z+2, r24	; 0x02
 8c6:	2f 7d       	andi	r18, 0xDF	; 223
 8c8:	20 64       	ori	r18, 0x40	; 64
 8ca:	23 83       	std	Z+3, r18	; 0x03
 8cc:	26 81       	ldd	r18, Z+6	; 0x06
 8ce:	37 81       	ldd	r19, Z+7	; 0x07
 8d0:	21 50       	subi	r18, 0x01	; 1
 8d2:	31 09       	sbc	r19, r1
 8d4:	37 83       	std	Z+7, r19	; 0x07
 8d6:	26 83       	std	Z+6, r18	; 0x06
 8d8:	99 27       	eor	r25, r25
 8da:	08 95       	ret
 8dc:	8f ef       	ldi	r24, 0xFF	; 255
 8de:	9f ef       	ldi	r25, 0xFF	; 255
 8e0:	08 95       	ret

000008e2 <__ctype_isfalse>:
 8e2:	99 27       	eor	r25, r25
 8e4:	88 27       	eor	r24, r24

000008e6 <__ctype_istrue>:
 8e6:	08 95       	ret

000008e8 <__prologue_saves__>:
 8e8:	2f 92       	push	r2
 8ea:	3f 92       	push	r3
 8ec:	4f 92       	push	r4
 8ee:	5f 92       	push	r5
 8f0:	6f 92       	push	r6
 8f2:	7f 92       	push	r7
 8f4:	8f 92       	push	r8
 8f6:	9f 92       	push	r9
 8f8:	af 92       	push	r10
 8fa:	bf 92       	push	r11
 8fc:	cf 92       	push	r12
 8fe:	df 92       	push	r13
 900:	ef 92       	push	r14
 902:	ff 92       	push	r15
 904:	0f 93       	push	r16
 906:	1f 93       	push	r17
 908:	cf 93       	push	r28
 90a:	df 93       	push	r29
 90c:	cd b7       	in	r28, 0x3d	; 61
 90e:	de b7       	in	r29, 0x3e	; 62
 910:	ca 1b       	sub	r28, r26
 912:	db 0b       	sbc	r29, r27
 914:	0f b6       	in	r0, 0x3f	; 63
 916:	f8 94       	cli
 918:	de bf       	out	0x3e, r29	; 62
 91a:	0f be       	out	0x3f, r0	; 63
 91c:	cd bf       	out	0x3d, r28	; 61
 91e:	09 94       	ijmp

00000920 <__epilogue_restores__>:
 920:	2a 88       	ldd	r2, Y+18	; 0x12
 922:	39 88       	ldd	r3, Y+17	; 0x11
 924:	48 88       	ldd	r4, Y+16	; 0x10
 926:	5f 84       	ldd	r5, Y+15	; 0x0f
 928:	6e 84       	ldd	r6, Y+14	; 0x0e
 92a:	7d 84       	ldd	r7, Y+13	; 0x0d
 92c:	8c 84       	ldd	r8, Y+12	; 0x0c
 92e:	9b 84       	ldd	r9, Y+11	; 0x0b
 930:	aa 84       	ldd	r10, Y+10	; 0x0a
 932:	b9 84       	ldd	r11, Y+9	; 0x09
 934:	c8 84       	ldd	r12, Y+8	; 0x08
 936:	df 80       	ldd	r13, Y+7	; 0x07
 938:	ee 80       	ldd	r14, Y+6	; 0x06
 93a:	fd 80       	ldd	r15, Y+5	; 0x05
 93c:	0c 81       	ldd	r16, Y+4	; 0x04
 93e:	1b 81       	ldd	r17, Y+3	; 0x03
 940:	aa 81       	ldd	r26, Y+2	; 0x02
 942:	b9 81       	ldd	r27, Y+1	; 0x01
 944:	ce 0f       	add	r28, r30
 946:	d1 1d       	adc	r29, r1
 948:	0f b6       	in	r0, 0x3f	; 63
 94a:	f8 94       	cli
 94c:	de bf       	out	0x3e, r29	; 62
 94e:	0f be       	out	0x3f, r0	; 63
 950:	cd bf       	out	0x3d, r28	; 61
 952:	ed 01       	movw	r28, r26
 954:	08 95       	ret

00000956 <_exit>:
 956:	f8 94       	cli

00000958 <__stop_program>:
 958:	ff cf       	rjmp	.-2      	; 0x958 <__stop_program>
