
zad2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000266  00800100  000021c4  00002258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800366  00800366  000024be  2**0
                  ALLOC
  3 .stab         000013b0  00000000  00000000  000024c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001022  00000000  00000000  00003870  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00004892  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000048a4  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000048e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00004ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  0000547a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00005494  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__ctors_end>
       4:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
       8:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
       c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      10:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      14:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      18:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      1c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      20:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      24:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      28:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      2c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      30:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      34:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      38:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      3c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      40:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      44:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      48:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      4c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      50:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      54:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      58:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      5c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      60:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      64:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2529>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     17a:	47 00                                               G.

0000017c <pstr_an>:
     17c:	61 6e 00                                            an.

0000017f <pstr_nfinity>:
     17f:	6e 66 69 6e 69 74 79 00                             nfinity.

00000187 <pwr_m10>:
     187:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     197:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000019f <pwr_p10>:
     19f:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1af:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000001b8 <__ctors_end>:
     1b8:	11 24       	eor	r1, r1
     1ba:	1f be       	out	0x3f, r1	; 63
     1bc:	cf ef       	ldi	r28, 0xFF	; 255
     1be:	d8 e0       	ldi	r29, 0x08	; 8
     1c0:	de bf       	out	0x3e, r29	; 62
     1c2:	cd bf       	out	0x3d, r28	; 61

000001c4 <__do_copy_data>:
     1c4:	13 e0       	ldi	r17, 0x03	; 3
     1c6:	a0 e0       	ldi	r26, 0x00	; 0
     1c8:	b1 e0       	ldi	r27, 0x01	; 1
     1ca:	e4 ec       	ldi	r30, 0xC4	; 196
     1cc:	f1 e2       	ldi	r31, 0x21	; 33
     1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <__do_copy_data+0x10>
     1d0:	05 90       	lpm	r0, Z+
     1d2:	0d 92       	st	X+, r0
     1d4:	a6 36       	cpi	r26, 0x66	; 102
     1d6:	b1 07       	cpc	r27, r17
     1d8:	d9 f7       	brne	.-10     	; 0x1d0 <__do_copy_data+0xc>

000001da <__do_clear_bss>:
     1da:	23 e0       	ldi	r18, 0x03	; 3
     1dc:	a6 e6       	ldi	r26, 0x66	; 102
     1de:	b3 e0       	ldi	r27, 0x03	; 3
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <.do_clear_bss_start>

000001e2 <.do_clear_bss_loop>:
     1e2:	1d 92       	st	X+, r1

000001e4 <.do_clear_bss_start>:
     1e4:	aa 37       	cpi	r26, 0x7A	; 122
     1e6:	b2 07       	cpc	r27, r18
     1e8:	e1 f7       	brne	.-8      	; 0x1e2 <.do_clear_bss_loop>
     1ea:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <main>
     1ee:	0c 94 e0 10 	jmp	0x21c0	; 0x21c0 <_exit>

000001f2 <__bad_interrupt>:
     1f2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f6 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
	// czekaj aż transmiter gotowy
	while(!(UCSR0A & _BV(UDRE0)));
     1f6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     1fa:	95 ff       	sbrs	r25, 5
     1fc:	fc cf       	rjmp	.-8      	; 0x1f6 <uart_transmit>
	UDR0 = data;
     1fe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	08 95       	ret

00000208 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
	// czekaj aż znak dostępny
	while (!(UCSR0A & _BV(RXC0)));
     208:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     20c:	87 ff       	sbrs	r24, 7
     20e:	fc cf       	rjmp	.-8      	; 0x208 <uart_receive>
	return UDR0;
     210:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	08 95       	ret

00000218 <uart_init>:

// inicjalizacja UART
void uart_init()
{
	// ustaw baudrate
	UBRR0 = UBRR_VALUE;
     218:	87 e6       	ldi	r24, 0x67	; 103
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     220:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	// wyczyść rejestr UCSR0A
	UCSR0A = 0;
     224:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	// włącz odbiornik i nadajnik
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     228:	88 e1       	ldi	r24, 0x18	; 24
     22a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	// ustaw format 8n1
	UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     22e:	86 e0       	ldi	r24, 0x06	; 6
     230:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     234:	08 95       	ret

00000236 <i2cInit>:
#include "i2c.h"
void i2cInit() {
  // ustaw bitrate
  // 8MHz / (16+2*TWBR*1) ~= 100kHz
  TWBR = 32;
     236:	80 e2       	ldi	r24, 0x20	; 32
     238:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  // uruchom TWI
  TWCR |= _BV(TWEN);
     23c:	ec eb       	ldi	r30, 0xBC	; 188
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	84 60       	ori	r24, 0x04	; 4
     244:	80 83       	st	Z, r24
     246:	08 95       	ret

00000248 <i2cWaitForComplete>:
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     248:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     24c:	87 ff       	sbrs	r24, 7
     24e:	fc cf       	rjmp	.-8      	; 0x248 <i2cWaitForComplete>
}
     250:	08 95       	ret

00000252 <i2cStart>:
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     252:	84 ea       	ldi	r24, 0xA4	; 164
     254:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     258:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     25c:	87 ff       	sbrs	r24, 7
     25e:	fc cf       	rjmp	.-8      	; 0x258 <i2cStart+0x6>
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
     260:	08 95       	ret

00000262 <i2cStop>:
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     262:	84 e9       	ldi	r24, 0x94	; 148
     264:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     268:	08 95       	ret

0000026a <i2cReset>:
}
void i2cReset() {
  // wyślij warunek stopu i wyłącz TWI
  TWCR = _BV(TWINT) | _BV(TWSTO);
     26a:	80 e9       	ldi	r24, 0x90	; 144
     26c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     270:	08 95       	ret

00000272 <i2cReadAck>:
}
uint8_t i2cReadAck() {
  // odczytaj dane, wyślij ACK
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
     272:	84 ec       	ldi	r24, 0xC4	; 196
     274:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     278:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     27c:	87 ff       	sbrs	r24, 7
     27e:	fc cf       	rjmp	.-8      	; 0x278 <i2cReadAck+0x6>
}
uint8_t i2cReadAck() {
  // odczytaj dane, wyślij ACK
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
  i2cWaitForComplete();
  return TWDR;
     280:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
     284:	08 95       	ret

00000286 <i2cReadNoAck>:
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     286:	84 e8       	ldi	r24, 0x84	; 132
     288:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     28c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     290:	87 ff       	sbrs	r24, 7
     292:	fc cf       	rjmp	.-8      	; 0x28c <i2cReadNoAck+0x6>
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
  i2cWaitForComplete();
  return TWDR;
     294:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}
     298:	08 95       	ret

0000029a <i2cSend>:
     29a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     29e:	84 e8       	ldi	r24, 0x84	; 132
     2a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     2a4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     2a8:	87 ff       	sbrs	r24, 7
     2aa:	fc cf       	rjmp	.-8      	; 0x2a4 <i2cSend+0xa>
     2ac:	08 95       	ret

000002ae <vfprintf>:
     2ae:	a0 e1       	ldi	r26, 0x10	; 16
     2b0:	b0 e0       	ldi	r27, 0x00	; 0
     2b2:	ed e5       	ldi	r30, 0x5D	; 93
     2b4:	f1 e0       	ldi	r31, 0x01	; 1
     2b6:	0c 94 4b 0d 	jmp	0x1a96	; 0x1a96 <__prologue_saves__>
     2ba:	7c 01       	movw	r14, r24
     2bc:	1b 01       	movw	r2, r22
     2be:	6a 01       	movw	r12, r20
     2c0:	fc 01       	movw	r30, r24
     2c2:	17 82       	std	Z+7, r1	; 0x07
     2c4:	16 82       	std	Z+6, r1	; 0x06
     2c6:	83 81       	ldd	r24, Z+3	; 0x03
     2c8:	81 ff       	sbrs	r24, 1
     2ca:	44 c3       	rjmp	.+1672   	; 0x954 <__stack+0x55>
     2cc:	9e 01       	movw	r18, r28
     2ce:	2f 5f       	subi	r18, 0xFF	; 255
     2d0:	3f 4f       	sbci	r19, 0xFF	; 255
     2d2:	39 01       	movw	r6, r18
     2d4:	f7 01       	movw	r30, r14
     2d6:	93 81       	ldd	r25, Z+3	; 0x03
     2d8:	f1 01       	movw	r30, r2
     2da:	93 fd       	sbrc	r25, 3
     2dc:	85 91       	lpm	r24, Z+
     2de:	93 ff       	sbrs	r25, 3
     2e0:	81 91       	ld	r24, Z+
     2e2:	1f 01       	movw	r2, r30
     2e4:	88 23       	and	r24, r24
     2e6:	09 f4       	brne	.+2      	; 0x2ea <vfprintf+0x3c>
     2e8:	31 c3       	rjmp	.+1634   	; 0x94c <__stack+0x4d>
     2ea:	85 32       	cpi	r24, 0x25	; 37
     2ec:	39 f4       	brne	.+14     	; 0x2fc <vfprintf+0x4e>
     2ee:	93 fd       	sbrc	r25, 3
     2f0:	85 91       	lpm	r24, Z+
     2f2:	93 ff       	sbrs	r25, 3
     2f4:	81 91       	ld	r24, Z+
     2f6:	1f 01       	movw	r2, r30
     2f8:	85 32       	cpi	r24, 0x25	; 37
     2fa:	39 f4       	brne	.+14     	; 0x30a <vfprintf+0x5c>
     2fc:	b7 01       	movw	r22, r14
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     304:	56 01       	movw	r10, r12
     306:	65 01       	movw	r12, r10
     308:	e5 cf       	rjmp	.-54     	; 0x2d4 <vfprintf+0x26>
     30a:	10 e0       	ldi	r17, 0x00	; 0
     30c:	51 2c       	mov	r5, r1
     30e:	91 2c       	mov	r9, r1
     310:	ff e1       	ldi	r31, 0x1F	; 31
     312:	f9 15       	cp	r31, r9
     314:	d8 f0       	brcs	.+54     	; 0x34c <vfprintf+0x9e>
     316:	8b 32       	cpi	r24, 0x2B	; 43
     318:	79 f0       	breq	.+30     	; 0x338 <vfprintf+0x8a>
     31a:	38 f4       	brcc	.+14     	; 0x32a <vfprintf+0x7c>
     31c:	80 32       	cpi	r24, 0x20	; 32
     31e:	79 f0       	breq	.+30     	; 0x33e <vfprintf+0x90>
     320:	83 32       	cpi	r24, 0x23	; 35
     322:	a1 f4       	brne	.+40     	; 0x34c <vfprintf+0x9e>
     324:	f9 2d       	mov	r31, r9
     326:	f0 61       	ori	r31, 0x10	; 16
     328:	2e c0       	rjmp	.+92     	; 0x386 <vfprintf+0xd8>
     32a:	8d 32       	cpi	r24, 0x2D	; 45
     32c:	61 f0       	breq	.+24     	; 0x346 <vfprintf+0x98>
     32e:	80 33       	cpi	r24, 0x30	; 48
     330:	69 f4       	brne	.+26     	; 0x34c <vfprintf+0x9e>
     332:	29 2d       	mov	r18, r9
     334:	21 60       	ori	r18, 0x01	; 1
     336:	2d c0       	rjmp	.+90     	; 0x392 <vfprintf+0xe4>
     338:	39 2d       	mov	r19, r9
     33a:	32 60       	ori	r19, 0x02	; 2
     33c:	93 2e       	mov	r9, r19
     33e:	89 2d       	mov	r24, r9
     340:	84 60       	ori	r24, 0x04	; 4
     342:	98 2e       	mov	r9, r24
     344:	2a c0       	rjmp	.+84     	; 0x39a <vfprintf+0xec>
     346:	e9 2d       	mov	r30, r9
     348:	e8 60       	ori	r30, 0x08	; 8
     34a:	15 c0       	rjmp	.+42     	; 0x376 <vfprintf+0xc8>
     34c:	97 fc       	sbrc	r9, 7
     34e:	2d c0       	rjmp	.+90     	; 0x3aa <vfprintf+0xfc>
     350:	20 ed       	ldi	r18, 0xD0	; 208
     352:	28 0f       	add	r18, r24
     354:	2a 30       	cpi	r18, 0x0A	; 10
     356:	88 f4       	brcc	.+34     	; 0x37a <vfprintf+0xcc>
     358:	96 fe       	sbrs	r9, 6
     35a:	06 c0       	rjmp	.+12     	; 0x368 <vfprintf+0xba>
     35c:	3a e0       	ldi	r19, 0x0A	; 10
     35e:	13 9f       	mul	r17, r19
     360:	20 0d       	add	r18, r0
     362:	11 24       	eor	r1, r1
     364:	12 2f       	mov	r17, r18
     366:	19 c0       	rjmp	.+50     	; 0x39a <vfprintf+0xec>
     368:	8a e0       	ldi	r24, 0x0A	; 10
     36a:	58 9e       	mul	r5, r24
     36c:	20 0d       	add	r18, r0
     36e:	11 24       	eor	r1, r1
     370:	52 2e       	mov	r5, r18
     372:	e9 2d       	mov	r30, r9
     374:	e0 62       	ori	r30, 0x20	; 32
     376:	9e 2e       	mov	r9, r30
     378:	10 c0       	rjmp	.+32     	; 0x39a <vfprintf+0xec>
     37a:	8e 32       	cpi	r24, 0x2E	; 46
     37c:	31 f4       	brne	.+12     	; 0x38a <vfprintf+0xdc>
     37e:	96 fc       	sbrc	r9, 6
     380:	e5 c2       	rjmp	.+1482   	; 0x94c <__stack+0x4d>
     382:	f9 2d       	mov	r31, r9
     384:	f0 64       	ori	r31, 0x40	; 64
     386:	9f 2e       	mov	r9, r31
     388:	08 c0       	rjmp	.+16     	; 0x39a <vfprintf+0xec>
     38a:	8c 36       	cpi	r24, 0x6C	; 108
     38c:	21 f4       	brne	.+8      	; 0x396 <vfprintf+0xe8>
     38e:	29 2d       	mov	r18, r9
     390:	20 68       	ori	r18, 0x80	; 128
     392:	92 2e       	mov	r9, r18
     394:	02 c0       	rjmp	.+4      	; 0x39a <vfprintf+0xec>
     396:	88 36       	cpi	r24, 0x68	; 104
     398:	41 f4       	brne	.+16     	; 0x3aa <vfprintf+0xfc>
     39a:	f1 01       	movw	r30, r2
     39c:	93 fd       	sbrc	r25, 3
     39e:	85 91       	lpm	r24, Z+
     3a0:	93 ff       	sbrs	r25, 3
     3a2:	81 91       	ld	r24, Z+
     3a4:	1f 01       	movw	r2, r30
     3a6:	81 11       	cpse	r24, r1
     3a8:	b3 cf       	rjmp	.-154    	; 0x310 <vfprintf+0x62>
     3aa:	9b eb       	ldi	r25, 0xBB	; 187
     3ac:	98 0f       	add	r25, r24
     3ae:	93 30       	cpi	r25, 0x03	; 3
     3b0:	20 f4       	brcc	.+8      	; 0x3ba <vfprintf+0x10c>
     3b2:	99 2d       	mov	r25, r9
     3b4:	90 61       	ori	r25, 0x10	; 16
     3b6:	80 5e       	subi	r24, 0xE0	; 224
     3b8:	07 c0       	rjmp	.+14     	; 0x3c8 <vfprintf+0x11a>
     3ba:	9b e9       	ldi	r25, 0x9B	; 155
     3bc:	98 0f       	add	r25, r24
     3be:	93 30       	cpi	r25, 0x03	; 3
     3c0:	08 f0       	brcs	.+2      	; 0x3c4 <vfprintf+0x116>
     3c2:	66 c1       	rjmp	.+716    	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
     3c4:	99 2d       	mov	r25, r9
     3c6:	9f 7e       	andi	r25, 0xEF	; 239
     3c8:	96 ff       	sbrs	r25, 6
     3ca:	16 e0       	ldi	r17, 0x06	; 6
     3cc:	9f 73       	andi	r25, 0x3F	; 63
     3ce:	99 2e       	mov	r9, r25
     3d0:	85 36       	cpi	r24, 0x65	; 101
     3d2:	19 f4       	brne	.+6      	; 0x3da <vfprintf+0x12c>
     3d4:	90 64       	ori	r25, 0x40	; 64
     3d6:	99 2e       	mov	r9, r25
     3d8:	08 c0       	rjmp	.+16     	; 0x3ea <vfprintf+0x13c>
     3da:	86 36       	cpi	r24, 0x66	; 102
     3dc:	21 f4       	brne	.+8      	; 0x3e6 <vfprintf+0x138>
     3de:	39 2f       	mov	r19, r25
     3e0:	30 68       	ori	r19, 0x80	; 128
     3e2:	93 2e       	mov	r9, r19
     3e4:	02 c0       	rjmp	.+4      	; 0x3ea <vfprintf+0x13c>
     3e6:	11 11       	cpse	r17, r1
     3e8:	11 50       	subi	r17, 0x01	; 1
     3ea:	97 fe       	sbrs	r9, 7
     3ec:	07 c0       	rjmp	.+14     	; 0x3fc <vfprintf+0x14e>
     3ee:	1c 33       	cpi	r17, 0x3C	; 60
     3f0:	50 f4       	brcc	.+20     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3f2:	44 24       	eor	r4, r4
     3f4:	43 94       	inc	r4
     3f6:	41 0e       	add	r4, r17
     3f8:	27 e0       	ldi	r18, 0x07	; 7
     3fa:	0b c0       	rjmp	.+22     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     3fc:	18 30       	cpi	r17, 0x08	; 8
     3fe:	38 f0       	brcs	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     400:	27 e0       	ldi	r18, 0x07	; 7
     402:	17 e0       	ldi	r17, 0x07	; 7
     404:	05 c0       	rjmp	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     406:	27 e0       	ldi	r18, 0x07	; 7
     408:	9c e3       	ldi	r25, 0x3C	; 60
     40a:	49 2e       	mov	r4, r25
     40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     40e:	21 2f       	mov	r18, r17
     410:	41 2c       	mov	r4, r1
     412:	56 01       	movw	r10, r12
     414:	84 e0       	ldi	r24, 0x04	; 4
     416:	a8 0e       	add	r10, r24
     418:	b1 1c       	adc	r11, r1
     41a:	f6 01       	movw	r30, r12
     41c:	60 81       	ld	r22, Z
     41e:	71 81       	ldd	r23, Z+1	; 0x01
     420:	82 81       	ldd	r24, Z+2	; 0x02
     422:	93 81       	ldd	r25, Z+3	; 0x03
     424:	04 2d       	mov	r16, r4
     426:	a3 01       	movw	r20, r6
     428:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__ftoa_engine>
     42c:	6c 01       	movw	r12, r24
     42e:	f9 81       	ldd	r31, Y+1	; 0x01
     430:	fc 87       	std	Y+12, r31	; 0x0c
     432:	f0 ff       	sbrs	r31, 0
     434:	02 c0       	rjmp	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     436:	f3 ff       	sbrs	r31, 3
     438:	06 c0       	rjmp	.+12     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     43a:	91 fc       	sbrc	r9, 1
     43c:	06 c0       	rjmp	.+12     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     43e:	92 fe       	sbrs	r9, 2
     440:	06 c0       	rjmp	.+12     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     442:	00 e2       	ldi	r16, 0x20	; 32
     444:	05 c0       	rjmp	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     446:	0d e2       	ldi	r16, 0x2D	; 45
     448:	03 c0       	rjmp	.+6      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     44a:	0b e2       	ldi	r16, 0x2B	; 43
     44c:	01 c0       	rjmp	.+2      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     44e:	00 e0       	ldi	r16, 0x00	; 0
     450:	8c 85       	ldd	r24, Y+12	; 0x0c
     452:	8c 70       	andi	r24, 0x0C	; 12
     454:	19 f0       	breq	.+6      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     456:	01 11       	cpse	r16, r1
     458:	5a c2       	rjmp	.+1204   	; 0x90e <__stack+0xf>
     45a:	9b c2       	rjmp	.+1334   	; 0x992 <__stack+0x93>
     45c:	97 fe       	sbrs	r9, 7
     45e:	10 c0       	rjmp	.+32     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     460:	4c 0c       	add	r4, r12
     462:	fc 85       	ldd	r31, Y+12	; 0x0c
     464:	f4 ff       	sbrs	r31, 4
     466:	04 c0       	rjmp	.+8      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     468:	8a 81       	ldd	r24, Y+2	; 0x02
     46a:	81 33       	cpi	r24, 0x31	; 49
     46c:	09 f4       	brne	.+2      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     46e:	4a 94       	dec	r4
     470:	14 14       	cp	r1, r4
     472:	74 f5       	brge	.+92     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
     474:	28 e0       	ldi	r18, 0x08	; 8
     476:	24 15       	cp	r18, r4
     478:	78 f5       	brcc	.+94     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     47a:	88 e0       	ldi	r24, 0x08	; 8
     47c:	48 2e       	mov	r4, r24
     47e:	2c c0       	rjmp	.+88     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     480:	96 fc       	sbrc	r9, 6
     482:	2a c0       	rjmp	.+84     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     484:	81 2f       	mov	r24, r17
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	8c 15       	cp	r24, r12
     48a:	9d 05       	cpc	r25, r13
     48c:	9c f0       	brlt	.+38     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     48e:	3c ef       	ldi	r19, 0xFC	; 252
     490:	c3 16       	cp	r12, r19
     492:	3f ef       	ldi	r19, 0xFF	; 255
     494:	d3 06       	cpc	r13, r19
     496:	74 f0       	brlt	.+28     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     498:	89 2d       	mov	r24, r9
     49a:	80 68       	ori	r24, 0x80	; 128
     49c:	98 2e       	mov	r9, r24
     49e:	0a c0       	rjmp	.+20     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     4a0:	e2 e0       	ldi	r30, 0x02	; 2
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	ec 0f       	add	r30, r28
     4a6:	fd 1f       	adc	r31, r29
     4a8:	e1 0f       	add	r30, r17
     4aa:	f1 1d       	adc	r31, r1
     4ac:	80 81       	ld	r24, Z
     4ae:	80 33       	cpi	r24, 0x30	; 48
     4b0:	19 f4       	brne	.+6      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     4b2:	11 50       	subi	r17, 0x01	; 1
     4b4:	11 11       	cpse	r17, r1
     4b6:	f4 cf       	rjmp	.-24     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     4b8:	97 fe       	sbrs	r9, 7
     4ba:	0e c0       	rjmp	.+28     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     4bc:	44 24       	eor	r4, r4
     4be:	43 94       	inc	r4
     4c0:	41 0e       	add	r4, r17
     4c2:	81 2f       	mov	r24, r17
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	c8 16       	cp	r12, r24
     4c8:	d9 06       	cpc	r13, r25
     4ca:	2c f4       	brge	.+10     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4cc:	1c 19       	sub	r17, r12
     4ce:	04 c0       	rjmp	.+8      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     4d0:	44 24       	eor	r4, r4
     4d2:	43 94       	inc	r4
     4d4:	01 c0       	rjmp	.+2      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
     4d6:	10 e0       	ldi	r17, 0x00	; 0
     4d8:	97 fe       	sbrs	r9, 7
     4da:	06 c0       	rjmp	.+12     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     4dc:	1c 14       	cp	r1, r12
     4de:	1d 04       	cpc	r1, r13
     4e0:	34 f4       	brge	.+12     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
     4e2:	c6 01       	movw	r24, r12
     4e4:	01 96       	adiw	r24, 0x01	; 1
     4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4e8:	85 e0       	ldi	r24, 0x05	; 5
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4ee:	81 e0       	ldi	r24, 0x01	; 1
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	01 11       	cpse	r16, r1
     4f4:	01 96       	adiw	r24, 0x01	; 1
     4f6:	11 23       	and	r17, r17
     4f8:	31 f0       	breq	.+12     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
     4fa:	21 2f       	mov	r18, r17
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	2f 5f       	subi	r18, 0xFF	; 255
     500:	3f 4f       	sbci	r19, 0xFF	; 255
     502:	82 0f       	add	r24, r18
     504:	93 1f       	adc	r25, r19
     506:	25 2d       	mov	r18, r5
     508:	30 e0       	ldi	r19, 0x00	; 0
     50a:	82 17       	cp	r24, r18
     50c:	93 07       	cpc	r25, r19
     50e:	14 f4       	brge	.+4      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
     510:	58 1a       	sub	r5, r24
     512:	01 c0       	rjmp	.+2      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
     514:	51 2c       	mov	r5, r1
     516:	89 2d       	mov	r24, r9
     518:	89 70       	andi	r24, 0x09	; 9
     51a:	49 f4       	brne	.+18     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     51c:	55 20       	and	r5, r5
     51e:	39 f0       	breq	.+14     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     520:	b7 01       	movw	r22, r14
     522:	80 e2       	ldi	r24, 0x20	; 32
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     52a:	5a 94       	dec	r5
     52c:	f7 cf       	rjmp	.-18     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     52e:	00 23       	and	r16, r16
     530:	29 f0       	breq	.+10     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
     532:	b7 01       	movw	r22, r14
     534:	80 2f       	mov	r24, r16
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     53c:	93 fc       	sbrc	r9, 3
     53e:	09 c0       	rjmp	.+18     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
     540:	55 20       	and	r5, r5
     542:	39 f0       	breq	.+14     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
     544:	b7 01       	movw	r22, r14
     546:	80 e3       	ldi	r24, 0x30	; 48
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     54e:	5a 94       	dec	r5
     550:	f7 cf       	rjmp	.-18     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     552:	97 fe       	sbrs	r9, 7
     554:	4c c0       	rjmp	.+152    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     556:	46 01       	movw	r8, r12
     558:	d7 fe       	sbrs	r13, 7
     55a:	02 c0       	rjmp	.+4      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     55c:	81 2c       	mov	r8, r1
     55e:	91 2c       	mov	r9, r1
     560:	c6 01       	movw	r24, r12
     562:	88 19       	sub	r24, r8
     564:	99 09       	sbc	r25, r9
     566:	f3 01       	movw	r30, r6
     568:	e8 0f       	add	r30, r24
     56a:	f9 1f       	adc	r31, r25
     56c:	fe 87       	std	Y+14, r31	; 0x0e
     56e:	ed 87       	std	Y+13, r30	; 0x0d
     570:	96 01       	movw	r18, r12
     572:	24 19       	sub	r18, r4
     574:	31 09       	sbc	r19, r1
     576:	38 8b       	std	Y+16, r19	; 0x10
     578:	2f 87       	std	Y+15, r18	; 0x0f
     57a:	01 2f       	mov	r16, r17
     57c:	10 e0       	ldi	r17, 0x00	; 0
     57e:	11 95       	neg	r17
     580:	01 95       	neg	r16
     582:	11 09       	sbc	r17, r1
     584:	3f ef       	ldi	r19, 0xFF	; 255
     586:	83 16       	cp	r8, r19
     588:	93 06       	cpc	r9, r19
     58a:	29 f4       	brne	.+10     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
     58c:	b7 01       	movw	r22, r14
     58e:	8e e2       	ldi	r24, 0x2E	; 46
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     596:	c8 14       	cp	r12, r8
     598:	d9 04       	cpc	r13, r9
     59a:	4c f0       	brlt	.+18     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     59c:	8f 85       	ldd	r24, Y+15	; 0x0f
     59e:	98 89       	ldd	r25, Y+16	; 0x10
     5a0:	88 15       	cp	r24, r8
     5a2:	99 05       	cpc	r25, r9
     5a4:	24 f4       	brge	.+8      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     5a6:	ed 85       	ldd	r30, Y+13	; 0x0d
     5a8:	fe 85       	ldd	r31, Y+14	; 0x0e
     5aa:	81 81       	ldd	r24, Z+1	; 0x01
     5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
     5ae:	80 e3       	ldi	r24, 0x30	; 48
     5b0:	f1 e0       	ldi	r31, 0x01	; 1
     5b2:	8f 1a       	sub	r8, r31
     5b4:	91 08       	sbc	r9, r1
     5b6:	2d 85       	ldd	r18, Y+13	; 0x0d
     5b8:	3e 85       	ldd	r19, Y+14	; 0x0e
     5ba:	2f 5f       	subi	r18, 0xFF	; 255
     5bc:	3f 4f       	sbci	r19, 0xFF	; 255
     5be:	3e 87       	std	Y+14, r19	; 0x0e
     5c0:	2d 87       	std	Y+13, r18	; 0x0d
     5c2:	80 16       	cp	r8, r16
     5c4:	91 06       	cpc	r9, r17
     5c6:	2c f0       	brlt	.+10     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
     5c8:	b7 01       	movw	r22, r14
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     5d0:	d9 cf       	rjmp	.-78     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
     5d2:	c8 14       	cp	r12, r8
     5d4:	d9 04       	cpc	r13, r9
     5d6:	41 f4       	brne	.+16     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
     5d8:	9a 81       	ldd	r25, Y+2	; 0x02
     5da:	96 33       	cpi	r25, 0x36	; 54
     5dc:	20 f4       	brcc	.+8      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
     5de:	95 33       	cpi	r25, 0x35	; 53
     5e0:	19 f4       	brne	.+6      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
     5e2:	3c 85       	ldd	r19, Y+12	; 0x0c
     5e4:	34 ff       	sbrs	r19, 4
     5e6:	81 e3       	ldi	r24, 0x31	; 49
     5e8:	b7 01       	movw	r22, r14
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	4e c0       	rjmp	.+156    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
     5ee:	8a 81       	ldd	r24, Y+2	; 0x02
     5f0:	81 33       	cpi	r24, 0x31	; 49
     5f2:	19 f0       	breq	.+6      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
     5f4:	9c 85       	ldd	r25, Y+12	; 0x0c
     5f6:	9f 7e       	andi	r25, 0xEF	; 239
     5f8:	9c 87       	std	Y+12, r25	; 0x0c
     5fa:	b7 01       	movw	r22, r14
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     602:	11 11       	cpse	r17, r1
     604:	05 c0       	rjmp	.+10     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
     606:	94 fc       	sbrc	r9, 4
     608:	18 c0       	rjmp	.+48     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
     60a:	85 e6       	ldi	r24, 0x65	; 101
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	17 c0       	rjmp	.+46     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
     610:	b7 01       	movw	r22, r14
     612:	8e e2       	ldi	r24, 0x2E	; 46
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     61a:	1e 5f       	subi	r17, 0xFE	; 254
     61c:	82 e0       	ldi	r24, 0x02	; 2
     61e:	01 e0       	ldi	r16, 0x01	; 1
     620:	08 0f       	add	r16, r24
     622:	f3 01       	movw	r30, r6
     624:	e8 0f       	add	r30, r24
     626:	f1 1d       	adc	r31, r1
     628:	80 81       	ld	r24, Z
     62a:	b7 01       	movw	r22, r14
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     632:	80 2f       	mov	r24, r16
     634:	01 13       	cpse	r16, r17
     636:	f3 cf       	rjmp	.-26     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
     638:	e6 cf       	rjmp	.-52     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
     63a:	85 e4       	ldi	r24, 0x45	; 69
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	b7 01       	movw	r22, r14
     640:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     644:	d7 fc       	sbrc	r13, 7
     646:	06 c0       	rjmp	.+12     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
     648:	c1 14       	cp	r12, r1
     64a:	d1 04       	cpc	r13, r1
     64c:	41 f4       	brne	.+16     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
     64e:	ec 85       	ldd	r30, Y+12	; 0x0c
     650:	e4 ff       	sbrs	r30, 4
     652:	05 c0       	rjmp	.+10     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
     654:	d1 94       	neg	r13
     656:	c1 94       	neg	r12
     658:	d1 08       	sbc	r13, r1
     65a:	8d e2       	ldi	r24, 0x2D	; 45
     65c:	01 c0       	rjmp	.+2      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
     65e:	8b e2       	ldi	r24, 0x2B	; 43
     660:	b7 01       	movw	r22, r14
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     668:	80 e3       	ldi	r24, 0x30	; 48
     66a:	2a e0       	ldi	r18, 0x0A	; 10
     66c:	c2 16       	cp	r12, r18
     66e:	d1 04       	cpc	r13, r1
     670:	2c f0       	brlt	.+10     	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
     672:	8f 5f       	subi	r24, 0xFF	; 255
     674:	fa e0       	ldi	r31, 0x0A	; 10
     676:	cf 1a       	sub	r12, r31
     678:	d1 08       	sbc	r13, r1
     67a:	f7 cf       	rjmp	.-18     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
     67c:	b7 01       	movw	r22, r14
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     684:	b7 01       	movw	r22, r14
     686:	c6 01       	movw	r24, r12
     688:	c0 96       	adiw	r24, 0x30	; 48
     68a:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     68e:	54 c1       	rjmp	.+680    	; 0x938 <__stack+0x39>
     690:	83 36       	cpi	r24, 0x63	; 99
     692:	31 f0       	breq	.+12     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
     694:	83 37       	cpi	r24, 0x73	; 115
     696:	79 f0       	breq	.+30     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
     698:	83 35       	cpi	r24, 0x53	; 83
     69a:	09 f0       	breq	.+2      	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
     69c:	56 c0       	rjmp	.+172    	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
     69e:	20 c0       	rjmp	.+64     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     6a0:	56 01       	movw	r10, r12
     6a2:	32 e0       	ldi	r19, 0x02	; 2
     6a4:	a3 0e       	add	r10, r19
     6a6:	b1 1c       	adc	r11, r1
     6a8:	f6 01       	movw	r30, r12
     6aa:	80 81       	ld	r24, Z
     6ac:	89 83       	std	Y+1, r24	; 0x01
     6ae:	01 e0       	ldi	r16, 0x01	; 1
     6b0:	10 e0       	ldi	r17, 0x00	; 0
     6b2:	63 01       	movw	r12, r6
     6b4:	12 c0       	rjmp	.+36     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
     6b6:	56 01       	movw	r10, r12
     6b8:	f2 e0       	ldi	r31, 0x02	; 2
     6ba:	af 0e       	add	r10, r31
     6bc:	b1 1c       	adc	r11, r1
     6be:	f6 01       	movw	r30, r12
     6c0:	c0 80       	ld	r12, Z
     6c2:	d1 80       	ldd	r13, Z+1	; 0x01
     6c4:	96 fe       	sbrs	r9, 6
     6c6:	03 c0       	rjmp	.+6      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
     6c8:	61 2f       	mov	r22, r17
     6ca:	70 e0       	ldi	r23, 0x00	; 0
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
     6ce:	6f ef       	ldi	r22, 0xFF	; 255
     6d0:	7f ef       	ldi	r23, 0xFF	; 255
     6d2:	c6 01       	movw	r24, r12
     6d4:	0e 94 85 0f 	call	0x1f0a	; 0x1f0a <strnlen>
     6d8:	8c 01       	movw	r16, r24
     6da:	f9 2d       	mov	r31, r9
     6dc:	ff 77       	andi	r31, 0x7F	; 127
     6de:	14 c0       	rjmp	.+40     	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
     6e0:	56 01       	movw	r10, r12
     6e2:	22 e0       	ldi	r18, 0x02	; 2
     6e4:	a2 0e       	add	r10, r18
     6e6:	b1 1c       	adc	r11, r1
     6e8:	f6 01       	movw	r30, r12
     6ea:	c0 80       	ld	r12, Z
     6ec:	d1 80       	ldd	r13, Z+1	; 0x01
     6ee:	96 fe       	sbrs	r9, 6
     6f0:	03 c0       	rjmp	.+6      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
     6f2:	61 2f       	mov	r22, r17
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	02 c0       	rjmp	.+4      	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
     6f8:	6f ef       	ldi	r22, 0xFF	; 255
     6fa:	7f ef       	ldi	r23, 0xFF	; 255
     6fc:	c6 01       	movw	r24, r12
     6fe:	0e 94 71 0f 	call	0x1ee2	; 0x1ee2 <strnlen_P>
     702:	8c 01       	movw	r16, r24
     704:	f9 2d       	mov	r31, r9
     706:	f0 68       	ori	r31, 0x80	; 128
     708:	9f 2e       	mov	r9, r31
     70a:	f3 fd       	sbrc	r31, 3
     70c:	1a c0       	rjmp	.+52     	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
     70e:	85 2d       	mov	r24, r5
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	08 17       	cp	r16, r24
     714:	19 07       	cpc	r17, r25
     716:	a8 f4       	brcc	.+42     	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
     718:	b7 01       	movw	r22, r14
     71a:	80 e2       	ldi	r24, 0x20	; 32
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     722:	5a 94       	dec	r5
     724:	f4 cf       	rjmp	.-24     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
     726:	f6 01       	movw	r30, r12
     728:	97 fc       	sbrc	r9, 7
     72a:	85 91       	lpm	r24, Z+
     72c:	97 fe       	sbrs	r9, 7
     72e:	81 91       	ld	r24, Z+
     730:	6f 01       	movw	r12, r30
     732:	b7 01       	movw	r22, r14
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     73a:	51 10       	cpse	r5, r1
     73c:	5a 94       	dec	r5
     73e:	01 50       	subi	r16, 0x01	; 1
     740:	11 09       	sbc	r17, r1
     742:	01 15       	cp	r16, r1
     744:	11 05       	cpc	r17, r1
     746:	79 f7       	brne	.-34     	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
     748:	f7 c0       	rjmp	.+494    	; 0x938 <__stack+0x39>
     74a:	84 36       	cpi	r24, 0x64	; 100
     74c:	11 f0       	breq	.+4      	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
     74e:	89 36       	cpi	r24, 0x69	; 105
     750:	61 f5       	brne	.+88     	; 0x7aa <__LOCK_REGION_LENGTH__+0x3aa>
     752:	56 01       	movw	r10, r12
     754:	97 fe       	sbrs	r9, 7
     756:	09 c0       	rjmp	.+18     	; 0x76a <__LOCK_REGION_LENGTH__+0x36a>
     758:	24 e0       	ldi	r18, 0x04	; 4
     75a:	a2 0e       	add	r10, r18
     75c:	b1 1c       	adc	r11, r1
     75e:	f6 01       	movw	r30, r12
     760:	60 81       	ld	r22, Z
     762:	71 81       	ldd	r23, Z+1	; 0x01
     764:	82 81       	ldd	r24, Z+2	; 0x02
     766:	93 81       	ldd	r25, Z+3	; 0x03
     768:	0a c0       	rjmp	.+20     	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
     76a:	f2 e0       	ldi	r31, 0x02	; 2
     76c:	af 0e       	add	r10, r31
     76e:	b1 1c       	adc	r11, r1
     770:	f6 01       	movw	r30, r12
     772:	60 81       	ld	r22, Z
     774:	71 81       	ldd	r23, Z+1	; 0x01
     776:	07 2e       	mov	r0, r23
     778:	00 0c       	add	r0, r0
     77a:	88 0b       	sbc	r24, r24
     77c:	99 0b       	sbc	r25, r25
     77e:	f9 2d       	mov	r31, r9
     780:	ff 76       	andi	r31, 0x6F	; 111
     782:	9f 2e       	mov	r9, r31
     784:	97 ff       	sbrs	r25, 7
     786:	09 c0       	rjmp	.+18     	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
     788:	90 95       	com	r25
     78a:	80 95       	com	r24
     78c:	70 95       	com	r23
     78e:	61 95       	neg	r22
     790:	7f 4f       	sbci	r23, 0xFF	; 255
     792:	8f 4f       	sbci	r24, 0xFF	; 255
     794:	9f 4f       	sbci	r25, 0xFF	; 255
     796:	f0 68       	ori	r31, 0x80	; 128
     798:	9f 2e       	mov	r9, r31
     79a:	2a e0       	ldi	r18, 0x0A	; 10
     79c:	30 e0       	ldi	r19, 0x00	; 0
     79e:	a3 01       	movw	r20, r6
     7a0:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__ultoa_invert>
     7a4:	c8 2e       	mov	r12, r24
     7a6:	c6 18       	sub	r12, r6
     7a8:	3f c0       	rjmp	.+126    	; 0x828 <__LOCK_REGION_LENGTH__+0x428>
     7aa:	09 2d       	mov	r16, r9
     7ac:	85 37       	cpi	r24, 0x75	; 117
     7ae:	21 f4       	brne	.+8      	; 0x7b8 <__LOCK_REGION_LENGTH__+0x3b8>
     7b0:	0f 7e       	andi	r16, 0xEF	; 239
     7b2:	2a e0       	ldi	r18, 0x0A	; 10
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	1d c0       	rjmp	.+58     	; 0x7f2 <__LOCK_REGION_LENGTH__+0x3f2>
     7b8:	09 7f       	andi	r16, 0xF9	; 249
     7ba:	8f 36       	cpi	r24, 0x6F	; 111
     7bc:	91 f0       	breq	.+36     	; 0x7e2 <__LOCK_REGION_LENGTH__+0x3e2>
     7be:	18 f4       	brcc	.+6      	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
     7c0:	88 35       	cpi	r24, 0x58	; 88
     7c2:	59 f0       	breq	.+22     	; 0x7da <__LOCK_REGION_LENGTH__+0x3da>
     7c4:	c3 c0       	rjmp	.+390    	; 0x94c <__stack+0x4d>
     7c6:	80 37       	cpi	r24, 0x70	; 112
     7c8:	19 f0       	breq	.+6      	; 0x7d0 <__LOCK_REGION_LENGTH__+0x3d0>
     7ca:	88 37       	cpi	r24, 0x78	; 120
     7cc:	11 f0       	breq	.+4      	; 0x7d2 <__LOCK_REGION_LENGTH__+0x3d2>
     7ce:	be c0       	rjmp	.+380    	; 0x94c <__stack+0x4d>
     7d0:	00 61       	ori	r16, 0x10	; 16
     7d2:	04 ff       	sbrs	r16, 4
     7d4:	09 c0       	rjmp	.+18     	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
     7d6:	04 60       	ori	r16, 0x04	; 4
     7d8:	07 c0       	rjmp	.+14     	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
     7da:	94 fe       	sbrs	r9, 4
     7dc:	08 c0       	rjmp	.+16     	; 0x7ee <__LOCK_REGION_LENGTH__+0x3ee>
     7de:	06 60       	ori	r16, 0x06	; 6
     7e0:	06 c0       	rjmp	.+12     	; 0x7ee <__LOCK_REGION_LENGTH__+0x3ee>
     7e2:	28 e0       	ldi	r18, 0x08	; 8
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	05 c0       	rjmp	.+10     	; 0x7f2 <__LOCK_REGION_LENGTH__+0x3f2>
     7e8:	20 e1       	ldi	r18, 0x10	; 16
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <__LOCK_REGION_LENGTH__+0x3f2>
     7ee:	20 e1       	ldi	r18, 0x10	; 16
     7f0:	32 e0       	ldi	r19, 0x02	; 2
     7f2:	56 01       	movw	r10, r12
     7f4:	07 ff       	sbrs	r16, 7
     7f6:	09 c0       	rjmp	.+18     	; 0x80a <__LOCK_REGION_LENGTH__+0x40a>
     7f8:	84 e0       	ldi	r24, 0x04	; 4
     7fa:	a8 0e       	add	r10, r24
     7fc:	b1 1c       	adc	r11, r1
     7fe:	f6 01       	movw	r30, r12
     800:	60 81       	ld	r22, Z
     802:	71 81       	ldd	r23, Z+1	; 0x01
     804:	82 81       	ldd	r24, Z+2	; 0x02
     806:	93 81       	ldd	r25, Z+3	; 0x03
     808:	08 c0       	rjmp	.+16     	; 0x81a <__LOCK_REGION_LENGTH__+0x41a>
     80a:	f2 e0       	ldi	r31, 0x02	; 2
     80c:	af 0e       	add	r10, r31
     80e:	b1 1c       	adc	r11, r1
     810:	f6 01       	movw	r30, r12
     812:	60 81       	ld	r22, Z
     814:	71 81       	ldd	r23, Z+1	; 0x01
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a3 01       	movw	r20, r6
     81c:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__ultoa_invert>
     820:	c8 2e       	mov	r12, r24
     822:	c6 18       	sub	r12, r6
     824:	0f 77       	andi	r16, 0x7F	; 127
     826:	90 2e       	mov	r9, r16
     828:	96 fe       	sbrs	r9, 6
     82a:	0b c0       	rjmp	.+22     	; 0x842 <__LOCK_REGION_LENGTH__+0x442>
     82c:	09 2d       	mov	r16, r9
     82e:	0e 7f       	andi	r16, 0xFE	; 254
     830:	c1 16       	cp	r12, r17
     832:	50 f4       	brcc	.+20     	; 0x848 <__LOCK_REGION_LENGTH__+0x448>
     834:	94 fe       	sbrs	r9, 4
     836:	0a c0       	rjmp	.+20     	; 0x84c <__LOCK_REGION_LENGTH__+0x44c>
     838:	92 fc       	sbrc	r9, 2
     83a:	08 c0       	rjmp	.+16     	; 0x84c <__LOCK_REGION_LENGTH__+0x44c>
     83c:	09 2d       	mov	r16, r9
     83e:	0e 7e       	andi	r16, 0xEE	; 238
     840:	05 c0       	rjmp	.+10     	; 0x84c <__LOCK_REGION_LENGTH__+0x44c>
     842:	dc 2c       	mov	r13, r12
     844:	09 2d       	mov	r16, r9
     846:	03 c0       	rjmp	.+6      	; 0x84e <__LOCK_REGION_LENGTH__+0x44e>
     848:	dc 2c       	mov	r13, r12
     84a:	01 c0       	rjmp	.+2      	; 0x84e <__LOCK_REGION_LENGTH__+0x44e>
     84c:	d1 2e       	mov	r13, r17
     84e:	04 ff       	sbrs	r16, 4
     850:	0d c0       	rjmp	.+26     	; 0x86c <__LOCK_REGION_LENGTH__+0x46c>
     852:	fe 01       	movw	r30, r28
     854:	ec 0d       	add	r30, r12
     856:	f1 1d       	adc	r31, r1
     858:	80 81       	ld	r24, Z
     85a:	80 33       	cpi	r24, 0x30	; 48
     85c:	11 f4       	brne	.+4      	; 0x862 <__LOCK_REGION_LENGTH__+0x462>
     85e:	09 7e       	andi	r16, 0xE9	; 233
     860:	09 c0       	rjmp	.+18     	; 0x874 <__LOCK_REGION_LENGTH__+0x474>
     862:	02 ff       	sbrs	r16, 2
     864:	06 c0       	rjmp	.+12     	; 0x872 <__LOCK_REGION_LENGTH__+0x472>
     866:	d3 94       	inc	r13
     868:	d3 94       	inc	r13
     86a:	04 c0       	rjmp	.+8      	; 0x874 <__LOCK_REGION_LENGTH__+0x474>
     86c:	80 2f       	mov	r24, r16
     86e:	86 78       	andi	r24, 0x86	; 134
     870:	09 f0       	breq	.+2      	; 0x874 <__LOCK_REGION_LENGTH__+0x474>
     872:	d3 94       	inc	r13
     874:	03 fd       	sbrc	r16, 3
     876:	11 c0       	rjmp	.+34     	; 0x89a <__LOCK_REGION_LENGTH__+0x49a>
     878:	00 ff       	sbrs	r16, 0
     87a:	06 c0       	rjmp	.+12     	; 0x888 <__LOCK_REGION_LENGTH__+0x488>
     87c:	1c 2d       	mov	r17, r12
     87e:	d5 14       	cp	r13, r5
     880:	80 f4       	brcc	.+32     	; 0x8a2 <__LOCK_REGION_LENGTH__+0x4a2>
     882:	15 0d       	add	r17, r5
     884:	1d 19       	sub	r17, r13
     886:	0d c0       	rjmp	.+26     	; 0x8a2 <__LOCK_REGION_LENGTH__+0x4a2>
     888:	d5 14       	cp	r13, r5
     88a:	58 f4       	brcc	.+22     	; 0x8a2 <__LOCK_REGION_LENGTH__+0x4a2>
     88c:	b7 01       	movw	r22, r14
     88e:	80 e2       	ldi	r24, 0x20	; 32
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     896:	d3 94       	inc	r13
     898:	f7 cf       	rjmp	.-18     	; 0x888 <__LOCK_REGION_LENGTH__+0x488>
     89a:	d5 14       	cp	r13, r5
     89c:	10 f4       	brcc	.+4      	; 0x8a2 <__LOCK_REGION_LENGTH__+0x4a2>
     89e:	5d 18       	sub	r5, r13
     8a0:	01 c0       	rjmp	.+2      	; 0x8a4 <__LOCK_REGION_LENGTH__+0x4a4>
     8a2:	51 2c       	mov	r5, r1
     8a4:	04 ff       	sbrs	r16, 4
     8a6:	10 c0       	rjmp	.+32     	; 0x8c8 <__LOCK_REGION_LENGTH__+0x4c8>
     8a8:	b7 01       	movw	r22, r14
     8aa:	80 e3       	ldi	r24, 0x30	; 48
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     8b2:	02 ff       	sbrs	r16, 2
     8b4:	17 c0       	rjmp	.+46     	; 0x8e4 <__LOCK_REGION_LENGTH__+0x4e4>
     8b6:	01 fd       	sbrc	r16, 1
     8b8:	03 c0       	rjmp	.+6      	; 0x8c0 <__LOCK_REGION_LENGTH__+0x4c0>
     8ba:	88 e7       	ldi	r24, 0x78	; 120
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	02 c0       	rjmp	.+4      	; 0x8c4 <__LOCK_REGION_LENGTH__+0x4c4>
     8c0:	88 e5       	ldi	r24, 0x58	; 88
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	b7 01       	movw	r22, r14
     8c6:	0c c0       	rjmp	.+24     	; 0x8e0 <__LOCK_REGION_LENGTH__+0x4e0>
     8c8:	80 2f       	mov	r24, r16
     8ca:	86 78       	andi	r24, 0x86	; 134
     8cc:	59 f0       	breq	.+22     	; 0x8e4 <__LOCK_REGION_LENGTH__+0x4e4>
     8ce:	01 ff       	sbrs	r16, 1
     8d0:	02 c0       	rjmp	.+4      	; 0x8d6 <__LOCK_REGION_LENGTH__+0x4d6>
     8d2:	8b e2       	ldi	r24, 0x2B	; 43
     8d4:	01 c0       	rjmp	.+2      	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
     8d6:	80 e2       	ldi	r24, 0x20	; 32
     8d8:	07 fd       	sbrc	r16, 7
     8da:	8d e2       	ldi	r24, 0x2D	; 45
     8dc:	b7 01       	movw	r22, r14
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     8e4:	c1 16       	cp	r12, r17
     8e6:	38 f4       	brcc	.+14     	; 0x8f6 <__LOCK_REGION_LENGTH__+0x4f6>
     8e8:	b7 01       	movw	r22, r14
     8ea:	80 e3       	ldi	r24, 0x30	; 48
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     8f2:	11 50       	subi	r17, 0x01	; 1
     8f4:	f7 cf       	rjmp	.-18     	; 0x8e4 <__LOCK_REGION_LENGTH__+0x4e4>
     8f6:	ca 94       	dec	r12
     8f8:	f3 01       	movw	r30, r6
     8fa:	ec 0d       	add	r30, r12
     8fc:	f1 1d       	adc	r31, r1
     8fe:	80 81       	ld	r24, Z
     900:	b7 01       	movw	r22, r14
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     908:	c1 10       	cpse	r12, r1
     90a:	f5 cf       	rjmp	.-22     	; 0x8f6 <__LOCK_REGION_LENGTH__+0x4f6>
     90c:	15 c0       	rjmp	.+42     	; 0x938 <__stack+0x39>
     90e:	f4 e0       	ldi	r31, 0x04	; 4
     910:	f5 15       	cp	r31, r5
     912:	60 f5       	brcc	.+88     	; 0x96c <__stack+0x6d>
     914:	84 e0       	ldi	r24, 0x04	; 4
     916:	58 1a       	sub	r5, r24
     918:	93 fe       	sbrs	r9, 3
     91a:	1f c0       	rjmp	.+62     	; 0x95a <__stack+0x5b>
     91c:	01 11       	cpse	r16, r1
     91e:	27 c0       	rjmp	.+78     	; 0x96e <__stack+0x6f>
     920:	2c 85       	ldd	r18, Y+12	; 0x0c
     922:	23 ff       	sbrs	r18, 3
     924:	2a c0       	rjmp	.+84     	; 0x97a <__stack+0x7b>
     926:	08 e6       	ldi	r16, 0x68	; 104
     928:	10 e0       	ldi	r17, 0x00	; 0
     92a:	39 2d       	mov	r19, r9
     92c:	30 71       	andi	r19, 0x10	; 16
     92e:	93 2e       	mov	r9, r19
     930:	f8 01       	movw	r30, r16
     932:	84 91       	lpm	r24, Z
     934:	81 11       	cpse	r24, r1
     936:	24 c0       	rjmp	.+72     	; 0x980 <__stack+0x81>
     938:	55 20       	and	r5, r5
     93a:	09 f4       	brne	.+2      	; 0x93e <__stack+0x3f>
     93c:	e4 cc       	rjmp	.-1592   	; 0x306 <vfprintf+0x58>
     93e:	b7 01       	movw	r22, r14
     940:	80 e2       	ldi	r24, 0x20	; 32
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     948:	5a 94       	dec	r5
     94a:	f6 cf       	rjmp	.-20     	; 0x938 <__stack+0x39>
     94c:	f7 01       	movw	r30, r14
     94e:	86 81       	ldd	r24, Z+6	; 0x06
     950:	97 81       	ldd	r25, Z+7	; 0x07
     952:	26 c0       	rjmp	.+76     	; 0x9a0 <__stack+0xa1>
     954:	8f ef       	ldi	r24, 0xFF	; 255
     956:	9f ef       	ldi	r25, 0xFF	; 255
     958:	23 c0       	rjmp	.+70     	; 0x9a0 <__stack+0xa1>
     95a:	b7 01       	movw	r22, r14
     95c:	80 e2       	ldi	r24, 0x20	; 32
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     964:	5a 94       	dec	r5
     966:	51 10       	cpse	r5, r1
     968:	f8 cf       	rjmp	.-16     	; 0x95a <__stack+0x5b>
     96a:	d8 cf       	rjmp	.-80     	; 0x91c <__stack+0x1d>
     96c:	51 2c       	mov	r5, r1
     96e:	b7 01       	movw	r22, r14
     970:	80 2f       	mov	r24, r16
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     978:	d3 cf       	rjmp	.-90     	; 0x920 <__stack+0x21>
     97a:	0c e6       	ldi	r16, 0x6C	; 108
     97c:	10 e0       	ldi	r17, 0x00	; 0
     97e:	d5 cf       	rjmp	.-86     	; 0x92a <__stack+0x2b>
     980:	91 10       	cpse	r9, r1
     982:	80 52       	subi	r24, 0x20	; 32
     984:	b7 01       	movw	r22, r14
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <fputc>
     98c:	0f 5f       	subi	r16, 0xFF	; 255
     98e:	1f 4f       	sbci	r17, 0xFF	; 255
     990:	cf cf       	rjmp	.-98     	; 0x930 <__stack+0x31>
     992:	23 e0       	ldi	r18, 0x03	; 3
     994:	25 15       	cp	r18, r5
     996:	10 f4       	brcc	.+4      	; 0x99c <__stack+0x9d>
     998:	83 e0       	ldi	r24, 0x03	; 3
     99a:	bd cf       	rjmp	.-134    	; 0x916 <__stack+0x17>
     99c:	51 2c       	mov	r5, r1
     99e:	c0 cf       	rjmp	.-128    	; 0x920 <__stack+0x21>
     9a0:	60 96       	adiw	r28, 0x10	; 16
     9a2:	e2 e1       	ldi	r30, 0x12	; 18
     9a4:	0c 94 67 0d 	jmp	0x1ace	; 0x1ace <__epilogue_restores__>

000009a8 <putval>:
     9a8:	20 fd       	sbrc	r18, 0
     9aa:	09 c0       	rjmp	.+18     	; 0x9be <putval+0x16>
     9ac:	fc 01       	movw	r30, r24
     9ae:	23 fd       	sbrc	r18, 3
     9b0:	05 c0       	rjmp	.+10     	; 0x9bc <putval+0x14>
     9b2:	22 ff       	sbrs	r18, 2
     9b4:	02 c0       	rjmp	.+4      	; 0x9ba <putval+0x12>
     9b6:	73 83       	std	Z+3, r23	; 0x03
     9b8:	62 83       	std	Z+2, r22	; 0x02
     9ba:	51 83       	std	Z+1, r21	; 0x01
     9bc:	40 83       	st	Z, r20
     9be:	08 95       	ret

000009c0 <mulacc>:
     9c0:	44 fd       	sbrc	r20, 4
     9c2:	17 c0       	rjmp	.+46     	; 0x9f2 <mulacc+0x32>
     9c4:	46 fd       	sbrc	r20, 6
     9c6:	17 c0       	rjmp	.+46     	; 0x9f6 <mulacc+0x36>
     9c8:	ab 01       	movw	r20, r22
     9ca:	bc 01       	movw	r22, r24
     9cc:	da 01       	movw	r26, r20
     9ce:	fb 01       	movw	r30, r22
     9d0:	aa 0f       	add	r26, r26
     9d2:	bb 1f       	adc	r27, r27
     9d4:	ee 1f       	adc	r30, r30
     9d6:	ff 1f       	adc	r31, r31
     9d8:	10 94       	com	r1
     9da:	d1 f7       	brne	.-12     	; 0x9d0 <mulacc+0x10>
     9dc:	4a 0f       	add	r20, r26
     9de:	5b 1f       	adc	r21, r27
     9e0:	6e 1f       	adc	r22, r30
     9e2:	7f 1f       	adc	r23, r31
     9e4:	cb 01       	movw	r24, r22
     9e6:	ba 01       	movw	r22, r20
     9e8:	66 0f       	add	r22, r22
     9ea:	77 1f       	adc	r23, r23
     9ec:	88 1f       	adc	r24, r24
     9ee:	99 1f       	adc	r25, r25
     9f0:	09 c0       	rjmp	.+18     	; 0xa04 <mulacc+0x44>
     9f2:	33 e0       	ldi	r19, 0x03	; 3
     9f4:	01 c0       	rjmp	.+2      	; 0x9f8 <mulacc+0x38>
     9f6:	34 e0       	ldi	r19, 0x04	; 4
     9f8:	66 0f       	add	r22, r22
     9fa:	77 1f       	adc	r23, r23
     9fc:	88 1f       	adc	r24, r24
     9fe:	99 1f       	adc	r25, r25
     a00:	31 50       	subi	r19, 0x01	; 1
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <mulacc+0x38>
     a04:	62 0f       	add	r22, r18
     a06:	71 1d       	adc	r23, r1
     a08:	81 1d       	adc	r24, r1
     a0a:	91 1d       	adc	r25, r1
     a0c:	08 95       	ret

00000a0e <skip_spaces>:
     a0e:	0f 93       	push	r16
     a10:	1f 93       	push	r17
     a12:	cf 93       	push	r28
     a14:	df 93       	push	r29
     a16:	8c 01       	movw	r16, r24
     a18:	c8 01       	movw	r24, r16
     a1a:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     a1e:	ec 01       	movw	r28, r24
     a20:	97 fd       	sbrc	r25, 7
     a22:	08 c0       	rjmp	.+16     	; 0xa34 <skip_spaces+0x26>
     a24:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <isspace>
     a28:	89 2b       	or	r24, r25
     a2a:	b1 f7       	brne	.-20     	; 0xa18 <skip_spaces+0xa>
     a2c:	b8 01       	movw	r22, r16
     a2e:	ce 01       	movw	r24, r28
     a30:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
     a34:	ce 01       	movw	r24, r28
     a36:	df 91       	pop	r29
     a38:	cf 91       	pop	r28
     a3a:	1f 91       	pop	r17
     a3c:	0f 91       	pop	r16
     a3e:	08 95       	ret

00000a40 <conv_int>:
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	b0 e0       	ldi	r27, 0x00	; 0
     a44:	e6 e2       	ldi	r30, 0x26	; 38
     a46:	f5 e0       	ldi	r31, 0x05	; 5
     a48:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__prologue_saves__+0xc>
     a4c:	7c 01       	movw	r14, r24
     a4e:	8b 01       	movw	r16, r22
     a50:	6a 01       	movw	r12, r20
     a52:	d2 2f       	mov	r29, r18
     a54:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     a58:	9c 01       	movw	r18, r24
     a5a:	33 27       	eor	r19, r19
     a5c:	2b 32       	cpi	r18, 0x2B	; 43
     a5e:	31 05       	cpc	r19, r1
     a60:	21 f0       	breq	.+8      	; 0xa6a <conv_int+0x2a>
     a62:	2d 32       	cpi	r18, 0x2D	; 45
     a64:	31 05       	cpc	r19, r1
     a66:	59 f4       	brne	.+22     	; 0xa7e <conv_int+0x3e>
     a68:	d0 68       	ori	r29, 0x80	; 128
     a6a:	01 50       	subi	r16, 0x01	; 1
     a6c:	11 09       	sbc	r17, r1
     a6e:	11 f4       	brne	.+4      	; 0xa74 <conv_int+0x34>
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	6b c0       	rjmp	.+214    	; 0xb4a <conv_int+0x10a>
     a74:	c7 01       	movw	r24, r14
     a76:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     a7a:	97 fd       	sbrc	r25, 7
     a7c:	f9 cf       	rjmp	.-14     	; 0xa70 <conv_int+0x30>
     a7e:	cd 2f       	mov	r28, r29
     a80:	cd 7f       	andi	r28, 0xFD	; 253
     a82:	2d 2f       	mov	r18, r29
     a84:	20 73       	andi	r18, 0x30	; 48
     a86:	19 f5       	brne	.+70     	; 0xace <conv_int+0x8e>
     a88:	80 33       	cpi	r24, 0x30	; 48
     a8a:	09 f5       	brne	.+66     	; 0xace <conv_int+0x8e>
     a8c:	58 01       	movw	r10, r16
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	a8 1a       	sub	r10, r24
     a92:	b1 08       	sbc	r11, r1
     a94:	09 f4       	brne	.+2      	; 0xa98 <conv_int+0x58>
     a96:	45 c0       	rjmp	.+138    	; 0xb22 <conv_int+0xe2>
     a98:	c7 01       	movw	r24, r14
     a9a:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     a9e:	97 fd       	sbrc	r25, 7
     aa0:	40 c0       	rjmp	.+128    	; 0xb22 <conv_int+0xe2>
     aa2:	9c 01       	movw	r18, r24
     aa4:	2f 7d       	andi	r18, 0xDF	; 223
     aa6:	33 27       	eor	r19, r19
     aa8:	28 35       	cpi	r18, 0x58	; 88
     aaa:	31 05       	cpc	r19, r1
     aac:	51 f4       	brne	.+20     	; 0xac2 <conv_int+0x82>
     aae:	c2 64       	ori	r28, 0x42	; 66
     ab0:	02 50       	subi	r16, 0x02	; 2
     ab2:	11 09       	sbc	r17, r1
     ab4:	b1 f1       	breq	.+108    	; 0xb22 <conv_int+0xe2>
     ab6:	c7 01       	movw	r24, r14
     ab8:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     abc:	97 ff       	sbrs	r25, 7
     abe:	07 c0       	rjmp	.+14     	; 0xace <conv_int+0x8e>
     ac0:	30 c0       	rjmp	.+96     	; 0xb22 <conv_int+0xe2>
     ac2:	d6 ff       	sbrs	r29, 6
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <conv_int+0x8a>
     ac6:	c2 60       	ori	r28, 0x02	; 2
     ac8:	01 c0       	rjmp	.+2      	; 0xacc <conv_int+0x8c>
     aca:	c2 61       	ori	r28, 0x12	; 18
     acc:	85 01       	movw	r16, r10
     ace:	81 2c       	mov	r8, r1
     ad0:	91 2c       	mov	r9, r1
     ad2:	54 01       	movw	r10, r8
     ad4:	20 ed       	ldi	r18, 0xD0	; 208
     ad6:	28 0f       	add	r18, r24
     ad8:	28 30       	cpi	r18, 0x08	; 8
     ada:	80 f0       	brcs	.+32     	; 0xafc <conv_int+0xbc>
     adc:	c4 ff       	sbrs	r28, 4
     ade:	04 c0       	rjmp	.+8      	; 0xae8 <conv_int+0xa8>
     ae0:	b7 01       	movw	r22, r14
     ae2:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
     ae6:	1a c0       	rjmp	.+52     	; 0xb1c <conv_int+0xdc>
     ae8:	2a 30       	cpi	r18, 0x0A	; 10
     aea:	40 f0       	brcs	.+16     	; 0xafc <conv_int+0xbc>
     aec:	c6 ff       	sbrs	r28, 6
     aee:	f8 cf       	rjmp	.-16     	; 0xae0 <conv_int+0xa0>
     af0:	2f 7d       	andi	r18, 0xDF	; 223
     af2:	3f ee       	ldi	r19, 0xEF	; 239
     af4:	32 0f       	add	r19, r18
     af6:	36 30       	cpi	r19, 0x06	; 6
     af8:	98 f7       	brcc	.-26     	; 0xae0 <conv_int+0xa0>
     afa:	27 50       	subi	r18, 0x07	; 7
     afc:	4c 2f       	mov	r20, r28
     afe:	c5 01       	movw	r24, r10
     b00:	b4 01       	movw	r22, r8
     b02:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <mulacc>
     b06:	4b 01       	movw	r8, r22
     b08:	5c 01       	movw	r10, r24
     b0a:	c2 60       	ori	r28, 0x02	; 2
     b0c:	01 50       	subi	r16, 0x01	; 1
     b0e:	11 09       	sbc	r17, r1
     b10:	59 f0       	breq	.+22     	; 0xb28 <conv_int+0xe8>
     b12:	c7 01       	movw	r24, r14
     b14:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     b18:	97 ff       	sbrs	r25, 7
     b1a:	dc cf       	rjmp	.-72     	; 0xad4 <conv_int+0x94>
     b1c:	c1 fd       	sbrc	r28, 1
     b1e:	04 c0       	rjmp	.+8      	; 0xb28 <conv_int+0xe8>
     b20:	a7 cf       	rjmp	.-178    	; 0xa70 <conv_int+0x30>
     b22:	81 2c       	mov	r8, r1
     b24:	91 2c       	mov	r9, r1
     b26:	54 01       	movw	r10, r8
     b28:	c7 ff       	sbrs	r28, 7
     b2a:	08 c0       	rjmp	.+16     	; 0xb3c <conv_int+0xfc>
     b2c:	b0 94       	com	r11
     b2e:	a0 94       	com	r10
     b30:	90 94       	com	r9
     b32:	80 94       	com	r8
     b34:	81 1c       	adc	r8, r1
     b36:	91 1c       	adc	r9, r1
     b38:	a1 1c       	adc	r10, r1
     b3a:	b1 1c       	adc	r11, r1
     b3c:	2c 2f       	mov	r18, r28
     b3e:	b5 01       	movw	r22, r10
     b40:	a4 01       	movw	r20, r8
     b42:	c6 01       	movw	r24, r12
     b44:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <putval>
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	ec e0       	ldi	r30, 0x0C	; 12
     b50:	0c 94 6d 0d 	jmp	0x1ada	; 0x1ada <__epilogue_restores__+0xc>

00000b54 <conv_brk>:
     b54:	a0 e2       	ldi	r26, 0x20	; 32
     b56:	b0 e0       	ldi	r27, 0x00	; 0
     b58:	e0 eb       	ldi	r30, 0xB0	; 176
     b5a:	f5 e0       	ldi	r31, 0x05	; 5
     b5c:	0c 94 4d 0d 	jmp	0x1a9a	; 0x1a9a <__prologue_saves__+0x4>
     b60:	5c 01       	movw	r10, r24
     b62:	4b 01       	movw	r8, r22
     b64:	7a 01       	movw	r14, r20
     b66:	8e 01       	movw	r16, r28
     b68:	0f 5f       	subi	r16, 0xFF	; 255
     b6a:	1f 4f       	sbci	r17, 0xFF	; 255
     b6c:	68 01       	movw	r12, r16
     b6e:	80 e2       	ldi	r24, 0x20	; 32
     b70:	f8 01       	movw	r30, r16
     b72:	11 92       	st	Z+, r1
     b74:	8a 95       	dec	r24
     b76:	e9 f7       	brne	.-6      	; 0xb72 <conv_brk+0x1e>
     b78:	f5 01       	movw	r30, r10
     b7a:	53 80       	ldd	r5, Z+3	; 0x03
     b7c:	40 e0       	ldi	r20, 0x00	; 0
     b7e:	50 e0       	ldi	r21, 0x00	; 0
     b80:	61 2c       	mov	r6, r1
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	71 2c       	mov	r7, r1
     b86:	a1 e0       	ldi	r26, 0x01	; 1
     b88:	b0 e0       	ldi	r27, 0x00	; 0
     b8a:	f9 01       	movw	r30, r18
     b8c:	53 fc       	sbrc	r5, 3
     b8e:	85 91       	lpm	r24, Z+
     b90:	53 fe       	sbrs	r5, 3
     b92:	81 91       	ld	r24, Z+
     b94:	8f 01       	movw	r16, r30
     b96:	48 2e       	mov	r4, r24
     b98:	9f 01       	movw	r18, r30
     b9a:	81 11       	cpse	r24, r1
     b9c:	03 c0       	rjmp	.+6      	; 0xba4 <conv_brk+0x50>
     b9e:	80 e0       	ldi	r24, 0x00	; 0
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	96 c0       	rjmp	.+300    	; 0xcd0 <conv_brk+0x17c>
     ba4:	8e 35       	cpi	r24, 0x5E	; 94
     ba6:	19 f4       	brne	.+6      	; 0xbae <conv_brk+0x5a>
     ba8:	41 15       	cp	r20, r1
     baa:	51 05       	cpc	r21, r1
     bac:	51 f1       	breq	.+84     	; 0xc02 <conv_brk+0xae>
     bae:	67 2d       	mov	r22, r7
     bb0:	70 e0       	ldi	r23, 0x00	; 0
     bb2:	64 17       	cp	r22, r20
     bb4:	75 07       	cpc	r23, r21
     bb6:	3c f4       	brge	.+14     	; 0xbc6 <conv_brk+0x72>
     bb8:	8d 35       	cpi	r24, 0x5D	; 93
     bba:	61 f1       	breq	.+88     	; 0xc14 <conv_brk+0xc0>
     bbc:	8d 32       	cpi	r24, 0x2D	; 45
     bbe:	19 f4       	brne	.+6      	; 0xbc6 <conv_brk+0x72>
     bc0:	99 23       	and	r25, r25
     bc2:	11 f1       	breq	.+68     	; 0xc08 <conv_brk+0xb4>
     bc4:	03 c0       	rjmp	.+6      	; 0xbcc <conv_brk+0x78>
     bc6:	99 23       	and	r25, r25
     bc8:	09 f4       	brne	.+2      	; 0xbcc <conv_brk+0x78>
     bca:	6d c0       	rjmp	.+218    	; 0xca6 <conv_brk+0x152>
     bcc:	84 2d       	mov	r24, r4
     bce:	86 95       	lsr	r24
     bd0:	86 95       	lsr	r24
     bd2:	86 95       	lsr	r24
     bd4:	f6 01       	movw	r30, r12
     bd6:	e8 0f       	add	r30, r24
     bd8:	f1 1d       	adc	r31, r1
     bda:	84 2d       	mov	r24, r4
     bdc:	87 70       	andi	r24, 0x07	; 7
     bde:	8d 01       	movw	r16, r26
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <conv_brk+0x92>
     be2:	00 0f       	add	r16, r16
     be4:	11 1f       	adc	r17, r17
     be6:	8a 95       	dec	r24
     be8:	e2 f7       	brpl	.-8      	; 0xbe2 <conv_brk+0x8e>
     bea:	c8 01       	movw	r24, r16
     bec:	90 81       	ld	r25, Z
     bee:	89 2b       	or	r24, r25
     bf0:	80 83       	st	Z, r24
     bf2:	64 14       	cp	r6, r4
     bf4:	59 f0       	breq	.+22     	; 0xc0c <conv_brk+0xb8>
     bf6:	46 14       	cp	r4, r6
     bf8:	10 f4       	brcc	.+4      	; 0xbfe <conv_brk+0xaa>
     bfa:	43 94       	inc	r4
     bfc:	e7 cf       	rjmp	.-50     	; 0xbcc <conv_brk+0x78>
     bfe:	4a 94       	dec	r4
     c00:	e5 cf       	rjmp	.-54     	; 0xbcc <conv_brk+0x78>
     c02:	77 24       	eor	r7, r7
     c04:	73 94       	inc	r7
     c06:	03 c0       	rjmp	.+6      	; 0xc0e <conv_brk+0xba>
     c08:	91 e0       	ldi	r25, 0x01	; 1
     c0a:	01 c0       	rjmp	.+2      	; 0xc0e <conv_brk+0xba>
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	4f 5f       	subi	r20, 0xFF	; 255
     c10:	5f 4f       	sbci	r21, 0xFF	; 255
     c12:	bb cf       	rjmp	.-138    	; 0xb8a <conv_brk+0x36>
     c14:	99 23       	and	r25, r25
     c16:	19 f0       	breq	.+6      	; 0xc1e <conv_brk+0xca>
     c18:	8e 81       	ldd	r24, Y+6	; 0x06
     c1a:	80 62       	ori	r24, 0x20	; 32
     c1c:	8e 83       	std	Y+6, r24	; 0x06
     c1e:	71 10       	cpse	r7, r1
     c20:	03 c0       	rjmp	.+6      	; 0xc28 <conv_brk+0xd4>
     c22:	77 24       	eor	r7, r7
     c24:	73 94       	inc	r7
     c26:	19 c0       	rjmp	.+50     	; 0xc5a <conv_brk+0x106>
     c28:	f6 01       	movw	r30, r12
     c2a:	9e 01       	movw	r18, r28
     c2c:	2f 5d       	subi	r18, 0xDF	; 223
     c2e:	3f 4f       	sbci	r19, 0xFF	; 255
     c30:	80 81       	ld	r24, Z
     c32:	80 95       	com	r24
     c34:	81 93       	st	Z+, r24
     c36:	2e 17       	cp	r18, r30
     c38:	3f 07       	cpc	r19, r31
     c3a:	d1 f7       	brne	.-12     	; 0xc30 <conv_brk+0xdc>
     c3c:	f2 cf       	rjmp	.-28     	; 0xc22 <conv_brk+0xce>
     c3e:	e1 14       	cp	r14, r1
     c40:	f1 04       	cpc	r15, r1
     c42:	31 f0       	breq	.+12     	; 0xc50 <conv_brk+0xfc>
     c44:	f7 01       	movw	r30, r14
     c46:	80 83       	st	Z, r24
     c48:	b7 01       	movw	r22, r14
     c4a:	6f 5f       	subi	r22, 0xFF	; 255
     c4c:	7f 4f       	sbci	r23, 0xFF	; 255
     c4e:	7b 01       	movw	r14, r22
     c50:	71 e0       	ldi	r23, 0x01	; 1
     c52:	87 1a       	sub	r8, r23
     c54:	91 08       	sbc	r9, r1
     c56:	71 2c       	mov	r7, r1
     c58:	f9 f0       	breq	.+62     	; 0xc98 <conv_brk+0x144>
     c5a:	c5 01       	movw	r24, r10
     c5c:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     c60:	97 fd       	sbrc	r25, 7
     c62:	18 c0       	rjmp	.+48     	; 0xc94 <conv_brk+0x140>
     c64:	fc 01       	movw	r30, r24
     c66:	ff 27       	eor	r31, r31
     c68:	23 e0       	ldi	r18, 0x03	; 3
     c6a:	f5 95       	asr	r31
     c6c:	e7 95       	ror	r30
     c6e:	2a 95       	dec	r18
     c70:	e1 f7       	brne	.-8      	; 0xc6a <conv_brk+0x116>
     c72:	ec 0d       	add	r30, r12
     c74:	fd 1d       	adc	r31, r13
     c76:	20 81       	ld	r18, Z
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	ac 01       	movw	r20, r24
     c7c:	47 70       	andi	r20, 0x07	; 7
     c7e:	55 27       	eor	r21, r21
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <conv_brk+0x132>
     c82:	35 95       	asr	r19
     c84:	27 95       	ror	r18
     c86:	4a 95       	dec	r20
     c88:	e2 f7       	brpl	.-8      	; 0xc82 <conv_brk+0x12e>
     c8a:	20 fd       	sbrc	r18, 0
     c8c:	d8 cf       	rjmp	.-80     	; 0xc3e <conv_brk+0xea>
     c8e:	b5 01       	movw	r22, r10
     c90:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
     c94:	71 10       	cpse	r7, r1
     c96:	83 cf       	rjmp	.-250    	; 0xb9e <conv_brk+0x4a>
     c98:	e1 14       	cp	r14, r1
     c9a:	f1 04       	cpc	r15, r1
     c9c:	11 f0       	breq	.+4      	; 0xca2 <conv_brk+0x14e>
     c9e:	f7 01       	movw	r30, r14
     ca0:	10 82       	st	Z, r1
     ca2:	c8 01       	movw	r24, r16
     ca4:	15 c0       	rjmp	.+42     	; 0xcd0 <conv_brk+0x17c>
     ca6:	68 2f       	mov	r22, r24
     ca8:	66 95       	lsr	r22
     caa:	66 95       	lsr	r22
     cac:	66 95       	lsr	r22
     cae:	f6 01       	movw	r30, r12
     cb0:	e6 0f       	add	r30, r22
     cb2:	f1 1d       	adc	r31, r1
     cb4:	68 2f       	mov	r22, r24
     cb6:	67 70       	andi	r22, 0x07	; 7
     cb8:	8d 01       	movw	r16, r26
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <conv_brk+0x16c>
     cbc:	00 0f       	add	r16, r16
     cbe:	11 1f       	adc	r17, r17
     cc0:	6a 95       	dec	r22
     cc2:	e2 f7       	brpl	.-8      	; 0xcbc <conv_brk+0x168>
     cc4:	b8 01       	movw	r22, r16
     cc6:	70 81       	ld	r23, Z
     cc8:	67 2b       	or	r22, r23
     cca:	60 83       	st	Z, r22
     ccc:	68 2e       	mov	r6, r24
     cce:	9f cf       	rjmp	.-194    	; 0xc0e <conv_brk+0xba>
     cd0:	a0 96       	adiw	r28, 0x20	; 32
     cd2:	e0 e1       	ldi	r30, 0x10	; 16
     cd4:	0c 94 69 0d 	jmp	0x1ad2	; 0x1ad2 <__epilogue_restores__+0x4>

00000cd8 <conv_flt>:
     cd8:	2f 92       	push	r2
     cda:	3f 92       	push	r3
     cdc:	4f 92       	push	r4
     cde:	5f 92       	push	r5
     ce0:	6f 92       	push	r6
     ce2:	7f 92       	push	r7
     ce4:	9f 92       	push	r9
     ce6:	af 92       	push	r10
     ce8:	bf 92       	push	r11
     cea:	cf 92       	push	r12
     cec:	df 92       	push	r13
     cee:	ef 92       	push	r14
     cf0:	ff 92       	push	r15
     cf2:	0f 93       	push	r16
     cf4:	1f 93       	push	r17
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	6c 01       	movw	r12, r24
     cfc:	8b 01       	movw	r16, r22
     cfe:	1a 01       	movw	r2, r20
     d00:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     d04:	ec 01       	movw	r28, r24
     d06:	99 27       	eor	r25, r25
     d08:	8b 32       	cpi	r24, 0x2B	; 43
     d0a:	91 05       	cpc	r25, r1
     d0c:	29 f0       	breq	.+10     	; 0xd18 <conv_flt+0x40>
     d0e:	8d 97       	sbiw	r24, 0x2d	; 45
     d10:	81 f4       	brne	.+32     	; 0xd32 <conv_flt+0x5a>
     d12:	30 e8       	ldi	r19, 0x80	; 128
     d14:	93 2e       	mov	r9, r19
     d16:	01 c0       	rjmp	.+2      	; 0xd1a <conv_flt+0x42>
     d18:	91 2c       	mov	r9, r1
     d1a:	01 50       	subi	r16, 0x01	; 1
     d1c:	11 09       	sbc	r17, r1
     d1e:	11 f4       	brne	.+4      	; 0xd24 <conv_flt+0x4c>
     d20:	80 e0       	ldi	r24, 0x00	; 0
     d22:	0c c1       	rjmp	.+536    	; 0xf3c <conv_flt+0x264>
     d24:	c6 01       	movw	r24, r12
     d26:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     d2a:	ec 01       	movw	r28, r24
     d2c:	97 ff       	sbrs	r25, 7
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <conv_flt+0x5c>
     d30:	f7 cf       	rjmp	.-18     	; 0xd20 <conv_flt+0x48>
     d32:	91 2c       	mov	r9, r1
     d34:	ce 01       	movw	r24, r28
     d36:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <tolower>
     d3a:	89 36       	cpi	r24, 0x69	; 105
     d3c:	91 05       	cpc	r25, r1
     d3e:	31 f0       	breq	.+12     	; 0xd4c <conv_flt+0x74>
     d40:	8e 36       	cpi	r24, 0x6E	; 110
     d42:	91 05       	cpc	r25, r1
     d44:	99 f5       	brne	.+102    	; 0xdac <conv_flt+0xd4>
     d46:	cc e7       	ldi	r28, 0x7C	; 124
     d48:	d1 e0       	ldi	r29, 0x01	; 1
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <conv_flt+0x78>
     d4c:	cf e7       	ldi	r28, 0x7F	; 127
     d4e:	d1 e0       	ldi	r29, 0x01	; 1
     d50:	21 96       	adiw	r28, 0x01	; 1
     d52:	fe 01       	movw	r30, r28
     d54:	31 97       	sbiw	r30, 0x01	; 1
     d56:	b4 90       	lpm	r11, Z
     d58:	bb 20       	and	r11, r11
     d5a:	c9 f0       	breq	.+50     	; 0xd8e <conv_flt+0xb6>
     d5c:	01 50       	subi	r16, 0x01	; 1
     d5e:	11 09       	sbc	r17, r1
     d60:	91 f0       	breq	.+36     	; 0xd86 <conv_flt+0xae>
     d62:	c6 01       	movw	r24, r12
     d64:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     d68:	7c 01       	movw	r14, r24
     d6a:	97 fd       	sbrc	r25, 7
     d6c:	0c c0       	rjmp	.+24     	; 0xd86 <conv_flt+0xae>
     d6e:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <tolower>
     d72:	99 27       	eor	r25, r25
     d74:	eb 2d       	mov	r30, r11
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	8e 17       	cp	r24, r30
     d7a:	9f 07       	cpc	r25, r31
     d7c:	49 f3       	breq	.-46     	; 0xd50 <conv_flt+0x78>
     d7e:	b6 01       	movw	r22, r12
     d80:	c7 01       	movw	r24, r14
     d82:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
     d86:	c2 58       	subi	r28, 0x82	; 130
     d88:	d1 40       	sbci	r29, 0x01	; 1
     d8a:	51 f6       	brne	.-108    	; 0xd20 <conv_flt+0x48>
     d8c:	03 c0       	rjmp	.+6      	; 0xd94 <conv_flt+0xbc>
     d8e:	cf 57       	subi	r28, 0x7F	; 127
     d90:	d1 40       	sbci	r29, 0x01	; 1
     d92:	29 f0       	breq	.+10     	; 0xd9e <conv_flt+0xc6>
     d94:	80 e0       	ldi	r24, 0x00	; 0
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	a0 e8       	ldi	r26, 0x80	; 128
     d9a:	bf e7       	ldi	r27, 0x7F	; 127
     d9c:	04 c0       	rjmp	.+8      	; 0xda6 <conv_flt+0xce>
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	a0 ec       	ldi	r26, 0xC0	; 192
     da4:	bf e7       	ldi	r27, 0x7F	; 127
     da6:	bc 01       	movw	r22, r24
     da8:	cd 01       	movw	r24, r26
     daa:	b8 c0       	rjmp	.+368    	; 0xf1c <conv_flt+0x244>
     dac:	41 2c       	mov	r4, r1
     dae:	51 2c       	mov	r5, r1
     db0:	32 01       	movw	r6, r4
     db2:	e1 2c       	mov	r14, r1
     db4:	f1 2c       	mov	r15, r1
     db6:	2c 2f       	mov	r18, r28
     db8:	20 53       	subi	r18, 0x30	; 48
     dba:	2a 30       	cpi	r18, 0x0A	; 10
     dbc:	10 f5       	brcc	.+68     	; 0xe02 <conv_flt+0x12a>
     dbe:	e9 2d       	mov	r30, r9
     dc0:	e2 60       	ori	r30, 0x02	; 2
     dc2:	be 2e       	mov	r11, r30
     dc4:	89 2d       	mov	r24, r9
     dc6:	88 70       	andi	r24, 0x08	; 8
     dc8:	92 fe       	sbrs	r9, 2
     dca:	06 c0       	rjmp	.+12     	; 0xdd8 <conv_flt+0x100>
     dcc:	81 11       	cpse	r24, r1
     dce:	20 c0       	rjmp	.+64     	; 0xe10 <conv_flt+0x138>
     dd0:	ff ef       	ldi	r31, 0xFF	; 255
     dd2:	ef 1a       	sub	r14, r31
     dd4:	ff 0a       	sbc	r15, r31
     dd6:	1c c0       	rjmp	.+56     	; 0xe10 <conv_flt+0x138>
     dd8:	88 23       	and	r24, r24
     dda:	19 f0       	breq	.+6      	; 0xde2 <conv_flt+0x10a>
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	e8 1a       	sub	r14, r24
     de0:	f1 08       	sbc	r15, r1
     de2:	40 e2       	ldi	r20, 0x20	; 32
     de4:	c3 01       	movw	r24, r6
     de6:	b2 01       	movw	r22, r4
     de8:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <mulacc>
     dec:	2b 01       	movw	r4, r22
     dee:	3c 01       	movw	r6, r24
     df0:	68 39       	cpi	r22, 0x98	; 152
     df2:	79 49       	sbci	r23, 0x99	; 153
     df4:	89 49       	sbci	r24, 0x99	; 153
     df6:	99 41       	sbci	r25, 0x19	; 25
     df8:	58 f0       	brcs	.+22     	; 0xe10 <conv_flt+0x138>
     dfa:	f9 2d       	mov	r31, r9
     dfc:	f6 60       	ori	r31, 0x06	; 6
     dfe:	bf 2e       	mov	r11, r31
     e00:	07 c0       	rjmp	.+14     	; 0xe10 <conv_flt+0x138>
     e02:	2e 3f       	cpi	r18, 0xFE	; 254
     e04:	89 f4       	brne	.+34     	; 0xe28 <conv_flt+0x150>
     e06:	93 fc       	sbrc	r9, 3
     e08:	0f c0       	rjmp	.+30     	; 0xe28 <conv_flt+0x150>
     e0a:	29 2d       	mov	r18, r9
     e0c:	28 60       	ori	r18, 0x08	; 8
     e0e:	b2 2e       	mov	r11, r18
     e10:	01 50       	subi	r16, 0x01	; 1
     e12:	11 09       	sbc	r17, r1
     e14:	41 f0       	breq	.+16     	; 0xe26 <conv_flt+0x14e>
     e16:	c6 01       	movw	r24, r12
     e18:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     e1c:	ec 01       	movw	r28, r24
     e1e:	9b 2c       	mov	r9, r11
     e20:	97 ff       	sbrs	r25, 7
     e22:	c9 cf       	rjmp	.-110    	; 0xdb6 <conv_flt+0xde>
     e24:	01 c0       	rjmp	.+2      	; 0xe28 <conv_flt+0x150>
     e26:	9b 2c       	mov	r9, r11
     e28:	91 fe       	sbrs	r9, 1
     e2a:	7a cf       	rjmp	.-268    	; 0xd20 <conv_flt+0x48>
     e2c:	ce 01       	movw	r24, r28
     e2e:	8f 7d       	andi	r24, 0xDF	; 223
     e30:	99 27       	eor	r25, r25
     e32:	85 34       	cpi	r24, 0x45	; 69
     e34:	91 05       	cpc	r25, r1
     e36:	09 f0       	breq	.+2      	; 0xe3a <conv_flt+0x162>
     e38:	42 c0       	rjmp	.+132    	; 0xebe <conv_flt+0x1e6>
     e3a:	58 01       	movw	r10, r16
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	a8 1a       	sub	r10, r24
     e40:	b1 08       	sbc	r11, r1
     e42:	09 f4       	brne	.+2      	; 0xe46 <conv_flt+0x16e>
     e44:	6d cf       	rjmp	.-294    	; 0xd20 <conv_flt+0x48>
     e46:	c6 01       	movw	r24, r12
     e48:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     e4c:	ec 01       	movw	r28, r24
     e4e:	97 fd       	sbrc	r25, 7
     e50:	67 cf       	rjmp	.-306    	; 0xd20 <conv_flt+0x48>
     e52:	99 27       	eor	r25, r25
     e54:	8b 32       	cpi	r24, 0x2B	; 43
     e56:	91 05       	cpc	r25, r1
     e58:	29 f0       	breq	.+10     	; 0xe64 <conv_flt+0x18c>
     e5a:	8d 97       	sbiw	r24, 0x2d	; 45
     e5c:	69 f4       	brne	.+26     	; 0xe78 <conv_flt+0x1a0>
     e5e:	e9 2d       	mov	r30, r9
     e60:	e0 61       	ori	r30, 0x10	; 16
     e62:	9e 2e       	mov	r9, r30
     e64:	58 01       	movw	r10, r16
     e66:	f2 e0       	ldi	r31, 0x02	; 2
     e68:	af 1a       	sub	r10, r31
     e6a:	b1 08       	sbc	r11, r1
     e6c:	09 f4       	brne	.+2      	; 0xe70 <conv_flt+0x198>
     e6e:	58 cf       	rjmp	.-336    	; 0xd20 <conv_flt+0x48>
     e70:	c6 01       	movw	r24, r12
     e72:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     e76:	ec 01       	movw	r28, r24
     e78:	ce 01       	movw	r24, r28
     e7a:	c0 97       	sbiw	r24, 0x30	; 48
     e7c:	0a 97       	sbiw	r24, 0x0a	; 10
     e7e:	08 f0       	brcs	.+2      	; 0xe82 <conv_flt+0x1aa>
     e80:	4f cf       	rjmp	.-354    	; 0xd20 <conv_flt+0x48>
     e82:	85 01       	movw	r16, r10
     e84:	a1 2c       	mov	r10, r1
     e86:	b1 2c       	mov	r11, r1
     e88:	b5 01       	movw	r22, r10
     e8a:	bb 0c       	add	r11, r11
     e8c:	88 0b       	sbc	r24, r24
     e8e:	99 0b       	sbc	r25, r25
     e90:	2c 2f       	mov	r18, r28
     e92:	20 53       	subi	r18, 0x30	; 48
     e94:	40 e2       	ldi	r20, 0x20	; 32
     e96:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <mulacc>
     e9a:	5b 01       	movw	r10, r22
     e9c:	01 50       	subi	r16, 0x01	; 1
     e9e:	11 09       	sbc	r17, r1
     ea0:	39 f0       	breq	.+14     	; 0xeb0 <conv_flt+0x1d8>
     ea2:	c6 01       	movw	r24, r12
     ea4:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     ea8:	ec 01       	movw	r28, r24
     eaa:	c0 97       	sbiw	r24, 0x30	; 48
     eac:	0a 97       	sbiw	r24, 0x0a	; 10
     eae:	60 f3       	brcs	.-40     	; 0xe88 <conv_flt+0x1b0>
     eb0:	94 fe       	sbrs	r9, 4
     eb2:	03 c0       	rjmp	.+6      	; 0xeba <conv_flt+0x1e2>
     eb4:	b1 94       	neg	r11
     eb6:	a1 94       	neg	r10
     eb8:	b1 08       	sbc	r11, r1
     eba:	ea 0c       	add	r14, r10
     ebc:	fb 1c       	adc	r15, r11
     ebe:	01 2b       	or	r16, r17
     ec0:	31 f0       	breq	.+12     	; 0xece <conv_flt+0x1f6>
     ec2:	d7 fd       	sbrc	r29, 7
     ec4:	04 c0       	rjmp	.+8      	; 0xece <conv_flt+0x1f6>
     ec6:	b6 01       	movw	r22, r12
     ec8:	ce 01       	movw	r24, r28
     eca:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
     ece:	c3 01       	movw	r24, r6
     ed0:	b2 01       	movw	r22, r4
     ed2:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatunsisf>
     ed6:	f7 fe       	sbrs	r15, 7
     ed8:	06 c0       	rjmp	.+12     	; 0xee6 <conv_flt+0x20e>
     eda:	f1 94       	neg	r15
     edc:	e1 94       	neg	r14
     ede:	f1 08       	sbc	r15, r1
     ee0:	cb e9       	ldi	r28, 0x9B	; 155
     ee2:	d1 e0       	ldi	r29, 0x01	; 1
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <conv_flt+0x212>
     ee6:	c3 eb       	ldi	r28, 0xB3	; 179
     ee8:	d1 e0       	ldi	r29, 0x01	; 1
     eea:	6e 01       	movw	r12, r28
     eec:	28 e1       	ldi	r18, 0x18	; 24
     eee:	c2 1a       	sub	r12, r18
     ef0:	d1 08       	sbc	r13, r1
     ef2:	00 e2       	ldi	r16, 0x20	; 32
     ef4:	10 e0       	ldi	r17, 0x00	; 0
     ef6:	e0 16       	cp	r14, r16
     ef8:	f1 06       	cpc	r15, r17
     efa:	50 f0       	brcs	.+20     	; 0xf10 <conv_flt+0x238>
     efc:	fe 01       	movw	r30, r28
     efe:	25 91       	lpm	r18, Z+
     f00:	35 91       	lpm	r19, Z+
     f02:	45 91       	lpm	r20, Z+
     f04:	54 91       	lpm	r21, Z
     f06:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <__mulsf3>
     f0a:	e0 1a       	sub	r14, r16
     f0c:	f1 0a       	sbc	r15, r17
     f0e:	f3 cf       	rjmp	.-26     	; 0xef6 <conv_flt+0x21e>
     f10:	24 97       	sbiw	r28, 0x04	; 4
     f12:	16 95       	lsr	r17
     f14:	07 95       	ror	r16
     f16:	cc 16       	cp	r12, r28
     f18:	dd 06       	cpc	r13, r29
     f1a:	69 f7       	brne	.-38     	; 0xef6 <conv_flt+0x21e>
     f1c:	97 fe       	sbrs	r9, 7
     f1e:	05 c0       	rjmp	.+10     	; 0xf2a <conv_flt+0x252>
     f20:	dc 01       	movw	r26, r24
     f22:	cb 01       	movw	r24, r22
     f24:	b0 58       	subi	r27, 0x80	; 128
     f26:	bc 01       	movw	r22, r24
     f28:	cd 01       	movw	r24, r26
     f2a:	21 14       	cp	r2, r1
     f2c:	31 04       	cpc	r3, r1
     f2e:	29 f0       	breq	.+10     	; 0xf3a <conv_flt+0x262>
     f30:	f1 01       	movw	r30, r2
     f32:	60 83       	st	Z, r22
     f34:	71 83       	std	Z+1, r23	; 0x01
     f36:	82 83       	std	Z+2, r24	; 0x02
     f38:	93 83       	std	Z+3, r25	; 0x03
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	df 91       	pop	r29
     f3e:	cf 91       	pop	r28
     f40:	1f 91       	pop	r17
     f42:	0f 91       	pop	r16
     f44:	ff 90       	pop	r15
     f46:	ef 90       	pop	r14
     f48:	df 90       	pop	r13
     f4a:	cf 90       	pop	r12
     f4c:	bf 90       	pop	r11
     f4e:	af 90       	pop	r10
     f50:	9f 90       	pop	r9
     f52:	7f 90       	pop	r7
     f54:	6f 90       	pop	r6
     f56:	5f 90       	pop	r5
     f58:	4f 90       	pop	r4
     f5a:	3f 90       	pop	r3
     f5c:	2f 90       	pop	r2
     f5e:	08 95       	ret

00000f60 <vfscanf>:
     f60:	a0 e0       	ldi	r26, 0x00	; 0
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e6 eb       	ldi	r30, 0xB6	; 182
     f66:	f7 e0       	ldi	r31, 0x07	; 7
     f68:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__prologue_saves__+0x8>
     f6c:	5c 01       	movw	r10, r24
     f6e:	eb 01       	movw	r28, r22
     f70:	4a 01       	movw	r8, r20
     f72:	fc 01       	movw	r30, r24
     f74:	17 82       	std	Z+7, r1	; 0x07
     f76:	16 82       	std	Z+6, r1	; 0x06
     f78:	61 2c       	mov	r6, r1
     f7a:	f5 01       	movw	r30, r10
     f7c:	03 81       	ldd	r16, Z+3	; 0x03
     f7e:	fe 01       	movw	r30, r28
     f80:	03 fd       	sbrc	r16, 3
     f82:	85 91       	lpm	r24, Z+
     f84:	03 ff       	sbrs	r16, 3
     f86:	81 91       	ld	r24, Z+
     f88:	18 2f       	mov	r17, r24
     f8a:	ef 01       	movw	r28, r30
     f8c:	88 23       	and	r24, r24
     f8e:	09 f4       	brne	.+2      	; 0xf92 <vfscanf+0x32>
     f90:	0f c1       	rjmp	.+542    	; 0x11b0 <vfscanf+0x250>
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <isspace>
     f98:	89 2b       	or	r24, r25
     f9a:	21 f0       	breq	.+8      	; 0xfa4 <vfscanf+0x44>
     f9c:	c5 01       	movw	r24, r10
     f9e:	0e 94 07 05 	call	0xa0e	; 0xa0e <skip_spaces>
     fa2:	eb cf       	rjmp	.-42     	; 0xf7a <vfscanf+0x1a>
     fa4:	15 32       	cpi	r17, 0x25	; 37
     fa6:	41 f4       	brne	.+16     	; 0xfb8 <vfscanf+0x58>
     fa8:	fe 01       	movw	r30, r28
     faa:	03 fd       	sbrc	r16, 3
     fac:	15 91       	lpm	r17, Z+
     fae:	03 ff       	sbrs	r16, 3
     fb0:	11 91       	ld	r17, Z+
     fb2:	ef 01       	movw	r28, r30
     fb4:	15 32       	cpi	r17, 0x25	; 37
     fb6:	81 f4       	brne	.+32     	; 0xfd8 <vfscanf+0x78>
     fb8:	c5 01       	movw	r24, r10
     fba:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
     fbe:	97 fd       	sbrc	r25, 7
     fc0:	f5 c0       	rjmp	.+490    	; 0x11ac <vfscanf+0x24c>
     fc2:	41 2f       	mov	r20, r17
     fc4:	50 e0       	ldi	r21, 0x00	; 0
     fc6:	9c 01       	movw	r18, r24
     fc8:	33 27       	eor	r19, r19
     fca:	24 17       	cp	r18, r20
     fcc:	35 07       	cpc	r19, r21
     fce:	a9 f2       	breq	.-86     	; 0xf7a <vfscanf+0x1a>
     fd0:	b5 01       	movw	r22, r10
     fd2:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
     fd6:	ec c0       	rjmp	.+472    	; 0x11b0 <vfscanf+0x250>
     fd8:	1a 32       	cpi	r17, 0x2A	; 42
     fda:	41 f4       	brne	.+16     	; 0xfec <vfscanf+0x8c>
     fdc:	03 fd       	sbrc	r16, 3
     fde:	15 91       	lpm	r17, Z+
     fe0:	03 ff       	sbrs	r16, 3
     fe2:	11 91       	ld	r17, Z+
     fe4:	ef 01       	movw	r28, r30
     fe6:	77 24       	eor	r7, r7
     fe8:	73 94       	inc	r7
     fea:	01 c0       	rjmp	.+2      	; 0xfee <vfscanf+0x8e>
     fec:	71 2c       	mov	r7, r1
     fee:	e1 2c       	mov	r14, r1
     ff0:	f1 2c       	mov	r15, r1
     ff2:	20 ed       	ldi	r18, 0xD0	; 208
     ff4:	21 0f       	add	r18, r17
     ff6:	2a 30       	cpi	r18, 0x0A	; 10
     ff8:	88 f4       	brcc	.+34     	; 0x101c <vfscanf+0xbc>
     ffa:	f7 2d       	mov	r31, r7
     ffc:	f2 60       	ori	r31, 0x02	; 2
     ffe:	7f 2e       	mov	r7, r31
    1000:	b7 01       	movw	r22, r14
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	40 e2       	ldi	r20, 0x20	; 32
    1008:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <mulacc>
    100c:	7b 01       	movw	r14, r22
    100e:	fe 01       	movw	r30, r28
    1010:	03 fd       	sbrc	r16, 3
    1012:	15 91       	lpm	r17, Z+
    1014:	03 ff       	sbrs	r16, 3
    1016:	11 91       	ld	r17, Z+
    1018:	ef 01       	movw	r28, r30
    101a:	eb cf       	rjmp	.-42     	; 0xff2 <vfscanf+0x92>
    101c:	71 fe       	sbrs	r7, 1
    101e:	04 c0       	rjmp	.+8      	; 0x1028 <vfscanf+0xc8>
    1020:	e1 14       	cp	r14, r1
    1022:	f1 04       	cpc	r15, r1
    1024:	21 f4       	brne	.+8      	; 0x102e <vfscanf+0xce>
    1026:	c4 c0       	rjmp	.+392    	; 0x11b0 <vfscanf+0x250>
    1028:	ee 24       	eor	r14, r14
    102a:	ea 94       	dec	r14
    102c:	fe 2c       	mov	r15, r14
    102e:	18 36       	cpi	r17, 0x68	; 104
    1030:	19 f0       	breq	.+6      	; 0x1038 <vfscanf+0xd8>
    1032:	1c 36       	cpi	r17, 0x6C	; 108
    1034:	61 f0       	breq	.+24     	; 0x104e <vfscanf+0xee>
    1036:	14 c0       	rjmp	.+40     	; 0x1060 <vfscanf+0x100>
    1038:	fe 01       	movw	r30, r28
    103a:	03 fd       	sbrc	r16, 3
    103c:	15 91       	lpm	r17, Z+
    103e:	03 ff       	sbrs	r16, 3
    1040:	11 91       	ld	r17, Z+
    1042:	ef 01       	movw	r28, r30
    1044:	18 36       	cpi	r17, 0x68	; 104
    1046:	61 f4       	brne	.+24     	; 0x1060 <vfscanf+0x100>
    1048:	87 2d       	mov	r24, r7
    104a:	88 60       	ori	r24, 0x08	; 8
    104c:	78 2e       	mov	r7, r24
    104e:	97 2d       	mov	r25, r7
    1050:	94 60       	ori	r25, 0x04	; 4
    1052:	79 2e       	mov	r7, r25
    1054:	fe 01       	movw	r30, r28
    1056:	03 fd       	sbrc	r16, 3
    1058:	15 91       	lpm	r17, Z+
    105a:	03 ff       	sbrs	r16, 3
    105c:	11 91       	ld	r17, Z+
    105e:	ef 01       	movw	r28, r30
    1060:	11 23       	and	r17, r17
    1062:	09 f4       	brne	.+2      	; 0x1066 <vfscanf+0x106>
    1064:	a5 c0       	rjmp	.+330    	; 0x11b0 <vfscanf+0x250>
    1066:	61 2f       	mov	r22, r17
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	8a e6       	ldi	r24, 0x6A	; 106
    106c:	91 e0       	ldi	r25, 0x01	; 1
    106e:	0e 94 66 0f 	call	0x1ecc	; 0x1ecc <strchr_P>
    1072:	89 2b       	or	r24, r25
    1074:	09 f4       	brne	.+2      	; 0x1078 <vfscanf+0x118>
    1076:	9c c0       	rjmp	.+312    	; 0x11b0 <vfscanf+0x250>
    1078:	70 fc       	sbrc	r7, 0
    107a:	07 c0       	rjmp	.+14     	; 0x108a <vfscanf+0x12a>
    107c:	f4 01       	movw	r30, r8
    107e:	c0 80       	ld	r12, Z
    1080:	d1 80       	ldd	r13, Z+1	; 0x01
    1082:	c4 01       	movw	r24, r8
    1084:	02 96       	adiw	r24, 0x02	; 2
    1086:	4c 01       	movw	r8, r24
    1088:	02 c0       	rjmp	.+4      	; 0x108e <vfscanf+0x12e>
    108a:	c1 2c       	mov	r12, r1
    108c:	d1 2c       	mov	r13, r1
    108e:	1e 36       	cpi	r17, 0x6E	; 110
    1090:	51 f4       	brne	.+20     	; 0x10a6 <vfscanf+0x146>
    1092:	f5 01       	movw	r30, r10
    1094:	46 81       	ldd	r20, Z+6	; 0x06
    1096:	57 81       	ldd	r21, Z+7	; 0x07
    1098:	60 e0       	ldi	r22, 0x00	; 0
    109a:	70 e0       	ldi	r23, 0x00	; 0
    109c:	27 2d       	mov	r18, r7
    109e:	c6 01       	movw	r24, r12
    10a0:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <putval>
    10a4:	6a cf       	rjmp	.-300    	; 0xf7a <vfscanf+0x1a>
    10a6:	13 36       	cpi	r17, 0x63	; 99
    10a8:	b9 f4       	brne	.+46     	; 0x10d8 <vfscanf+0x178>
    10aa:	71 fc       	sbrc	r7, 1
    10ac:	03 c0       	rjmp	.+6      	; 0x10b4 <vfscanf+0x154>
    10ae:	ee 24       	eor	r14, r14
    10b0:	e3 94       	inc	r14
    10b2:	f1 2c       	mov	r15, r1
    10b4:	c5 01       	movw	r24, r10
    10b6:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
    10ba:	97 fd       	sbrc	r25, 7
    10bc:	77 c0       	rjmp	.+238    	; 0x11ac <vfscanf+0x24c>
    10be:	c1 14       	cp	r12, r1
    10c0:	d1 04       	cpc	r13, r1
    10c2:	29 f0       	breq	.+10     	; 0x10ce <vfscanf+0x16e>
    10c4:	f6 01       	movw	r30, r12
    10c6:	80 83       	st	Z, r24
    10c8:	c6 01       	movw	r24, r12
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	6c 01       	movw	r12, r24
    10ce:	91 e0       	ldi	r25, 0x01	; 1
    10d0:	e9 1a       	sub	r14, r25
    10d2:	f1 08       	sbc	r15, r1
    10d4:	79 f7       	brne	.-34     	; 0x10b4 <vfscanf+0x154>
    10d6:	66 c0       	rjmp	.+204    	; 0x11a4 <vfscanf+0x244>
    10d8:	1b 35       	cpi	r17, 0x5B	; 91
    10da:	59 f4       	brne	.+22     	; 0x10f2 <vfscanf+0x192>
    10dc:	9e 01       	movw	r18, r28
    10de:	a6 01       	movw	r20, r12
    10e0:	b7 01       	movw	r22, r14
    10e2:	c5 01       	movw	r24, r10
    10e4:	0e 94 aa 05 	call	0xb54	; 0xb54 <conv_brk>
    10e8:	ec 01       	movw	r28, r24
    10ea:	89 2b       	or	r24, r25
    10ec:	09 f0       	breq	.+2      	; 0x10f0 <vfscanf+0x190>
    10ee:	5a c0       	rjmp	.+180    	; 0x11a4 <vfscanf+0x244>
    10f0:	54 c0       	rjmp	.+168    	; 0x119a <vfscanf+0x23a>
    10f2:	c5 01       	movw	r24, r10
    10f4:	0e 94 07 05 	call	0xa0e	; 0xa0e <skip_spaces>
    10f8:	97 fd       	sbrc	r25, 7
    10fa:	58 c0       	rjmp	.+176    	; 0x11ac <vfscanf+0x24c>
    10fc:	1f 36       	cpi	r17, 0x6F	; 111
    10fe:	e1 f1       	breq	.+120    	; 0x1178 <vfscanf+0x218>
    1100:	40 f4       	brcc	.+16     	; 0x1112 <vfscanf+0x1b2>
    1102:	14 36       	cpi	r17, 0x64	; 100
    1104:	a9 f1       	breq	.+106    	; 0x1170 <vfscanf+0x210>
    1106:	19 36       	cpi	r17, 0x69	; 105
    1108:	d1 f1       	breq	.+116    	; 0x117e <vfscanf+0x21e>
    110a:	18 35       	cpi	r17, 0x58	; 88
    110c:	09 f0       	breq	.+2      	; 0x1110 <vfscanf+0x1b0>
    110e:	3e c0       	rjmp	.+124    	; 0x118c <vfscanf+0x22c>
    1110:	2b c0       	rjmp	.+86     	; 0x1168 <vfscanf+0x208>
    1112:	13 37       	cpi	r17, 0x73	; 115
    1114:	a9 f0       	breq	.+42     	; 0x1140 <vfscanf+0x1e0>
    1116:	18 f4       	brcc	.+6      	; 0x111e <vfscanf+0x1be>
    1118:	10 37       	cpi	r17, 0x70	; 112
    111a:	31 f1       	breq	.+76     	; 0x1168 <vfscanf+0x208>
    111c:	37 c0       	rjmp	.+110    	; 0x118c <vfscanf+0x22c>
    111e:	15 37       	cpi	r17, 0x75	; 117
    1120:	39 f1       	breq	.+78     	; 0x1170 <vfscanf+0x210>
    1122:	18 37       	cpi	r17, 0x78	; 120
    1124:	09 f1       	breq	.+66     	; 0x1168 <vfscanf+0x208>
    1126:	32 c0       	rjmp	.+100    	; 0x118c <vfscanf+0x22c>
    1128:	c1 14       	cp	r12, r1
    112a:	d1 04       	cpc	r13, r1
    112c:	29 f0       	breq	.+10     	; 0x1138 <vfscanf+0x1d8>
    112e:	f6 01       	movw	r30, r12
    1130:	00 83       	st	Z, r16
    1132:	c6 01       	movw	r24, r12
    1134:	01 96       	adiw	r24, 0x01	; 1
    1136:	6c 01       	movw	r12, r24
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	e9 1a       	sub	r14, r25
    113c:	f1 08       	sbc	r15, r1
    113e:	71 f0       	breq	.+28     	; 0x115c <vfscanf+0x1fc>
    1140:	c5 01       	movw	r24, r10
    1142:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <fgetc>
    1146:	8c 01       	movw	r16, r24
    1148:	97 fd       	sbrc	r25, 7
    114a:	08 c0       	rjmp	.+16     	; 0x115c <vfscanf+0x1fc>
    114c:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <isspace>
    1150:	89 2b       	or	r24, r25
    1152:	51 f3       	breq	.-44     	; 0x1128 <vfscanf+0x1c8>
    1154:	b5 01       	movw	r22, r10
    1156:	c8 01       	movw	r24, r16
    1158:	0e 94 66 10 	call	0x20cc	; 0x20cc <ungetc>
    115c:	c1 14       	cp	r12, r1
    115e:	d1 04       	cpc	r13, r1
    1160:	09 f1       	breq	.+66     	; 0x11a4 <vfscanf+0x244>
    1162:	f6 01       	movw	r30, r12
    1164:	10 82       	st	Z, r1
    1166:	1e c0       	rjmp	.+60     	; 0x11a4 <vfscanf+0x244>
    1168:	f7 2d       	mov	r31, r7
    116a:	f0 64       	ori	r31, 0x40	; 64
    116c:	7f 2e       	mov	r7, r31
    116e:	07 c0       	rjmp	.+14     	; 0x117e <vfscanf+0x21e>
    1170:	87 2d       	mov	r24, r7
    1172:	80 62       	ori	r24, 0x20	; 32
    1174:	78 2e       	mov	r7, r24
    1176:	03 c0       	rjmp	.+6      	; 0x117e <vfscanf+0x21e>
    1178:	97 2d       	mov	r25, r7
    117a:	90 61       	ori	r25, 0x10	; 16
    117c:	79 2e       	mov	r7, r25
    117e:	27 2d       	mov	r18, r7
    1180:	a6 01       	movw	r20, r12
    1182:	b7 01       	movw	r22, r14
    1184:	c5 01       	movw	r24, r10
    1186:	0e 94 20 05 	call	0xa40	; 0xa40 <conv_int>
    118a:	05 c0       	rjmp	.+10     	; 0x1196 <vfscanf+0x236>
    118c:	a6 01       	movw	r20, r12
    118e:	b7 01       	movw	r22, r14
    1190:	c5 01       	movw	r24, r10
    1192:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <conv_flt>
    1196:	81 11       	cpse	r24, r1
    1198:	05 c0       	rjmp	.+10     	; 0x11a4 <vfscanf+0x244>
    119a:	f5 01       	movw	r30, r10
    119c:	83 81       	ldd	r24, Z+3	; 0x03
    119e:	80 73       	andi	r24, 0x30	; 48
    11a0:	29 f4       	brne	.+10     	; 0x11ac <vfscanf+0x24c>
    11a2:	06 c0       	rjmp	.+12     	; 0x11b0 <vfscanf+0x250>
    11a4:	70 fc       	sbrc	r7, 0
    11a6:	e9 ce       	rjmp	.-558    	; 0xf7a <vfscanf+0x1a>
    11a8:	63 94       	inc	r6
    11aa:	e7 ce       	rjmp	.-562    	; 0xf7a <vfscanf+0x1a>
    11ac:	66 20       	and	r6, r6
    11ae:	19 f0       	breq	.+6      	; 0x11b6 <vfscanf+0x256>
    11b0:	86 2d       	mov	r24, r6
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	02 c0       	rjmp	.+4      	; 0x11ba <vfscanf+0x25a>
    11b6:	8f ef       	ldi	r24, 0xFF	; 255
    11b8:	9f ef       	ldi	r25, 0xFF	; 255
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	ee e0       	ldi	r30, 0x0E	; 14
    11c0:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__epilogue_restores__+0x8>

000011c4 <main>:
FILE uart_file;

const uint8_t eeprom_addr = 0xa0;

int main()
{
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	cd b7       	in	r28, 0x3d	; 61
    11ca:	de b7       	in	r29, 0x3e	; 62
    11cc:	c9 52       	subi	r28, 0x29	; 41
    11ce:	d4 40       	sbci	r29, 0x04	; 4
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	de bf       	out	0x3e, r29	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	cd bf       	out	0x3d, r28	; 61

// inicjalizacja UART
void uart_init()
{
	// ustaw baudrate
	UBRR0 = UBRR_VALUE;
    11da:	87 e6       	ldi	r24, 0x67	; 103
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    11e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	// wyczyść rejestr UCSR0A
	UCSR0A = 0;
    11e6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	// włącz odbiornik i nadajnik
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);
    11ea:	88 e1       	ldi	r24, 0x18	; 24
    11ec:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	// ustaw format 8n1
	UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
    11f0:	86 e0       	ldi	r24, 0x06	; 6
    11f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
int main()
{
	// zainicjalizuj UART
	uart_init();
	// skonfiguruj strumienie wejścia/wyjścia
	fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
    11f6:	86 e6       	ldi	r24, 0x66	; 102
    11f8:	93 e0       	ldi	r25, 0x03	; 3
    11fa:	2b ef       	ldi	r18, 0xFB	; 251
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	30 93 6f 03 	sts	0x036F, r19	; 0x80036f <__data_end+0x9>
    1202:	20 93 6e 03 	sts	0x036E, r18	; 0x80036e <__data_end+0x8>
    1206:	24 e0       	ldi	r18, 0x04	; 4
    1208:	31 e0       	ldi	r19, 0x01	; 1
    120a:	30 93 71 03 	sts	0x0371, r19	; 0x800371 <__data_end+0xb>
    120e:	20 93 70 03 	sts	0x0370, r18	; 0x800370 <__data_end+0xa>
    1212:	23 e0       	ldi	r18, 0x03	; 3
    1214:	20 93 69 03 	sts	0x0369, r18	; 0x800369 <__data_end+0x3>
    1218:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <__data_end+0xd>
    121c:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <__data_end+0xc>
	stdin = stdout = stderr = &uart_file;
    1220:	90 93 79 03 	sts	0x0379, r25	; 0x800379 <__iob+0x5>
    1224:	80 93 78 03 	sts	0x0378, r24	; 0x800378 <__iob+0x4>
    1228:	90 93 77 03 	sts	0x0377, r25	; 0x800377 <__iob+0x3>
    122c:	80 93 76 03 	sts	0x0376, r24	; 0x800376 <__iob+0x2>
    1230:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <__iob+0x1>
    1234:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <__iob>
		if ((TWSR & 0xf8) != (code)) { \
			printf(msg " failed, status: %.2x\r\n", TWSR & 0xf8); \
			i2cReset(); \
			continue; \
		}
	i2cInit();
    1238:	0e 94 1b 01 	call	0x236	; 0x236 <i2cInit>
	char bufor[20] = {"\0\0\0\0\0\0\0\0\0\0\0"};
    123c:	9e 01       	movw	r18, r28
    123e:	23 50       	subi	r18, 0x03	; 3
    1240:	3c 4f       	sbci	r19, 0xFC	; 252
    1242:	c6 5e       	subi	r28, 0xE6	; 230
    1244:	db 4f       	sbci	r29, 0xFB	; 251
    1246:	39 83       	std	Y+1, r19	; 0x01
    1248:	28 83       	st	Y, r18
    124a:	ca 51       	subi	r28, 0x1A	; 26
    124c:	d4 40       	sbci	r29, 0x04	; 4
    124e:	8c e0       	ldi	r24, 0x0C	; 12
    1250:	e0 e0       	ldi	r30, 0x00	; 0
    1252:	f1 e0       	ldi	r31, 0x01	; 1
    1254:	d9 01       	movw	r26, r18
    1256:	01 90       	ld	r0, Z+
    1258:	0d 92       	st	X+, r0
    125a:	8a 95       	dec	r24
    125c:	e1 f7       	brne	.-8      	; 0x1256 <main+0x92>
    125e:	f9 01       	movw	r30, r18
    1260:	3c 96       	adiw	r30, 0x0c	; 12
    1262:	88 e0       	ldi	r24, 0x08	; 8
    1264:	df 01       	movw	r26, r30
    1266:	1d 92       	st	X+, r1
    1268:	8a 95       	dec	r24
    126a:	e9 f7       	brne	.-6      	; 0x1266 <main+0xa2>
	uint16_t adres = 0;
    126c:	6e 01       	movw	r12, r28
    126e:	b9 ee       	ldi	r27, 0xE9	; 233
    1270:	cb 1a       	sub	r12, r27
    1272:	bb ef       	ldi	r27, 0xFB	; 251
    1274:	db 0a       	sbc	r13, r27
    1276:	f6 01       	movw	r30, r12
    1278:	11 82       	std	Z+1, r1	; 0x01
    127a:	10 82       	st	Z, r1
	int dlugosc = 0;
    127c:	3e 01       	movw	r6, r28
    127e:	fb ee       	ldi	r31, 0xEB	; 235
    1280:	6f 1a       	sub	r6, r31
    1282:	fb ef       	ldi	r31, 0xFB	; 251
    1284:	7f 0a       	sbc	r7, r31
    1286:	d3 01       	movw	r26, r6
    1288:	1d 92       	st	X+, r1
    128a:	1c 92       	st	X, r1
	uint16_t rekordy = 0;
    128c:	fe 01       	movw	r30, r28
    128e:	ed 5e       	subi	r30, 0xED	; 237
    1290:	fb 4f       	sbci	r31, 0xFB	; 251
    1292:	c4 5e       	subi	r28, 0xE4	; 228
    1294:	db 4f       	sbci	r29, 0xFB	; 251
    1296:	f9 83       	std	Y+1, r31	; 0x01
    1298:	e8 83       	st	Y, r30
    129a:	cc 51       	subi	r28, 0x1C	; 28
    129c:	d4 40       	sbci	r29, 0x04	; 4
    129e:	cd 5e       	subi	r28, 0xED	; 237
    12a0:	db 4f       	sbci	r29, 0xFB	; 251
    12a2:	19 82       	std	Y+1, r1	; 0x01
    12a4:	18 82       	st	Y, r1
    12a6:	c3 51       	subi	r28, 0x13	; 19
    12a8:	d4 40       	sbci	r29, 0x04	; 4
	uint16_t ostatni_rekord = 0;
	uint16_t checksum = 0;
    12aa:	4e 01       	movw	r8, r28
    12ac:	ff ee       	ldi	r31, 0xEF	; 239
    12ae:	8f 1a       	sub	r8, r31
    12b0:	fb ef       	ldi	r31, 0xFB	; 251
    12b2:	9f 0a       	sbc	r9, r31
    12b4:	d4 01       	movw	r26, r8
    12b6:	1d 92       	st	X+, r1
    12b8:	1c 92       	st	X, r1
    12ba:	fe 01       	movw	r30, r28
    12bc:	e7 5e       	subi	r30, 0xE7	; 231
    12be:	fb 4f       	sbci	r31, 0xFB	; 251
    12c0:	c2 5e       	subi	r28, 0xE2	; 226
    12c2:	db 4f       	sbci	r29, 0xFB	; 251
    12c4:	f9 83       	std	Y+1, r31	; 0x01
    12c6:	e8 83       	st	Y, r30
    12c8:	ce 51       	subi	r28, 0x1E	; 30
    12ca:	d4 40       	sbci	r29, 0x04	; 4
					printf("Błędny znak!\r\n");
					break;
				}
				scanf("%2x%4x%2x", (unsigned int*)(&dlugosc), (unsigned int*)(&adres), (unsigned int*)(&rekordy));
				for (int i = 0; i < dlugosc; ++i){
					scanf("%2x", (unsigned int*)(&wejscie[i]));
    12cc:	b0 ea       	ldi	r27, 0xA0	; 160
    12ce:	4b 2e       	mov	r4, r27
    12d0:	b2 e0       	ldi	r27, 0x02	; 2
    12d2:	5b 2e       	mov	r5, r27
					printf("Koniec pliku dodano\r\n");
					break;
				}
				printf(":%.2x %.4x %.2x ", dlugosc, adres, rekordy);
				for (int i = 0; i < dlugosc; ++i){
					printf("%.2x ", wejscie[i]);
    12d4:	14 ec       	ldi	r17, 0xC4	; 196
    12d6:	21 2e       	mov	r2, r17
    12d8:	12 e0       	ldi	r17, 0x02	; 2
    12da:	31 2e       	mov	r3, r17
	uint16_t dluosc = 0;
	uint16_t wyjscie[255];
	uint16_t wejscie[255];
	char flaga;
	while(1) {
		scanf("%s", bufor);
    12dc:	c5 5e       	subi	r28, 0xE5	; 229
    12de:	db 4f       	sbci	r29, 0xFB	; 251
    12e0:	f8 81       	ld	r31, Y
    12e2:	cb 51       	subi	r28, 0x1B	; 27
    12e4:	d4 40       	sbci	r29, 0x04	; 4
    12e6:	ff 93       	push	r31
    12e8:	c6 5e       	subi	r28, 0xE6	; 230
    12ea:	db 4f       	sbci	r29, 0xFB	; 251
    12ec:	28 81       	ld	r18, Y
    12ee:	ca 51       	subi	r28, 0x1A	; 26
    12f0:	d4 40       	sbci	r29, 0x04	; 4
    12f2:	2f 93       	push	r18
    12f4:	85 e1       	ldi	r24, 0x15	; 21
    12f6:	91 e0       	ldi	r25, 0x01	; 1
    12f8:	9f 93       	push	r25
    12fa:	8f 93       	push	r24
    12fc:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
		printf("Wypisano %s\r\n", bufor);
    1300:	c5 5e       	subi	r28, 0xE5	; 229
    1302:	db 4f       	sbci	r29, 0xFB	; 251
    1304:	b8 81       	ld	r27, Y
    1306:	cb 51       	subi	r28, 0x1B	; 27
    1308:	d4 40       	sbci	r29, 0x04	; 4
    130a:	bf 93       	push	r27
    130c:	c6 5e       	subi	r28, 0xE6	; 230
    130e:	db 4f       	sbci	r29, 0xFB	; 251
    1310:	e8 81       	ld	r30, Y
    1312:	ca 51       	subi	r28, 0x1A	; 26
    1314:	d4 40       	sbci	r29, 0x04	; 4
    1316:	ef 93       	push	r30
    1318:	88 e1       	ldi	r24, 0x18	; 24
    131a:	91 e0       	ldi	r25, 0x01	; 1
    131c:	9f 93       	push	r25
    131e:	8f 93       	push	r24
    1320:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
		if(strcmp(bufor, "read") == 0){
    1324:	66 e2       	ldi	r22, 0x26	; 38
    1326:	71 e0       	ldi	r23, 0x01	; 1
    1328:	ce 01       	movw	r24, r28
    132a:	83 50       	subi	r24, 0x03	; 3
    132c:	9c 4f       	sbci	r25, 0xFC	; 252
    132e:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <strcmp>
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	f8 94       	cli
    1336:	de bf       	out	0x3e, r29	; 62
    1338:	0f be       	out	0x3f, r0	; 63
    133a:	cd bf       	out	0x3d, r28	; 61
    133c:	89 2b       	or	r24, r25
    133e:	09 f4       	brne	.+2      	; 0x1342 <main+0x17e>
    1340:	a9 c1       	rjmp	.+850    	; 0x1694 <main+0x4d0>
			}     
			i2cStop();
			i2cCheck(0xf8, "I2C stop")
			printf(":00 0000 01 ff\r\n");
		}
		else if (strcmp(bufor, "write") == 0){
    1342:	6c e6       	ldi	r22, 0x6C	; 108
    1344:	72 e0       	ldi	r23, 0x02	; 2
    1346:	ce 01       	movw	r24, r28
    1348:	83 50       	subi	r24, 0x03	; 3
    134a:	9c 4f       	sbci	r25, 0xFC	; 252
    134c:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <strcmp>
    1350:	89 2b       	or	r24, r25
    1352:	09 f0       	breq	.+2      	; 0x1356 <main+0x192>
    1354:	9a c1       	rjmp	.+820    	; 0x168a <main+0x4c6>
			scanf("%c", &flaga);
    1356:	c1 5e       	subi	r28, 0xE1	; 225
    1358:	db 4f       	sbci	r29, 0xFB	; 251
    135a:	38 81       	ld	r19, Y
    135c:	cf 51       	subi	r28, 0x1F	; 31
    135e:	d4 40       	sbci	r29, 0x04	; 4
    1360:	3f 93       	push	r19
    1362:	c2 5e       	subi	r28, 0xE2	; 226
    1364:	db 4f       	sbci	r29, 0xFB	; 251
    1366:	88 81       	ld	r24, Y
    1368:	ce 51       	subi	r28, 0x1E	; 30
    136a:	d4 40       	sbci	r29, 0x04	; 4
    136c:	8f 93       	push	r24
    136e:	82 e7       	ldi	r24, 0x72	; 114
    1370:	92 e0       	ldi	r25, 0x02	; 2
    1372:	9f 93       	push	r25
    1374:	8f 93       	push	r24
    1376:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
			printf("Rozpoczęto pisanie\r\n");
    137a:	85 e7       	ldi	r24, 0x75	; 117
    137c:	92 e0       	ldi	r25, 0x02	; 2
    137e:	0e 94 20 10 	call	0x2040	; 0x2040 <puts>
    1382:	0f 90       	pop	r0
    1384:	0f 90       	pop	r0
    1386:	0f 90       	pop	r0
    1388:	0f 90       	pop	r0
			while(1){
				scanf("%c", &flaga);
    138a:	62 e7       	ldi	r22, 0x72	; 114
    138c:	a6 2e       	mov	r10, r22
    138e:	62 e0       	ldi	r22, 0x02	; 2
    1390:	b6 2e       	mov	r11, r22
    1392:	c1 5e       	subi	r28, 0xE1	; 225
    1394:	db 4f       	sbci	r29, 0xFB	; 251
    1396:	98 81       	ld	r25, Y
    1398:	cf 51       	subi	r28, 0x1F	; 31
    139a:	d4 40       	sbci	r29, 0x04	; 4
    139c:	9f 93       	push	r25
    139e:	c2 5e       	subi	r28, 0xE2	; 226
    13a0:	db 4f       	sbci	r29, 0xFB	; 251
    13a2:	a8 81       	ld	r26, Y
    13a4:	ce 51       	subi	r28, 0x1E	; 30
    13a6:	d4 40       	sbci	r29, 0x04	; 4
    13a8:	af 93       	push	r26
    13aa:	bf 92       	push	r11
    13ac:	af 92       	push	r10
    13ae:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
				if (flaga != ':'){
    13b2:	0f 90       	pop	r0
    13b4:	0f 90       	pop	r0
    13b6:	0f 90       	pop	r0
    13b8:	0f 90       	pop	r0
    13ba:	c7 5e       	subi	r28, 0xE7	; 231
    13bc:	db 4f       	sbci	r29, 0xFB	; 251
    13be:	88 81       	ld	r24, Y
    13c0:	c9 51       	subi	r28, 0x19	; 25
    13c2:	d4 40       	sbci	r29, 0x04	; 4
    13c4:	8a 33       	cpi	r24, 0x3A	; 58
    13c6:	09 f0       	breq	.+2      	; 0x13ca <main+0x206>
    13c8:	c9 c1       	rjmp	.+914    	; 0x175c <main+0x598>
					printf("Błędny znak!\r\n");
					break;
				}
				scanf("%2x%4x%2x", (unsigned int*)(&dlugosc), (unsigned int*)(&adres), (unsigned int*)(&rekordy));
    13ca:	c3 5e       	subi	r28, 0xE3	; 227
    13cc:	db 4f       	sbci	r29, 0xFB	; 251
    13ce:	b8 81       	ld	r27, Y
    13d0:	cd 51       	subi	r28, 0x1D	; 29
    13d2:	d4 40       	sbci	r29, 0x04	; 4
    13d4:	bf 93       	push	r27
    13d6:	c4 5e       	subi	r28, 0xE4	; 228
    13d8:	db 4f       	sbci	r29, 0xFB	; 251
    13da:	e8 81       	ld	r30, Y
    13dc:	cc 51       	subi	r28, 0x1C	; 28
    13de:	d4 40       	sbci	r29, 0x04	; 4
    13e0:	ef 93       	push	r30
    13e2:	df 92       	push	r13
    13e4:	cf 92       	push	r12
    13e6:	7f 92       	push	r7
    13e8:	6f 92       	push	r6
    13ea:	2a e9       	ldi	r18, 0x9A	; 154
    13ec:	32 e0       	ldi	r19, 0x02	; 2
    13ee:	3f 93       	push	r19
    13f0:	2f 93       	push	r18
    13f2:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
				for (int i = 0; i < dlugosc; ++i){
    13f6:	0f b6       	in	r0, 0x3f	; 63
    13f8:	f8 94       	cli
    13fa:	de bf       	out	0x3e, r29	; 62
    13fc:	0f be       	out	0x3f, r0	; 63
    13fe:	cd bf       	out	0x3d, r28	; 61
    1400:	f3 01       	movw	r30, r6
    1402:	80 81       	ld	r24, Z
    1404:	91 81       	ldd	r25, Z+1	; 0x01
    1406:	18 16       	cp	r1, r24
    1408:	19 06       	cpc	r1, r25
    140a:	d4 f4       	brge	.+52     	; 0x1440 <main+0x27c>
    140c:	8e 01       	movw	r16, r28
    140e:	0f 5f       	subi	r16, 0xFF	; 255
    1410:	1f 4f       	sbci	r17, 0xFF	; 255
    1412:	e1 2c       	mov	r14, r1
    1414:	f1 2c       	mov	r15, r1
					scanf("%2x", (unsigned int*)(&wejscie[i]));
    1416:	1f 93       	push	r17
    1418:	0f 93       	push	r16
    141a:	5f 92       	push	r5
    141c:	4f 92       	push	r4
    141e:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
				if (flaga != ':'){
					printf("Błędny znak!\r\n");
					break;
				}
				scanf("%2x%4x%2x", (unsigned int*)(&dlugosc), (unsigned int*)(&adres), (unsigned int*)(&rekordy));
				for (int i = 0; i < dlugosc; ++i){
    1422:	bf ef       	ldi	r27, 0xFF	; 255
    1424:	eb 1a       	sub	r14, r27
    1426:	fb 0a       	sbc	r15, r27
    1428:	0e 5f       	subi	r16, 0xFE	; 254
    142a:	1f 4f       	sbci	r17, 0xFF	; 255
    142c:	0f 90       	pop	r0
    142e:	0f 90       	pop	r0
    1430:	0f 90       	pop	r0
    1432:	0f 90       	pop	r0
    1434:	f3 01       	movw	r30, r6
    1436:	80 81       	ld	r24, Z
    1438:	91 81       	ldd	r25, Z+1	; 0x01
    143a:	e8 16       	cp	r14, r24
    143c:	f9 06       	cpc	r15, r25
    143e:	5c f3       	brlt	.-42     	; 0x1416 <main+0x252>
					scanf("%2x", (unsigned int*)(&wejscie[i]));
				}
				scanf("%2x", (unsigned int*)(&checksum));
    1440:	9f 92       	push	r9
    1442:	8f 92       	push	r8
    1444:	5f 92       	push	r5
    1446:	4f 92       	push	r4
    1448:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
				if (dlugosc == 0 && adres == 0 && rekordy == 1 && checksum == 0xff){
    144c:	d3 01       	movw	r26, r6
    144e:	8d 91       	ld	r24, X+
    1450:	9c 91       	ld	r25, X
    1452:	0f 90       	pop	r0
    1454:	0f 90       	pop	r0
    1456:	0f 90       	pop	r0
    1458:	0f 90       	pop	r0
    145a:	00 97       	sbiw	r24, 0x00	; 0
    145c:	09 f0       	breq	.+2      	; 0x1460 <main+0x29c>
    145e:	8e c0       	rjmp	.+284    	; 0x157c <main+0x3b8>
    1460:	d6 01       	movw	r26, r12
    1462:	2d 91       	ld	r18, X+
    1464:	3c 91       	ld	r19, X
    1466:	cd 5e       	subi	r28, 0xED	; 237
    1468:	db 4f       	sbci	r29, 0xFB	; 251
    146a:	48 81       	ld	r20, Y
    146c:	59 81       	ldd	r21, Y+1	; 0x01
    146e:	c3 51       	subi	r28, 0x13	; 19
    1470:	d4 40       	sbci	r29, 0x04	; 4
    1472:	21 15       	cp	r18, r1
    1474:	31 05       	cpc	r19, r1
    1476:	21 f4       	brne	.+8      	; 0x1480 <main+0x2bc>
    1478:	41 30       	cpi	r20, 0x01	; 1
    147a:	51 05       	cpc	r21, r1
    147c:	09 f4       	brne	.+2      	; 0x1480 <main+0x2bc>
    147e:	a2 c0       	rjmp	.+324    	; 0x15c4 <main+0x400>
					printf("Koniec pliku dodano\r\n");
					break;
				}
				printf(":%.2x %.4x %.2x ", dlugosc, adres, rekordy);
    1480:	5f 93       	push	r21
    1482:	4f 93       	push	r20
    1484:	3f 93       	push	r19
    1486:	2f 93       	push	r18
    1488:	9f 93       	push	r25
    148a:	8f 93       	push	r24
    148c:	e9 eb       	ldi	r30, 0xB9	; 185
    148e:	f2 e0       	ldi	r31, 0x02	; 2
    1490:	ff 93       	push	r31
    1492:	ef 93       	push	r30
    1494:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
				for (int i = 0; i < dlugosc; ++i){
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	d3 01       	movw	r26, r6
    14a4:	8d 91       	ld	r24, X+
    14a6:	9c 91       	ld	r25, X
    14a8:	18 16       	cp	r1, r24
    14aa:	19 06       	cpc	r1, r25
    14ac:	f4 f4       	brge	.+60     	; 0x14ea <main+0x326>
    14ae:	fe 01       	movw	r30, r28
    14b0:	31 96       	adiw	r30, 0x01	; 1
    14b2:	7f 01       	movw	r14, r30
    14b4:	00 e0       	ldi	r16, 0x00	; 0
    14b6:	10 e0       	ldi	r17, 0x00	; 0
					printf("%.2x ", wejscie[i]);
    14b8:	d7 01       	movw	r26, r14
    14ba:	8c 91       	ld	r24, X
    14bc:	11 96       	adiw	r26, 0x01	; 1
    14be:	9c 91       	ld	r25, X
    14c0:	b2 e0       	ldi	r27, 0x02	; 2
    14c2:	eb 0e       	add	r14, r27
    14c4:	f1 1c       	adc	r15, r1
    14c6:	9f 93       	push	r25
    14c8:	8f 93       	push	r24
    14ca:	3f 92       	push	r3
    14cc:	2f 92       	push	r2
    14ce:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
				if (dlugosc == 0 && adres == 0 && rekordy == 1 && checksum == 0xff){
					printf("Koniec pliku dodano\r\n");
					break;
				}
				printf(":%.2x %.4x %.2x ", dlugosc, adres, rekordy);
				for (int i = 0; i < dlugosc; ++i){
    14d2:	0f 5f       	subi	r16, 0xFF	; 255
    14d4:	1f 4f       	sbci	r17, 0xFF	; 255
    14d6:	0f 90       	pop	r0
    14d8:	0f 90       	pop	r0
    14da:	0f 90       	pop	r0
    14dc:	0f 90       	pop	r0
    14de:	f3 01       	movw	r30, r6
    14e0:	80 81       	ld	r24, Z
    14e2:	91 81       	ldd	r25, Z+1	; 0x01
    14e4:	08 17       	cp	r16, r24
    14e6:	19 07       	cpc	r17, r25
    14e8:	3c f3       	brlt	.-50     	; 0x14b8 <main+0x2f4>
					printf("%.2x ", wejscie[i]);
				}
				printf("%.2x\r\n", checksum);
    14ea:	f4 01       	movw	r30, r8
    14ec:	81 81       	ldd	r24, Z+1	; 0x01
    14ee:	8f 93       	push	r24
    14f0:	80 81       	ld	r24, Z
    14f2:	8f 93       	push	r24
    14f4:	2d e2       	ldi	r18, 0x2D	; 45
    14f6:	33 e0       	ldi	r19, 0x03	; 3
    14f8:	3f 93       	push	r19
    14fa:	2f 93       	push	r18
    14fc:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
				checksum_sprawdz = 0x00;
				for (int i = 0; i < dlugosc; ++i){
    1500:	d3 01       	movw	r26, r6
    1502:	4d 91       	ld	r20, X+
    1504:	5c 91       	ld	r21, X
    1506:	0f 90       	pop	r0
    1508:	0f 90       	pop	r0
    150a:	0f 90       	pop	r0
    150c:	0f 90       	pop	r0
    150e:	14 16       	cp	r1, r20
    1510:	15 06       	cpc	r1, r21
    1512:	0c f0       	brlt	.+2      	; 0x1516 <main+0x352>
    1514:	28 c1       	rjmp	.+592    	; 0x1766 <main+0x5a2>
    1516:	fe 01       	movw	r30, r28
    1518:	31 96       	adiw	r30, 0x01	; 1
    151a:	9a 01       	movw	r18, r20
    151c:	22 0f       	add	r18, r18
    151e:	33 1f       	adc	r19, r19
    1520:	2e 0f       	add	r18, r30
    1522:	3f 1f       	adc	r19, r31
    1524:	80 e0       	ldi	r24, 0x00	; 0
					checksum_sprawdz -= wejscie[i];
    1526:	90 81       	ld	r25, Z
    1528:	32 96       	adiw	r30, 0x02	; 2
    152a:	89 1b       	sub	r24, r25
				for (int i = 0; i < dlugosc; ++i){
					printf("%.2x ", wejscie[i]);
				}
				printf("%.2x\r\n", checksum);
				checksum_sprawdz = 0x00;
				for (int i = 0; i < dlugosc; ++i){
    152c:	e2 17       	cp	r30, r18
    152e:	f3 07       	cpc	r31, r19
    1530:	d1 f7       	brne	.-12     	; 0x1526 <main+0x362>
					checksum_sprawdz -= wejscie[i];
				}
				checksum_sprawdz -= dlugosc + adres;
    1532:	d6 01       	movw	r26, r12
    1534:	9c 91       	ld	r25, X
    1536:	49 0f       	add	r20, r25
    1538:	84 1b       	sub	r24, r20
				if(checksum_sprawdz != checksum){
    153a:	f4 01       	movw	r30, r8
    153c:	20 81       	ld	r18, Z
    153e:	31 81       	ldd	r19, Z+1	; 0x01
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	82 17       	cp	r24, r18
    1544:	93 07       	cpc	r25, r19
    1546:	09 f0       	breq	.+2      	; 0x154a <main+0x386>
    1548:	f8 c0       	rjmp	.+496    	; 0x173a <main+0x576>
					printf("Żle wpisana suma kontorlna podano %2x a ma być %2x\r\n", checksum, checksum_sprawdz);
					break;
				}
				i2cStart();
    154a:	0e 94 29 01 	call	0x252	; 0x252 <i2cStart>
				i2cCheck(0x08, "I2C start")
    154e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1552:	88 7f       	andi	r24, 0xF8	; 248
    1554:	88 30       	cpi	r24, 0x08	; 8
    1556:	e1 f0       	breq	.+56     	; 0x1590 <main+0x3cc>
    1558:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    155c:	88 7f       	andi	r24, 0xF8	; 248
    155e:	1f 92       	push	r1
    1560:	8f 93       	push	r24
    1562:	87 e5       	ldi	r24, 0x57	; 87
    1564:	91 e0       	ldi	r25, 0x01	; 1
				i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
				i2cCheck(0x18, "I2C EEPROM write request");
    1566:	9f 93       	push	r25
    1568:	8f 93       	push	r24
    156a:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    156e:	0e 94 35 01 	call	0x26a	; 0x26a <i2cReset>
    1572:	0f 90       	pop	r0
    1574:	0f 90       	pop	r0
    1576:	0f 90       	pop	r0
    1578:	0f 90       	pop	r0
    157a:	0b cf       	rjmp	.-490    	; 0x1392 <main+0x1ce>
    157c:	cd 5e       	subi	r28, 0xED	; 237
    157e:	db 4f       	sbci	r29, 0xFB	; 251
    1580:	48 81       	ld	r20, Y
    1582:	59 81       	ldd	r21, Y+1	; 0x01
    1584:	c3 51       	subi	r28, 0x13	; 19
    1586:	d4 40       	sbci	r29, 0x04	; 4
    1588:	d6 01       	movw	r26, r12
    158a:	2d 91       	ld	r18, X+
    158c:	3c 91       	ld	r19, X
    158e:	78 cf       	rjmp	.-272    	; 0x1480 <main+0x2bc>
					printf("Żle wpisana suma kontorlna podano %2x a ma być %2x\r\n", checksum, checksum_sprawdz);
					break;
				}
				i2cStart();
				i2cCheck(0x08, "I2C start")
				i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
    1590:	d6 01       	movw	r26, r12
    1592:	8d 91       	ld	r24, X+
    1594:	9c 91       	ld	r25, X
    1596:	88 27       	eor	r24, r24
    1598:	91 70       	andi	r25, 0x01	; 1
    159a:	88 0f       	add	r24, r24
    159c:	89 2f       	mov	r24, r25
    159e:	88 1f       	adc	r24, r24
    15a0:	99 0b       	sbc	r25, r25
    15a2:	91 95       	neg	r25
    15a4:	80 6a       	ori	r24, 0xA0	; 160
    15a6:	0e 94 4d 01 	call	0x29a	; 0x29a <i2cSend>
				i2cCheck(0x18, "I2C EEPROM write request");
    15aa:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    15ae:	88 7f       	andi	r24, 0xF8	; 248
    15b0:	88 31       	cpi	r24, 0x18	; 24
    15b2:	a1 f0       	breq	.+40     	; 0x15dc <main+0x418>
    15b4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    15b8:	88 7f       	andi	r24, 0xF8	; 248
    15ba:	1f 92       	push	r1
    15bc:	8f 93       	push	r24
    15be:	88 e7       	ldi	r24, 0x78	; 120
    15c0:	91 e0       	ldi	r25, 0x01	; 1
    15c2:	d1 cf       	rjmp	.-94     	; 0x1566 <main+0x3a2>
				scanf("%2x%4x%2x", (unsigned int*)(&dlugosc), (unsigned int*)(&adres), (unsigned int*)(&rekordy));
				for (int i = 0; i < dlugosc; ++i){
					scanf("%2x", (unsigned int*)(&wejscie[i]));
				}
				scanf("%2x", (unsigned int*)(&checksum));
				if (dlugosc == 0 && adres == 0 && rekordy == 1 && checksum == 0xff){
    15c4:	f4 01       	movw	r30, r8
    15c6:	60 81       	ld	r22, Z
    15c8:	71 81       	ldd	r23, Z+1	; 0x01
    15ca:	6f 3f       	cpi	r22, 0xFF	; 255
    15cc:	71 05       	cpc	r23, r1
    15ce:	09 f0       	breq	.+2      	; 0x15d2 <main+0x40e>
    15d0:	57 cf       	rjmp	.-338    	; 0x1480 <main+0x2bc>
					printf("Koniec pliku dodano\r\n");
    15d2:	84 ea       	ldi	r24, 0xA4	; 164
    15d4:	92 e0       	ldi	r25, 0x02	; 2
    15d6:	0e 94 20 10 	call	0x2040	; 0x2040 <puts>
					break;
    15da:	80 ce       	rjmp	.-768    	; 0x12dc <main+0x118>
				}
				i2cStart();
				i2cCheck(0x08, "I2C start")
				i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
				i2cCheck(0x18, "I2C EEPROM write request");
				i2cSend(adres & 0xff);
    15dc:	f6 01       	movw	r30, r12
    15de:	80 81       	ld	r24, Z
    15e0:	0e 94 4d 01 	call	0x29a	; 0x29a <i2cSend>
				i2cCheck(0x28, "I2C EEPROM set address");                
    15e4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    15e8:	88 7f       	andi	r24, 0xF8	; 248
    15ea:	88 32       	cpi	r24, 0x28	; 40
    15ec:	09 f0       	breq	.+2      	; 0x15f0 <main+0x42c>
    15ee:	93 c0       	rjmp	.+294    	; 0x1716 <main+0x552>
				for(uint8_t i = 0; i < dlugosc; i++) {
    15f0:	d3 01       	movw	r26, r6
    15f2:	8d 91       	ld	r24, X+
    15f4:	9c 91       	ld	r25, X
    15f6:	18 16       	cp	r1, r24
    15f8:	19 06       	cpc	r1, r25
    15fa:	6c f5       	brge	.+90     	; 0x1656 <main+0x492>
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	10 e0       	ldi	r17, 0x00	; 0
					i2cSend(wejscie[i]);
    1602:	88 0f       	add	r24, r24
    1604:	99 1f       	adc	r25, r25
    1606:	e1 e0       	ldi	r30, 0x01	; 1
    1608:	f0 e0       	ldi	r31, 0x00	; 0
    160a:	ec 0f       	add	r30, r28
    160c:	fd 1f       	adc	r31, r29
    160e:	e8 0f       	add	r30, r24
    1610:	f9 1f       	adc	r31, r25
    1612:	80 81       	ld	r24, Z
    1614:	0e 94 4d 01 	call	0x29a	; 0x29a <i2cSend>
					i2cCheck(0x28, "I2C EEPROM data transmitted");
    1618:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    161c:	88 7f       	andi	r24, 0xF8	; 248
    161e:	88 32       	cpi	r24, 0x28	; 40
    1620:	89 f0       	breq	.+34     	; 0x1644 <main+0x480>
    1622:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1626:	88 7f       	andi	r24, 0xF8	; 248
    1628:	1f 92       	push	r1
    162a:	8f 93       	push	r24
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	93 e0       	ldi	r25, 0x03	; 3
    1630:	9f 93       	push	r25
    1632:	8f 93       	push	r24
    1634:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    1638:	0e 94 35 01 	call	0x26a	; 0x26a <i2cReset>
    163c:	0f 90       	pop	r0
    163e:	0f 90       	pop	r0
    1640:	0f 90       	pop	r0
    1642:	0f 90       	pop	r0
				i2cCheck(0x08, "I2C start")
				i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
				i2cCheck(0x18, "I2C EEPROM write request");
				i2cSend(adres & 0xff);
				i2cCheck(0x28, "I2C EEPROM set address");                
				for(uint8_t i = 0; i < dlugosc; i++) {
    1644:	1f 5f       	subi	r17, 0xFF	; 255
    1646:	81 2f       	mov	r24, r17
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	f3 01       	movw	r30, r6
    164c:	20 81       	ld	r18, Z
    164e:	31 81       	ldd	r19, Z+1	; 0x01
    1650:	82 17       	cp	r24, r18
    1652:	93 07       	cpc	r25, r19
    1654:	b4 f2       	brlt	.-84     	; 0x1602 <main+0x43e>
					i2cSend(wejscie[i]);
					i2cCheck(0x28, "I2C EEPROM data transmitted");
				}
				i2cStop();
    1656:	0e 94 31 01 	call	0x262	; 0x262 <i2cStop>
				i2cCheck(0xf8, "I2C stop");
    165a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    165e:	88 7f       	andi	r24, 0xF8	; 248
    1660:	88 3f       	cpi	r24, 0xF8	; 248
    1662:	09 f4       	brne	.+2      	; 0x1666 <main+0x4a2>
    1664:	82 c0       	rjmp	.+260    	; 0x176a <main+0x5a6>
    1666:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    166a:	88 7f       	andi	r24, 0xF8	; 248
    166c:	1f 92       	push	r1
    166e:	8f 93       	push	r24
    1670:	2c e3       	ldi	r18, 0x3C	; 60
    1672:	32 e0       	ldi	r19, 0x02	; 2
    1674:	3f 93       	push	r19
    1676:	2f 93       	push	r18
    1678:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    167c:	0e 94 35 01 	call	0x26a	; 0x26a <i2cReset>
    1680:	0f 90       	pop	r0
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	84 ce       	rjmp	.-760    	; 0x1392 <main+0x1ce>
				printf("Zapisano linie\r\n");
			}
		}
		else{
			printf("Błędna komenda\r\n");
    168a:	84 e4       	ldi	r24, 0x44	; 68
    168c:	93 e0       	ldi	r25, 0x03	; 3
    168e:	0e 94 20 10 	call	0x2040	; 0x2040 <puts>
    1692:	24 ce       	rjmp	.-952    	; 0x12dc <main+0x118>
	char flaga;
	while(1) {
		scanf("%s", bufor);
		printf("Wypisano %s\r\n", bufor);
		if(strcmp(bufor, "read") == 0){
			scanf("%"SCNx16, &adres);
    1694:	df 92       	push	r13
    1696:	cf 92       	push	r12
    1698:	8b e2       	ldi	r24, 0x2B	; 43
    169a:	91 e0       	ldi	r25, 0x01	; 1
    169c:	9f 93       	push	r25
    169e:	8f 93       	push	r24
    16a0:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
			scanf("%d", &dlugosc);
    16a4:	7f 92       	push	r7
    16a6:	6f 92       	push	r6
    16a8:	8e e2       	ldi	r24, 0x2E	; 46
    16aa:	91 e0       	ldi	r25, 0x01	; 1
    16ac:	9f 93       	push	r25
    16ae:	8f 93       	push	r24
    16b0:	0e 94 50 10 	call	0x20a0	; 0x20a0 <scanf>
			printf("Odczytano adres = %02x dlugosc = %d\n\r", adres, dlugosc);
    16b4:	d3 01       	movw	r26, r6
    16b6:	11 96       	adiw	r26, 0x01	; 1
    16b8:	8c 91       	ld	r24, X
    16ba:	11 97       	sbiw	r26, 0x01	; 1
    16bc:	8f 93       	push	r24
    16be:	8c 91       	ld	r24, X
    16c0:	8f 93       	push	r24
    16c2:	f6 01       	movw	r30, r12
    16c4:	81 81       	ldd	r24, Z+1	; 0x01
    16c6:	8f 93       	push	r24
    16c8:	80 81       	ld	r24, Z
    16ca:	8f 93       	push	r24
    16cc:	81 e3       	ldi	r24, 0x31	; 49
    16ce:	91 e0       	ldi	r25, 0x01	; 1
    16d0:	9f 93       	push	r25
    16d2:	8f 93       	push	r24
    16d4:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
			i2cStart();
    16d8:	0e 94 29 01 	call	0x252	; 0x252 <i2cStart>
			i2cCheck(0x08, "I2C start")
    16dc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    16e0:	88 7f       	andi	r24, 0xF8	; 248
    16e2:	0f b6       	in	r0, 0x3f	; 63
    16e4:	f8 94       	cli
    16e6:	de bf       	out	0x3e, r29	; 62
    16e8:	0f be       	out	0x3f, r0	; 63
    16ea:	cd bf       	out	0x3d, r28	; 61
    16ec:	88 30       	cpi	r24, 0x08	; 8
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <main+0x52e>
    16f0:	41 c0       	rjmp	.+130    	; 0x1774 <main+0x5b0>
    16f2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    16f6:	88 7f       	andi	r24, 0xF8	; 248
    16f8:	1f 92       	push	r1
    16fa:	8f 93       	push	r24
    16fc:	87 e5       	ldi	r24, 0x57	; 87
    16fe:	91 e0       	ldi	r25, 0x01	; 1
			i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
			i2cCheck(0x18, "I2C EEPROM write request")
    1700:	9f 93       	push	r25
    1702:	8f 93       	push	r24
    1704:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    1708:	0e 94 35 01 	call	0x26a	; 0x26a <i2cReset>
    170c:	0f 90       	pop	r0
    170e:	0f 90       	pop	r0
    1710:	0f 90       	pop	r0
    1712:	0f 90       	pop	r0
    1714:	e3 cd       	rjmp	.-1082   	; 0x12dc <main+0x118>
				i2cStart();
				i2cCheck(0x08, "I2C start")
				i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
				i2cCheck(0x18, "I2C EEPROM write request");
				i2cSend(adres & 0xff);
				i2cCheck(0x28, "I2C EEPROM set address");                
    1716:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    171a:	88 7f       	andi	r24, 0xF8	; 248
    171c:	1f 92       	push	r1
    171e:	8f 93       	push	r24
    1720:	e8 ea       	ldi	r30, 0xA8	; 168
    1722:	f1 e0       	ldi	r31, 0x01	; 1
    1724:	ff 93       	push	r31
    1726:	ef 93       	push	r30
    1728:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    172c:	0e 94 35 01 	call	0x26a	; 0x26a <i2cReset>
    1730:	0f 90       	pop	r0
    1732:	0f 90       	pop	r0
    1734:	0f 90       	pop	r0
    1736:	0f 90       	pop	r0
    1738:	2c ce       	rjmp	.-936    	; 0x1392 <main+0x1ce>
				for (int i = 0; i < dlugosc; ++i){
					checksum_sprawdz -= wejscie[i];
				}
				checksum_sprawdz -= dlugosc + adres;
				if(checksum_sprawdz != checksum){
					printf("Żle wpisana suma kontorlna podano %2x a ma być %2x\r\n", checksum, checksum_sprawdz);
    173a:	9f 93       	push	r25
    173c:	8f 93       	push	r24
    173e:	3f 93       	push	r19
    1740:	2f 93       	push	r18
    1742:	8a ec       	ldi	r24, 0xCA	; 202
    1744:	92 e0       	ldi	r25, 0x02	; 2
    1746:	9f 93       	push	r25
    1748:	8f 93       	push	r24
    174a:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
					break;
    174e:	0f 90       	pop	r0
    1750:	0f 90       	pop	r0
    1752:	0f 90       	pop	r0
    1754:	0f 90       	pop	r0
    1756:	0f 90       	pop	r0
    1758:	0f 90       	pop	r0
    175a:	c0 cd       	rjmp	.-1152   	; 0x12dc <main+0x118>
			scanf("%c", &flaga);
			printf("Rozpoczęto pisanie\r\n");
			while(1){
				scanf("%c", &flaga);
				if (flaga != ':'){
					printf("Błędny znak!\r\n");
    175c:	8a e8       	ldi	r24, 0x8A	; 138
    175e:	92 e0       	ldi	r25, 0x02	; 2
    1760:	0e 94 20 10 	call	0x2040	; 0x2040 <puts>
					break;
    1764:	bb cd       	rjmp	.-1162   	; 0x12dc <main+0x118>
				printf(":%.2x %.4x %.2x ", dlugosc, adres, rekordy);
				for (int i = 0; i < dlugosc; ++i){
					printf("%.2x ", wejscie[i]);
				}
				printf("%.2x\r\n", checksum);
				checksum_sprawdz = 0x00;
    1766:	80 e0       	ldi	r24, 0x00	; 0
    1768:	e4 ce       	rjmp	.-568    	; 0x1532 <main+0x36e>
					i2cSend(wejscie[i]);
					i2cCheck(0x28, "I2C EEPROM data transmitted");
				}
				i2cStop();
				i2cCheck(0xf8, "I2C stop");
				printf("Zapisano linie\r\n");
    176a:	84 e3       	ldi	r24, 0x34	; 52
    176c:	93 e0       	ldi	r25, 0x03	; 3
    176e:	0e 94 20 10 	call	0x2040	; 0x2040 <puts>
    1772:	0f ce       	rjmp	.-994    	; 0x1392 <main+0x1ce>
			scanf("%"SCNx16, &adres);
			scanf("%d", &dlugosc);
			printf("Odczytano adres = %02x dlugosc = %d\n\r", adres, dlugosc);
			i2cStart();
			i2cCheck(0x08, "I2C start")
			i2cSend(eeprom_addr | ((adres & 0x100) >> 7));
    1774:	d6 01       	movw	r26, r12
    1776:	8d 91       	ld	r24, X+
    1778:	9c 91       	ld	r25, X
    177a:	88 27       	eor	r24, r24
    177c:	91 70       	andi	r25, 0x01	; 1
    177e:	88 0f       	add	r24, r24
    1780:	89 2f       	mov	r24, r25
    1782:	88 1f       	adc	r24, r24
    1784:	99 0b       	sbc	r25, r25
    1786:	91 95       	neg	r25
    1788:	80 6a       	ori	r24, 0xA0	; 160
    178a:	0e 94 4d 01 	call	0x29a	; 0x29a <i2cSend>
			i2cCheck(0x18, "I2C EEPROM write request")
    178e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1792:	88 7f       	andi	r24, 0xF8	; 248
    1794:	88 31       	cpi	r24, 0x18	; 24
    1796:	41 f0       	breq	.+16     	; 0x17a8 <main+0x5e4>
    1798:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    179c:	88 7f       	andi	r24, 0xF8	; 248
    179e:	1f 92       	push	r1
    17a0:	8f 93       	push	r24
    17a2:	88 e7       	ldi	r24, 0x78	; 120
    17a4:	91 e0       	ldi	r25, 0x01	; 1
    17a6:	ac cf       	rjmp	.-168    	; 0x1700 <main+0x53c>
			i2cSend(adres & 0xff);
    17a8:	f6 01       	movw	r30, r12
    17aa:	80 81       	ld	r24, Z
    17ac:	0e 94 4d 01 	call	0x29a	; 0x29a <i2cSend>
			i2cCheck(0x28, "I2C EEPROM set address")
    17b0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    17b4:	88 7f       	andi	r24, 0xF8	; 248
    17b6:	88 32       	cpi	r24, 0x28	; 40
    17b8:	41 f0       	breq	.+16     	; 0x17ca <main+0x606>
    17ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    17be:	88 7f       	andi	r24, 0xF8	; 248
    17c0:	1f 92       	push	r1
    17c2:	8f 93       	push	r24
    17c4:	88 ea       	ldi	r24, 0xA8	; 168
    17c6:	91 e0       	ldi	r25, 0x01	; 1
    17c8:	9b cf       	rjmp	.-202    	; 0x1700 <main+0x53c>
			i2cStart();
    17ca:	0e 94 29 01 	call	0x252	; 0x252 <i2cStart>
			i2cCheck(0x10, "I2C second start")
    17ce:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    17d2:	88 7f       	andi	r24, 0xF8	; 248
    17d4:	80 31       	cpi	r24, 0x10	; 16
    17d6:	41 f0       	breq	.+16     	; 0x17e8 <main+0x624>
    17d8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    17dc:	88 7f       	andi	r24, 0xF8	; 248
    17de:	1f 92       	push	r1
    17e0:	8f 93       	push	r24
    17e2:	86 ed       	ldi	r24, 0xD6	; 214
    17e4:	91 e0       	ldi	r25, 0x01	; 1
    17e6:	8c cf       	rjmp	.-232    	; 0x1700 <main+0x53c>
			i2cSend(eeprom_addr | 0x1 | ((adres & 0x100) >> 7));
    17e8:	d6 01       	movw	r26, r12
    17ea:	8d 91       	ld	r24, X+
    17ec:	9c 91       	ld	r25, X
    17ee:	88 27       	eor	r24, r24
    17f0:	91 70       	andi	r25, 0x01	; 1
    17f2:	88 0f       	add	r24, r24
    17f4:	89 2f       	mov	r24, r25
    17f6:	88 1f       	adc	r24, r24
    17f8:	99 0b       	sbc	r25, r25
    17fa:	91 95       	neg	r25
    17fc:	81 6a       	ori	r24, 0xA1	; 161
    17fe:	0e 94 4d 01 	call	0x29a	; 0x29a <i2cSend>
			i2cCheck(0x40, "I2C EEPROM read request")
    1802:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1806:	88 7f       	andi	r24, 0xF8	; 248
    1808:	80 34       	cpi	r24, 0x40	; 64
    180a:	41 f0       	breq	.+16     	; 0x181c <main+0x658>
    180c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1810:	88 7f       	andi	r24, 0xF8	; 248
    1812:	1f 92       	push	r1
    1814:	8f 93       	push	r24
    1816:	8e ef       	ldi	r24, 0xFE	; 254
    1818:	91 e0       	ldi	r25, 0x01	; 1
    181a:	72 cf       	rjmp	.-284    	; 0x1700 <main+0x53c>
			rekordy = dlugosc / 16;
    181c:	f3 01       	movw	r30, r6
    181e:	20 81       	ld	r18, Z
    1820:	31 81       	ldd	r19, Z+1	; 0x01
    1822:	c9 01       	movw	r24, r18
    1824:	37 fd       	sbrc	r19, 7
    1826:	0f 96       	adiw	r24, 0x0f	; 15
    1828:	95 95       	asr	r25
    182a:	87 95       	ror	r24
    182c:	95 95       	asr	r25
    182e:	87 95       	ror	r24
    1830:	95 95       	asr	r25
    1832:	87 95       	ror	r24
    1834:	95 95       	asr	r25
    1836:	87 95       	ror	r24
    1838:	cd 5e       	subi	r28, 0xED	; 237
    183a:	db 4f       	sbci	r29, 0xFB	; 251
    183c:	99 83       	std	Y+1, r25	; 0x01
    183e:	88 83       	st	Y, r24
    1840:	c3 51       	subi	r28, 0x13	; 19
    1842:	d4 40       	sbci	r29, 0x04	; 4
			ostatni_rekord = dlugosc % 16;
    1844:	89 01       	movw	r16, r18
    1846:	0f 70       	andi	r16, 0x0F	; 15
    1848:	10 78       	andi	r17, 0x80	; 128
    184a:	17 ff       	sbrs	r17, 7
    184c:	06 c0       	rjmp	.+12     	; 0x185a <main+0x696>
    184e:	01 50       	subi	r16, 0x01	; 1
    1850:	11 09       	sbc	r17, r1
    1852:	00 6f       	ori	r16, 0xF0	; 240
    1854:	1f 6f       	ori	r17, 0xFF	; 255
    1856:	0f 5f       	subi	r16, 0xFF	; 255
    1858:	1f 4f       	sbci	r17, 0xFF	; 255
    185a:	a1 2c       	mov	r10, r1
    185c:	b1 2c       	mov	r11, r1
    185e:	f1 2c       	mov	r15, r1
    1860:	98 01       	movw	r18, r16
    1862:	21 50       	subi	r18, 0x01	; 1
    1864:	31 09       	sbc	r19, r1
    1866:	c8 5d       	subi	r28, 0xD8	; 216
    1868:	db 4f       	sbci	r29, 0xFB	; 251
    186a:	39 83       	std	Y+1, r19	; 0x01
    186c:	28 83       	st	Y, r18
    186e:	c8 52       	subi	r28, 0x28	; 40
    1870:	d4 40       	sbci	r29, 0x04	; 4
				printf(":%02x %04x 00 ", dluosc, adres);
        for(int j = 0; j < dluosc; j++){
            printf("%02x ", wyjscie[j]);
            adres++;
        }
        printf(" %02x \r\n", (uint8_t)checksum);
    1872:	cc 5d       	subi	r28, 0xDC	; 220
    1874:	db 4f       	sbci	r29, 0xFB	; 251
    1876:	79 82       	std	Y+1, r7	; 0x01
    1878:	68 82       	st	Y, r6
    187a:	c4 52       	subi	r28, 0x24	; 36
    187c:	d4 40       	sbci	r29, 0x04	; 4
    187e:	7f 2c       	mov	r7, r15
    1880:	ca 5d       	subi	r28, 0xDA	; 218
    1882:	db 4f       	sbci	r29, 0xFB	; 251
    1884:	59 82       	std	Y+1, r5	; 0x01
    1886:	48 82       	st	Y, r4
    1888:	c6 52       	subi	r28, 0x26	; 38
    188a:	d4 40       	sbci	r29, 0x04	; 4
			i2cCheck(0x40, "I2C EEPROM read request")
			rekordy = dlugosc / 16;
			ostatni_rekord = dlugosc % 16;
			for (int8_t i = 0; i <= rekordy; i++) {
				dluosc = i == rekordy ? ostatni_rekord : 16;
				checksum = 0x00 - (dluosc + adres);
    188c:	d6 01       	movw	r26, r12
			i2cSend(eeprom_addr | 0x1 | ((adres & 0x100) >> 7));
			i2cCheck(0x40, "I2C EEPROM read request")
			rekordy = dlugosc / 16;
			ostatni_rekord = dlugosc % 16;
			for (int8_t i = 0; i <= rekordy; i++) {
				dluosc = i == rekordy ? ostatni_rekord : 16;
    188e:	a8 16       	cp	r10, r24
    1890:	b9 06       	cpc	r11, r25
    1892:	09 f4       	brne	.+2      	; 0x1896 <main+0x6d2>
    1894:	56 c0       	rjmp	.+172    	; 0x1942 <main+0x77e>
				checksum = 0x00 - (dluosc + adres);
    1896:	8d 91       	ld	r24, X+
    1898:	9c 91       	ld	r25, X
    189a:	40 96       	adiw	r24, 0x10	; 16
    189c:	91 95       	neg	r25
    189e:	81 95       	neg	r24
    18a0:	91 09       	sbc	r25, r1
    18a2:	f4 01       	movw	r30, r8
    18a4:	91 83       	std	Z+1, r25	; 0x01
    18a6:	80 83       	st	Z, r24
    18a8:	2f e0       	ldi	r18, 0x0F	; 15
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	ce 5d       	subi	r28, 0xDE	; 222
    18ae:	db 4f       	sbci	r29, 0xFB	; 251
    18b0:	39 83       	std	Y+1, r19	; 0x01
    18b2:	28 83       	st	Y, r18
    18b4:	c2 52       	subi	r28, 0x22	; 34
    18b6:	d4 40       	sbci	r29, 0x04	; 4
			i2cSend(eeprom_addr | 0x1 | ((adres & 0x100) >> 7));
			i2cCheck(0x40, "I2C EEPROM read request")
			rekordy = dlugosc / 16;
			ostatni_rekord = dlugosc % 16;
			for (int8_t i = 0; i <= rekordy; i++) {
				dluosc = i == rekordy ? ostatni_rekord : 16;
    18b8:	80 e1       	ldi	r24, 0x10	; 16
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	c0 5e       	subi	r28, 0xE0	; 224
    18be:	db 4f       	sbci	r29, 0xFB	; 251
    18c0:	99 83       	std	Y+1, r25	; 0x01
    18c2:	88 83       	st	Y, r24
    18c4:	c0 52       	subi	r28, 0x20	; 32
    18c6:	d4 40       	sbci	r29, 0x04	; 4
    18c8:	80 e0       	ldi	r24, 0x00	; 0
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	51 2c       	mov	r5, r1
    18ce:	e1 2c       	mov	r14, r1
    18d0:	f1 2c       	mov	r15, r1
    18d2:	22 c0       	rjmp	.+68     	; 0x1918 <main+0x754>
				checksum = 0x00 - (dluosc + adres);
				for (uint8_t j = 0; j < dluosc; j++) {
					wartosc = j == dluosc - 1 && i == rekordy ? i2cReadNoAck() : i2cReadAck();
    18d4:	0e 94 39 01 	call	0x272	; 0x272 <i2cReadAck>
    18d8:	90 e0       	ldi	r25, 0x00	; 0
					checksum -= wartosc;
    18da:	f4 01       	movw	r30, r8
    18dc:	20 81       	ld	r18, Z
    18de:	31 81       	ldd	r19, Z+1	; 0x01
    18e0:	28 1b       	sub	r18, r24
    18e2:	39 0b       	sbc	r19, r25
    18e4:	31 83       	std	Z+1, r19	; 0x01
    18e6:	20 83       	st	Z, r18
					wyjscie[j] = wartosc;
    18e8:	f7 01       	movw	r30, r14
    18ea:	ee 0f       	add	r30, r30
    18ec:	ff 1f       	adc	r31, r31
    18ee:	2f ef       	ldi	r18, 0xFF	; 255
    18f0:	31 e0       	ldi	r19, 0x01	; 1
    18f2:	2c 0f       	add	r18, r28
    18f4:	3d 1f       	adc	r19, r29
    18f6:	e2 0f       	add	r30, r18
    18f8:	f3 1f       	adc	r31, r19
    18fa:	91 83       	std	Z+1, r25	; 0x01
    18fc:	80 83       	st	Z, r24
			rekordy = dlugosc / 16;
			ostatni_rekord = dlugosc % 16;
			for (int8_t i = 0; i <= rekordy; i++) {
				dluosc = i == rekordy ? ostatni_rekord : 16;
				checksum = 0x00 - (dluosc + adres);
				for (uint8_t j = 0; j < dluosc; j++) {
    18fe:	53 94       	inc	r5
    1900:	e5 2c       	mov	r14, r5
    1902:	f1 2c       	mov	r15, r1
    1904:	c7 01       	movw	r24, r14
    1906:	c0 5e       	subi	r28, 0xE0	; 224
    1908:	db 4f       	sbci	r29, 0xFB	; 251
    190a:	a8 81       	ld	r26, Y
    190c:	b9 81       	ldd	r27, Y+1	; 0x01
    190e:	c0 52       	subi	r28, 0x20	; 32
    1910:	d4 40       	sbci	r29, 0x04	; 4
    1912:	ea 16       	cp	r14, r26
    1914:	fb 06       	cpc	r15, r27
    1916:	b0 f5       	brcc	.+108    	; 0x1984 <main+0x7c0>
					wartosc = j == dluosc - 1 && i == rekordy ? i2cReadNoAck() : i2cReadAck();
    1918:	ce 5d       	subi	r28, 0xDE	; 222
    191a:	db 4f       	sbci	r29, 0xFB	; 251
    191c:	a8 81       	ld	r26, Y
    191e:	b9 81       	ldd	r27, Y+1	; 0x01
    1920:	c2 52       	subi	r28, 0x22	; 34
    1922:	d4 40       	sbci	r29, 0x04	; 4
    1924:	8a 17       	cp	r24, r26
    1926:	9b 07       	cpc	r25, r27
    1928:	a9 f6       	brne	.-86     	; 0x18d4 <main+0x710>
    192a:	cd 5e       	subi	r28, 0xED	; 237
    192c:	db 4f       	sbci	r29, 0xFB	; 251
    192e:	88 81       	ld	r24, Y
    1930:	99 81       	ldd	r25, Y+1	; 0x01
    1932:	c3 51       	subi	r28, 0x13	; 19
    1934:	d4 40       	sbci	r29, 0x04	; 4
    1936:	8a 15       	cp	r24, r10
    1938:	9b 05       	cpc	r25, r11
    193a:	61 f6       	brne	.-104    	; 0x18d4 <main+0x710>
    193c:	0e 94 43 01 	call	0x286	; 0x286 <i2cReadNoAck>
    1940:	cb cf       	rjmp	.-106    	; 0x18d8 <main+0x714>
			i2cCheck(0x40, "I2C EEPROM read request")
			rekordy = dlugosc / 16;
			ostatni_rekord = dlugosc % 16;
			for (int8_t i = 0; i <= rekordy; i++) {
				dluosc = i == rekordy ? ostatni_rekord : 16;
				checksum = 0x00 - (dluosc + adres);
    1942:	8d 91       	ld	r24, X+
    1944:	9c 91       	ld	r25, X
    1946:	80 0f       	add	r24, r16
    1948:	91 1f       	adc	r25, r17
    194a:	91 95       	neg	r25
    194c:	81 95       	neg	r24
    194e:	91 09       	sbc	r25, r1
    1950:	f4 01       	movw	r30, r8
    1952:	91 83       	std	Z+1, r25	; 0x01
    1954:	80 83       	st	Z, r24
				for (uint8_t j = 0; j < dluosc; j++) {
    1956:	01 15       	cp	r16, r1
    1958:	11 05       	cpc	r17, r1
    195a:	09 f4       	brne	.+2      	; 0x195e <main+0x79a>
    195c:	7c c0       	rjmp	.+248    	; 0x1a56 <main+0x892>
    195e:	c8 5d       	subi	r28, 0xD8	; 216
    1960:	db 4f       	sbci	r29, 0xFB	; 251
    1962:	28 81       	ld	r18, Y
    1964:	39 81       	ldd	r19, Y+1	; 0x01
    1966:	c8 52       	subi	r28, 0x28	; 40
    1968:	d4 40       	sbci	r29, 0x04	; 4
    196a:	ce 5d       	subi	r28, 0xDE	; 222
    196c:	db 4f       	sbci	r29, 0xFB	; 251
    196e:	39 83       	std	Y+1, r19	; 0x01
    1970:	28 83       	st	Y, r18
    1972:	c2 52       	subi	r28, 0x22	; 34
    1974:	d4 40       	sbci	r29, 0x04	; 4
    1976:	c0 5e       	subi	r28, 0xE0	; 224
    1978:	db 4f       	sbci	r29, 0xFB	; 251
    197a:	19 83       	std	Y+1, r17	; 0x01
    197c:	08 83       	st	Y, r16
    197e:	c0 52       	subi	r28, 0x20	; 32
    1980:	d4 40       	sbci	r29, 0x04	; 4
    1982:	a2 cf       	rjmp	.-188    	; 0x18c8 <main+0x704>
					checksum -= wartosc;
					wyjscie[j] = wartosc;
				}
				if(dluosc == 0)
					break;
				printf(":%02x %04x 00 ", dluosc, adres);
    1984:	d6 01       	movw	r26, r12
    1986:	11 96       	adiw	r26, 0x01	; 1
    1988:	8c 91       	ld	r24, X
    198a:	11 97       	sbiw	r26, 0x01	; 1
    198c:	8f 93       	push	r24
    198e:	8c 91       	ld	r24, X
    1990:	8f 93       	push	r24
    1992:	cf 5d       	subi	r28, 0xDF	; 223
    1994:	db 4f       	sbci	r29, 0xFB	; 251
    1996:	b8 81       	ld	r27, Y
    1998:	c1 52       	subi	r28, 0x21	; 33
    199a:	d4 40       	sbci	r29, 0x04	; 4
    199c:	bf 93       	push	r27
    199e:	c0 5e       	subi	r28, 0xE0	; 224
    19a0:	db 4f       	sbci	r29, 0xFB	; 251
    19a2:	e8 81       	ld	r30, Y
    19a4:	c0 52       	subi	r28, 0x20	; 32
    19a6:	d4 40       	sbci	r29, 0x04	; 4
    19a8:	ef 93       	push	r30
    19aa:	26 e5       	ldi	r18, 0x56	; 86
    19ac:	33 e0       	ldi	r19, 0x03	; 3
    19ae:	3f 93       	push	r19
    19b0:	2f 93       	push	r18
    19b2:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    19b6:	de 01       	movw	r26, r28
    19b8:	a1 50       	subi	r26, 0x01	; 1
    19ba:	be 4f       	sbci	r27, 0xFE	; 254
    19bc:	7d 01       	movw	r14, r26
    19be:	0f 90       	pop	r0
    19c0:	0f 90       	pop	r0
    19c2:	0f 90       	pop	r0
    19c4:	0f 90       	pop	r0
    19c6:	0f 90       	pop	r0
    19c8:	0f 90       	pop	r0
    19ca:	a1 2c       	mov	r10, r1
    19cc:	b1 2c       	mov	r11, r1
        for(int j = 0; j < dluosc; j++){
            printf("%02x ", wyjscie[j]);
    19ce:	f7 01       	movw	r30, r14
    19d0:	80 81       	ld	r24, Z
    19d2:	91 81       	ldd	r25, Z+1	; 0x01
    19d4:	f2 e0       	ldi	r31, 0x02	; 2
    19d6:	ef 0e       	add	r14, r31
    19d8:	f1 1c       	adc	r15, r1
    19da:	9f 93       	push	r25
    19dc:	8f 93       	push	r24
    19de:	2d e2       	ldi	r18, 0x2D	; 45
    19e0:	32 e0       	ldi	r19, 0x02	; 2
    19e2:	3f 93       	push	r19
    19e4:	2f 93       	push	r18
    19e6:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
            adres++;
    19ea:	d6 01       	movw	r26, r12
    19ec:	8d 91       	ld	r24, X+
    19ee:	9c 91       	ld	r25, X
    19f0:	11 97       	sbiw	r26, 0x01	; 1
    19f2:	01 96       	adiw	r24, 0x01	; 1
    19f4:	8d 93       	st	X+, r24
    19f6:	9c 93       	st	X, r25
					wyjscie[j] = wartosc;
				}
				if(dluosc == 0)
					break;
				printf(":%02x %04x 00 ", dluosc, adres);
        for(int j = 0; j < dluosc; j++){
    19f8:	bf ef       	ldi	r27, 0xFF	; 255
    19fa:	ab 1a       	sub	r10, r27
    19fc:	bb 0a       	sbc	r11, r27
    19fe:	0f 90       	pop	r0
    1a00:	0f 90       	pop	r0
    1a02:	0f 90       	pop	r0
    1a04:	0f 90       	pop	r0
    1a06:	c0 5e       	subi	r28, 0xE0	; 224
    1a08:	db 4f       	sbci	r29, 0xFB	; 251
    1a0a:	e8 81       	ld	r30, Y
    1a0c:	f9 81       	ldd	r31, Y+1	; 0x01
    1a0e:	c0 52       	subi	r28, 0x20	; 32
    1a10:	d4 40       	sbci	r29, 0x04	; 4
    1a12:	ae 16       	cp	r10, r30
    1a14:	bf 06       	cpc	r11, r31
    1a16:	d8 f2       	brcs	.-74     	; 0x19ce <main+0x80a>
            printf("%02x ", wyjscie[j]);
            adres++;
        }
        printf(" %02x \r\n", (uint8_t)checksum);
    1a18:	d4 01       	movw	r26, r8
    1a1a:	8d 91       	ld	r24, X+
    1a1c:	9c 91       	ld	r25, X
    1a1e:	99 27       	eor	r25, r25
    1a20:	9f 93       	push	r25
    1a22:	8f 93       	push	r24
    1a24:	e3 e3       	ldi	r30, 0x33	; 51
    1a26:	f2 e0       	ldi	r31, 0x02	; 2
    1a28:	ff 93       	push	r31
    1a2a:	ef 93       	push	r30
    1a2c:	0e 94 0a 10 	call	0x2014	; 0x2014 <printf>
    1a30:	73 94       	inc	r7
			i2cCheck(0x10, "I2C second start")
			i2cSend(eeprom_addr | 0x1 | ((adres & 0x100) >> 7));
			i2cCheck(0x40, "I2C EEPROM read request")
			rekordy = dlugosc / 16;
			ostatni_rekord = dlugosc % 16;
			for (int8_t i = 0; i <= rekordy; i++) {
    1a32:	a7 2c       	mov	r10, r7
    1a34:	07 2c       	mov	r0, r7
    1a36:	00 0c       	add	r0, r0
    1a38:	bb 08       	sbc	r11, r11
    1a3a:	cd 5e       	subi	r28, 0xED	; 237
    1a3c:	db 4f       	sbci	r29, 0xFB	; 251
    1a3e:	88 81       	ld	r24, Y
    1a40:	99 81       	ldd	r25, Y+1	; 0x01
    1a42:	c3 51       	subi	r28, 0x13	; 19
    1a44:	d4 40       	sbci	r29, 0x04	; 4
    1a46:	0f 90       	pop	r0
    1a48:	0f 90       	pop	r0
    1a4a:	0f 90       	pop	r0
    1a4c:	0f 90       	pop	r0
    1a4e:	8a 15       	cp	r24, r10
    1a50:	9b 05       	cpc	r25, r11
    1a52:	08 f0       	brcs	.+2      	; 0x1a56 <main+0x892>
    1a54:	1b cf       	rjmp	.-458    	; 0x188c <main+0x6c8>
    1a56:	cc 5d       	subi	r28, 0xDC	; 220
    1a58:	db 4f       	sbci	r29, 0xFB	; 251
    1a5a:	68 80       	ld	r6, Y
    1a5c:	79 80       	ldd	r7, Y+1	; 0x01
    1a5e:	c4 52       	subi	r28, 0x24	; 36
    1a60:	d4 40       	sbci	r29, 0x04	; 4
    1a62:	ca 5d       	subi	r28, 0xDA	; 218
    1a64:	db 4f       	sbci	r29, 0xFB	; 251
    1a66:	48 80       	ld	r4, Y
    1a68:	59 80       	ldd	r5, Y+1	; 0x01
    1a6a:	c6 52       	subi	r28, 0x26	; 38
    1a6c:	d4 40       	sbci	r29, 0x04	; 4
            printf("%02x ", wyjscie[j]);
            adres++;
        }
        printf(" %02x \r\n", (uint8_t)checksum);
			}     
			i2cStop();
    1a6e:	0e 94 31 01 	call	0x262	; 0x262 <i2cStop>
			i2cCheck(0xf8, "I2C stop")
    1a72:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1a76:	88 7f       	andi	r24, 0xF8	; 248
    1a78:	88 3f       	cpi	r24, 0xF8	; 248
    1a7a:	41 f0       	breq	.+16     	; 0x1a8c <main+0x8c8>
    1a7c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1a80:	88 7f       	andi	r24, 0xF8	; 248
    1a82:	1f 92       	push	r1
    1a84:	8f 93       	push	r24
    1a86:	8c e3       	ldi	r24, 0x3C	; 60
    1a88:	92 e0       	ldi	r25, 0x02	; 2
    1a8a:	3a ce       	rjmp	.-908    	; 0x1700 <main+0x53c>
			printf(":00 0000 01 ff\r\n");
    1a8c:	8c e5       	ldi	r24, 0x5C	; 92
    1a8e:	92 e0       	ldi	r25, 0x02	; 2
    1a90:	0e 94 20 10 	call	0x2040	; 0x2040 <puts>
    1a94:	23 cc       	rjmp	.-1978   	; 0x12dc <main+0x118>

00001a96 <__prologue_saves__>:
    1a96:	2f 92       	push	r2
    1a98:	3f 92       	push	r3
    1a9a:	4f 92       	push	r4
    1a9c:	5f 92       	push	r5
    1a9e:	6f 92       	push	r6
    1aa0:	7f 92       	push	r7
    1aa2:	8f 92       	push	r8
    1aa4:	9f 92       	push	r9
    1aa6:	af 92       	push	r10
    1aa8:	bf 92       	push	r11
    1aaa:	cf 92       	push	r12
    1aac:	df 92       	push	r13
    1aae:	ef 92       	push	r14
    1ab0:	ff 92       	push	r15
    1ab2:	0f 93       	push	r16
    1ab4:	1f 93       	push	r17
    1ab6:	cf 93       	push	r28
    1ab8:	df 93       	push	r29
    1aba:	cd b7       	in	r28, 0x3d	; 61
    1abc:	de b7       	in	r29, 0x3e	; 62
    1abe:	ca 1b       	sub	r28, r26
    1ac0:	db 0b       	sbc	r29, r27
    1ac2:	0f b6       	in	r0, 0x3f	; 63
    1ac4:	f8 94       	cli
    1ac6:	de bf       	out	0x3e, r29	; 62
    1ac8:	0f be       	out	0x3f, r0	; 63
    1aca:	cd bf       	out	0x3d, r28	; 61
    1acc:	09 94       	ijmp

00001ace <__epilogue_restores__>:
    1ace:	2a 88       	ldd	r2, Y+18	; 0x12
    1ad0:	39 88       	ldd	r3, Y+17	; 0x11
    1ad2:	48 88       	ldd	r4, Y+16	; 0x10
    1ad4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ad6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ad8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ada:	8c 84       	ldd	r8, Y+12	; 0x0c
    1adc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ade:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ae0:	b9 84       	ldd	r11, Y+9	; 0x09
    1ae2:	c8 84       	ldd	r12, Y+8	; 0x08
    1ae4:	df 80       	ldd	r13, Y+7	; 0x07
    1ae6:	ee 80       	ldd	r14, Y+6	; 0x06
    1ae8:	fd 80       	ldd	r15, Y+5	; 0x05
    1aea:	0c 81       	ldd	r16, Y+4	; 0x04
    1aec:	1b 81       	ldd	r17, Y+3	; 0x03
    1aee:	aa 81       	ldd	r26, Y+2	; 0x02
    1af0:	b9 81       	ldd	r27, Y+1	; 0x01
    1af2:	ce 0f       	add	r28, r30
    1af4:	d1 1d       	adc	r29, r1
    1af6:	0f b6       	in	r0, 0x3f	; 63
    1af8:	f8 94       	cli
    1afa:	de bf       	out	0x3e, r29	; 62
    1afc:	0f be       	out	0x3f, r0	; 63
    1afe:	cd bf       	out	0x3d, r28	; 61
    1b00:	ed 01       	movw	r28, r26
    1b02:	08 95       	ret

00001b04 <__floatunsisf>:
    1b04:	e8 94       	clt
    1b06:	09 c0       	rjmp	.+18     	; 0x1b1a <__floatsisf+0x12>

00001b08 <__floatsisf>:
    1b08:	97 fb       	bst	r25, 7
    1b0a:	3e f4       	brtc	.+14     	; 0x1b1a <__floatsisf+0x12>
    1b0c:	90 95       	com	r25
    1b0e:	80 95       	com	r24
    1b10:	70 95       	com	r23
    1b12:	61 95       	neg	r22
    1b14:	7f 4f       	sbci	r23, 0xFF	; 255
    1b16:	8f 4f       	sbci	r24, 0xFF	; 255
    1b18:	9f 4f       	sbci	r25, 0xFF	; 255
    1b1a:	99 23       	and	r25, r25
    1b1c:	a9 f0       	breq	.+42     	; 0x1b48 <__floatsisf+0x40>
    1b1e:	f9 2f       	mov	r31, r25
    1b20:	96 e9       	ldi	r25, 0x96	; 150
    1b22:	bb 27       	eor	r27, r27
    1b24:	93 95       	inc	r25
    1b26:	f6 95       	lsr	r31
    1b28:	87 95       	ror	r24
    1b2a:	77 95       	ror	r23
    1b2c:	67 95       	ror	r22
    1b2e:	b7 95       	ror	r27
    1b30:	f1 11       	cpse	r31, r1
    1b32:	f8 cf       	rjmp	.-16     	; 0x1b24 <__floatsisf+0x1c>
    1b34:	fa f4       	brpl	.+62     	; 0x1b74 <__floatsisf+0x6c>
    1b36:	bb 0f       	add	r27, r27
    1b38:	11 f4       	brne	.+4      	; 0x1b3e <__floatsisf+0x36>
    1b3a:	60 ff       	sbrs	r22, 0
    1b3c:	1b c0       	rjmp	.+54     	; 0x1b74 <__floatsisf+0x6c>
    1b3e:	6f 5f       	subi	r22, 0xFF	; 255
    1b40:	7f 4f       	sbci	r23, 0xFF	; 255
    1b42:	8f 4f       	sbci	r24, 0xFF	; 255
    1b44:	9f 4f       	sbci	r25, 0xFF	; 255
    1b46:	16 c0       	rjmp	.+44     	; 0x1b74 <__floatsisf+0x6c>
    1b48:	88 23       	and	r24, r24
    1b4a:	11 f0       	breq	.+4      	; 0x1b50 <__floatsisf+0x48>
    1b4c:	96 e9       	ldi	r25, 0x96	; 150
    1b4e:	11 c0       	rjmp	.+34     	; 0x1b72 <__floatsisf+0x6a>
    1b50:	77 23       	and	r23, r23
    1b52:	21 f0       	breq	.+8      	; 0x1b5c <__floatsisf+0x54>
    1b54:	9e e8       	ldi	r25, 0x8E	; 142
    1b56:	87 2f       	mov	r24, r23
    1b58:	76 2f       	mov	r23, r22
    1b5a:	05 c0       	rjmp	.+10     	; 0x1b66 <__floatsisf+0x5e>
    1b5c:	66 23       	and	r22, r22
    1b5e:	71 f0       	breq	.+28     	; 0x1b7c <__floatsisf+0x74>
    1b60:	96 e8       	ldi	r25, 0x86	; 134
    1b62:	86 2f       	mov	r24, r22
    1b64:	70 e0       	ldi	r23, 0x00	; 0
    1b66:	60 e0       	ldi	r22, 0x00	; 0
    1b68:	2a f0       	brmi	.+10     	; 0x1b74 <__floatsisf+0x6c>
    1b6a:	9a 95       	dec	r25
    1b6c:	66 0f       	add	r22, r22
    1b6e:	77 1f       	adc	r23, r23
    1b70:	88 1f       	adc	r24, r24
    1b72:	da f7       	brpl	.-10     	; 0x1b6a <__floatsisf+0x62>
    1b74:	88 0f       	add	r24, r24
    1b76:	96 95       	lsr	r25
    1b78:	87 95       	ror	r24
    1b7a:	97 f9       	bld	r25, 7
    1b7c:	08 95       	ret

00001b7e <__mulsf3>:
    1b7e:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <__mulsf3x>
    1b82:	0c 94 43 0e 	jmp	0x1c86	; 0x1c86 <__fp_round>
    1b86:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__fp_pscA>
    1b8a:	38 f0       	brcs	.+14     	; 0x1b9a <__mulsf3+0x1c>
    1b8c:	0e 94 3c 0e 	call	0x1c78	; 0x1c78 <__fp_pscB>
    1b90:	20 f0       	brcs	.+8      	; 0x1b9a <__mulsf3+0x1c>
    1b92:	95 23       	and	r25, r21
    1b94:	11 f0       	breq	.+4      	; 0x1b9a <__mulsf3+0x1c>
    1b96:	0c 94 2c 0e 	jmp	0x1c58	; 0x1c58 <__fp_inf>
    1b9a:	0c 94 32 0e 	jmp	0x1c64	; 0x1c64 <__fp_nan>
    1b9e:	11 24       	eor	r1, r1
    1ba0:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__fp_szero>

00001ba4 <__mulsf3x>:
    1ba4:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__fp_split3>
    1ba8:	70 f3       	brcs	.-36     	; 0x1b86 <__mulsf3+0x8>

00001baa <__mulsf3_pse>:
    1baa:	95 9f       	mul	r25, r21
    1bac:	c1 f3       	breq	.-16     	; 0x1b9e <__mulsf3+0x20>
    1bae:	95 0f       	add	r25, r21
    1bb0:	50 e0       	ldi	r21, 0x00	; 0
    1bb2:	55 1f       	adc	r21, r21
    1bb4:	62 9f       	mul	r22, r18
    1bb6:	f0 01       	movw	r30, r0
    1bb8:	72 9f       	mul	r23, r18
    1bba:	bb 27       	eor	r27, r27
    1bbc:	f0 0d       	add	r31, r0
    1bbe:	b1 1d       	adc	r27, r1
    1bc0:	63 9f       	mul	r22, r19
    1bc2:	aa 27       	eor	r26, r26
    1bc4:	f0 0d       	add	r31, r0
    1bc6:	b1 1d       	adc	r27, r1
    1bc8:	aa 1f       	adc	r26, r26
    1bca:	64 9f       	mul	r22, r20
    1bcc:	66 27       	eor	r22, r22
    1bce:	b0 0d       	add	r27, r0
    1bd0:	a1 1d       	adc	r26, r1
    1bd2:	66 1f       	adc	r22, r22
    1bd4:	82 9f       	mul	r24, r18
    1bd6:	22 27       	eor	r18, r18
    1bd8:	b0 0d       	add	r27, r0
    1bda:	a1 1d       	adc	r26, r1
    1bdc:	62 1f       	adc	r22, r18
    1bde:	73 9f       	mul	r23, r19
    1be0:	b0 0d       	add	r27, r0
    1be2:	a1 1d       	adc	r26, r1
    1be4:	62 1f       	adc	r22, r18
    1be6:	83 9f       	mul	r24, r19
    1be8:	a0 0d       	add	r26, r0
    1bea:	61 1d       	adc	r22, r1
    1bec:	22 1f       	adc	r18, r18
    1bee:	74 9f       	mul	r23, r20
    1bf0:	33 27       	eor	r19, r19
    1bf2:	a0 0d       	add	r26, r0
    1bf4:	61 1d       	adc	r22, r1
    1bf6:	23 1f       	adc	r18, r19
    1bf8:	84 9f       	mul	r24, r20
    1bfa:	60 0d       	add	r22, r0
    1bfc:	21 1d       	adc	r18, r1
    1bfe:	82 2f       	mov	r24, r18
    1c00:	76 2f       	mov	r23, r22
    1c02:	6a 2f       	mov	r22, r26
    1c04:	11 24       	eor	r1, r1
    1c06:	9f 57       	subi	r25, 0x7F	; 127
    1c08:	50 40       	sbci	r21, 0x00	; 0
    1c0a:	9a f0       	brmi	.+38     	; 0x1c32 <__mulsf3_pse+0x88>
    1c0c:	f1 f0       	breq	.+60     	; 0x1c4a <__mulsf3_pse+0xa0>
    1c0e:	88 23       	and	r24, r24
    1c10:	4a f0       	brmi	.+18     	; 0x1c24 <__mulsf3_pse+0x7a>
    1c12:	ee 0f       	add	r30, r30
    1c14:	ff 1f       	adc	r31, r31
    1c16:	bb 1f       	adc	r27, r27
    1c18:	66 1f       	adc	r22, r22
    1c1a:	77 1f       	adc	r23, r23
    1c1c:	88 1f       	adc	r24, r24
    1c1e:	91 50       	subi	r25, 0x01	; 1
    1c20:	50 40       	sbci	r21, 0x00	; 0
    1c22:	a9 f7       	brne	.-22     	; 0x1c0e <__mulsf3_pse+0x64>
    1c24:	9e 3f       	cpi	r25, 0xFE	; 254
    1c26:	51 05       	cpc	r21, r1
    1c28:	80 f0       	brcs	.+32     	; 0x1c4a <__mulsf3_pse+0xa0>
    1c2a:	0c 94 2c 0e 	jmp	0x1c58	; 0x1c58 <__fp_inf>
    1c2e:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__fp_szero>
    1c32:	5f 3f       	cpi	r21, 0xFF	; 255
    1c34:	e4 f3       	brlt	.-8      	; 0x1c2e <__mulsf3_pse+0x84>
    1c36:	98 3e       	cpi	r25, 0xE8	; 232
    1c38:	d4 f3       	brlt	.-12     	; 0x1c2e <__mulsf3_pse+0x84>
    1c3a:	86 95       	lsr	r24
    1c3c:	77 95       	ror	r23
    1c3e:	67 95       	ror	r22
    1c40:	b7 95       	ror	r27
    1c42:	f7 95       	ror	r31
    1c44:	e7 95       	ror	r30
    1c46:	9f 5f       	subi	r25, 0xFF	; 255
    1c48:	c1 f7       	brne	.-16     	; 0x1c3a <__mulsf3_pse+0x90>
    1c4a:	fe 2b       	or	r31, r30
    1c4c:	88 0f       	add	r24, r24
    1c4e:	91 1d       	adc	r25, r1
    1c50:	96 95       	lsr	r25
    1c52:	87 95       	ror	r24
    1c54:	97 f9       	bld	r25, 7
    1c56:	08 95       	ret

00001c58 <__fp_inf>:
    1c58:	97 f9       	bld	r25, 7
    1c5a:	9f 67       	ori	r25, 0x7F	; 127
    1c5c:	80 e8       	ldi	r24, 0x80	; 128
    1c5e:	70 e0       	ldi	r23, 0x00	; 0
    1c60:	60 e0       	ldi	r22, 0x00	; 0
    1c62:	08 95       	ret

00001c64 <__fp_nan>:
    1c64:	9f ef       	ldi	r25, 0xFF	; 255
    1c66:	80 ec       	ldi	r24, 0xC0	; 192
    1c68:	08 95       	ret

00001c6a <__fp_pscA>:
    1c6a:	00 24       	eor	r0, r0
    1c6c:	0a 94       	dec	r0
    1c6e:	16 16       	cp	r1, r22
    1c70:	17 06       	cpc	r1, r23
    1c72:	18 06       	cpc	r1, r24
    1c74:	09 06       	cpc	r0, r25
    1c76:	08 95       	ret

00001c78 <__fp_pscB>:
    1c78:	00 24       	eor	r0, r0
    1c7a:	0a 94       	dec	r0
    1c7c:	12 16       	cp	r1, r18
    1c7e:	13 06       	cpc	r1, r19
    1c80:	14 06       	cpc	r1, r20
    1c82:	05 06       	cpc	r0, r21
    1c84:	08 95       	ret

00001c86 <__fp_round>:
    1c86:	09 2e       	mov	r0, r25
    1c88:	03 94       	inc	r0
    1c8a:	00 0c       	add	r0, r0
    1c8c:	11 f4       	brne	.+4      	; 0x1c92 <__fp_round+0xc>
    1c8e:	88 23       	and	r24, r24
    1c90:	52 f0       	brmi	.+20     	; 0x1ca6 <__fp_round+0x20>
    1c92:	bb 0f       	add	r27, r27
    1c94:	40 f4       	brcc	.+16     	; 0x1ca6 <__fp_round+0x20>
    1c96:	bf 2b       	or	r27, r31
    1c98:	11 f4       	brne	.+4      	; 0x1c9e <__fp_round+0x18>
    1c9a:	60 ff       	sbrs	r22, 0
    1c9c:	04 c0       	rjmp	.+8      	; 0x1ca6 <__fp_round+0x20>
    1c9e:	6f 5f       	subi	r22, 0xFF	; 255
    1ca0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ca4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca6:	08 95       	ret

00001ca8 <__fp_split3>:
    1ca8:	57 fd       	sbrc	r21, 7
    1caa:	90 58       	subi	r25, 0x80	; 128
    1cac:	44 0f       	add	r20, r20
    1cae:	55 1f       	adc	r21, r21
    1cb0:	59 f0       	breq	.+22     	; 0x1cc8 <__fp_splitA+0x10>
    1cb2:	5f 3f       	cpi	r21, 0xFF	; 255
    1cb4:	71 f0       	breq	.+28     	; 0x1cd2 <__fp_splitA+0x1a>
    1cb6:	47 95       	ror	r20

00001cb8 <__fp_splitA>:
    1cb8:	88 0f       	add	r24, r24
    1cba:	97 fb       	bst	r25, 7
    1cbc:	99 1f       	adc	r25, r25
    1cbe:	61 f0       	breq	.+24     	; 0x1cd8 <__fp_splitA+0x20>
    1cc0:	9f 3f       	cpi	r25, 0xFF	; 255
    1cc2:	79 f0       	breq	.+30     	; 0x1ce2 <__fp_splitA+0x2a>
    1cc4:	87 95       	ror	r24
    1cc6:	08 95       	ret
    1cc8:	12 16       	cp	r1, r18
    1cca:	13 06       	cpc	r1, r19
    1ccc:	14 06       	cpc	r1, r20
    1cce:	55 1f       	adc	r21, r21
    1cd0:	f2 cf       	rjmp	.-28     	; 0x1cb6 <__fp_split3+0xe>
    1cd2:	46 95       	lsr	r20
    1cd4:	f1 df       	rcall	.-30     	; 0x1cb8 <__fp_splitA>
    1cd6:	08 c0       	rjmp	.+16     	; 0x1ce8 <__fp_splitA+0x30>
    1cd8:	16 16       	cp	r1, r22
    1cda:	17 06       	cpc	r1, r23
    1cdc:	18 06       	cpc	r1, r24
    1cde:	99 1f       	adc	r25, r25
    1ce0:	f1 cf       	rjmp	.-30     	; 0x1cc4 <__fp_splitA+0xc>
    1ce2:	86 95       	lsr	r24
    1ce4:	71 05       	cpc	r23, r1
    1ce6:	61 05       	cpc	r22, r1
    1ce8:	08 94       	sec
    1cea:	08 95       	ret

00001cec <__fp_zero>:
    1cec:	e8 94       	clt

00001cee <__fp_szero>:
    1cee:	bb 27       	eor	r27, r27
    1cf0:	66 27       	eor	r22, r22
    1cf2:	77 27       	eor	r23, r23
    1cf4:	cb 01       	movw	r24, r22
    1cf6:	97 f9       	bld	r25, 7
    1cf8:	08 95       	ret

00001cfa <__ftoa_engine>:
    1cfa:	28 30       	cpi	r18, 0x08	; 8
    1cfc:	08 f0       	brcs	.+2      	; 0x1d00 <__ftoa_engine+0x6>
    1cfe:	27 e0       	ldi	r18, 0x07	; 7
    1d00:	33 27       	eor	r19, r19
    1d02:	da 01       	movw	r26, r20
    1d04:	99 0f       	add	r25, r25
    1d06:	31 1d       	adc	r19, r1
    1d08:	87 fd       	sbrc	r24, 7
    1d0a:	91 60       	ori	r25, 0x01	; 1
    1d0c:	00 96       	adiw	r24, 0x00	; 0
    1d0e:	61 05       	cpc	r22, r1
    1d10:	71 05       	cpc	r23, r1
    1d12:	39 f4       	brne	.+14     	; 0x1d22 <__ftoa_engine+0x28>
    1d14:	32 60       	ori	r19, 0x02	; 2
    1d16:	2e 5f       	subi	r18, 0xFE	; 254
    1d18:	3d 93       	st	X+, r19
    1d1a:	30 e3       	ldi	r19, 0x30	; 48
    1d1c:	2a 95       	dec	r18
    1d1e:	e1 f7       	brne	.-8      	; 0x1d18 <__ftoa_engine+0x1e>
    1d20:	08 95       	ret
    1d22:	9f 3f       	cpi	r25, 0xFF	; 255
    1d24:	30 f0       	brcs	.+12     	; 0x1d32 <__ftoa_engine+0x38>
    1d26:	80 38       	cpi	r24, 0x80	; 128
    1d28:	71 05       	cpc	r23, r1
    1d2a:	61 05       	cpc	r22, r1
    1d2c:	09 f0       	breq	.+2      	; 0x1d30 <__ftoa_engine+0x36>
    1d2e:	3c 5f       	subi	r19, 0xFC	; 252
    1d30:	3c 5f       	subi	r19, 0xFC	; 252
    1d32:	3d 93       	st	X+, r19
    1d34:	91 30       	cpi	r25, 0x01	; 1
    1d36:	08 f0       	brcs	.+2      	; 0x1d3a <__ftoa_engine+0x40>
    1d38:	80 68       	ori	r24, 0x80	; 128
    1d3a:	91 1d       	adc	r25, r1
    1d3c:	df 93       	push	r29
    1d3e:	cf 93       	push	r28
    1d40:	1f 93       	push	r17
    1d42:	0f 93       	push	r16
    1d44:	ff 92       	push	r15
    1d46:	ef 92       	push	r14
    1d48:	19 2f       	mov	r17, r25
    1d4a:	98 7f       	andi	r25, 0xF8	; 248
    1d4c:	96 95       	lsr	r25
    1d4e:	e9 2f       	mov	r30, r25
    1d50:	96 95       	lsr	r25
    1d52:	96 95       	lsr	r25
    1d54:	e9 0f       	add	r30, r25
    1d56:	ff 27       	eor	r31, r31
    1d58:	e6 53       	subi	r30, 0x36	; 54
    1d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5c:	99 27       	eor	r25, r25
    1d5e:	33 27       	eor	r19, r19
    1d60:	ee 24       	eor	r14, r14
    1d62:	ff 24       	eor	r15, r15
    1d64:	a7 01       	movw	r20, r14
    1d66:	e7 01       	movw	r28, r14
    1d68:	05 90       	lpm	r0, Z+
    1d6a:	08 94       	sec
    1d6c:	07 94       	ror	r0
    1d6e:	28 f4       	brcc	.+10     	; 0x1d7a <__ftoa_engine+0x80>
    1d70:	36 0f       	add	r19, r22
    1d72:	e7 1e       	adc	r14, r23
    1d74:	f8 1e       	adc	r15, r24
    1d76:	49 1f       	adc	r20, r25
    1d78:	51 1d       	adc	r21, r1
    1d7a:	66 0f       	add	r22, r22
    1d7c:	77 1f       	adc	r23, r23
    1d7e:	88 1f       	adc	r24, r24
    1d80:	99 1f       	adc	r25, r25
    1d82:	06 94       	lsr	r0
    1d84:	a1 f7       	brne	.-24     	; 0x1d6e <__ftoa_engine+0x74>
    1d86:	05 90       	lpm	r0, Z+
    1d88:	07 94       	ror	r0
    1d8a:	28 f4       	brcc	.+10     	; 0x1d96 <__ftoa_engine+0x9c>
    1d8c:	e7 0e       	add	r14, r23
    1d8e:	f8 1e       	adc	r15, r24
    1d90:	49 1f       	adc	r20, r25
    1d92:	56 1f       	adc	r21, r22
    1d94:	c1 1d       	adc	r28, r1
    1d96:	77 0f       	add	r23, r23
    1d98:	88 1f       	adc	r24, r24
    1d9a:	99 1f       	adc	r25, r25
    1d9c:	66 1f       	adc	r22, r22
    1d9e:	06 94       	lsr	r0
    1da0:	a1 f7       	brne	.-24     	; 0x1d8a <__ftoa_engine+0x90>
    1da2:	05 90       	lpm	r0, Z+
    1da4:	07 94       	ror	r0
    1da6:	28 f4       	brcc	.+10     	; 0x1db2 <__ftoa_engine+0xb8>
    1da8:	f8 0e       	add	r15, r24
    1daa:	49 1f       	adc	r20, r25
    1dac:	56 1f       	adc	r21, r22
    1dae:	c7 1f       	adc	r28, r23
    1db0:	d1 1d       	adc	r29, r1
    1db2:	88 0f       	add	r24, r24
    1db4:	99 1f       	adc	r25, r25
    1db6:	66 1f       	adc	r22, r22
    1db8:	77 1f       	adc	r23, r23
    1dba:	06 94       	lsr	r0
    1dbc:	a1 f7       	brne	.-24     	; 0x1da6 <__ftoa_engine+0xac>
    1dbe:	05 90       	lpm	r0, Z+
    1dc0:	07 94       	ror	r0
    1dc2:	20 f4       	brcc	.+8      	; 0x1dcc <__ftoa_engine+0xd2>
    1dc4:	49 0f       	add	r20, r25
    1dc6:	56 1f       	adc	r21, r22
    1dc8:	c7 1f       	adc	r28, r23
    1dca:	d8 1f       	adc	r29, r24
    1dcc:	99 0f       	add	r25, r25
    1dce:	66 1f       	adc	r22, r22
    1dd0:	77 1f       	adc	r23, r23
    1dd2:	88 1f       	adc	r24, r24
    1dd4:	06 94       	lsr	r0
    1dd6:	a9 f7       	brne	.-22     	; 0x1dc2 <__ftoa_engine+0xc8>
    1dd8:	84 91       	lpm	r24, Z
    1dda:	10 95       	com	r17
    1ddc:	17 70       	andi	r17, 0x07	; 7
    1dde:	41 f0       	breq	.+16     	; 0x1df0 <__ftoa_engine+0xf6>
    1de0:	d6 95       	lsr	r29
    1de2:	c7 95       	ror	r28
    1de4:	57 95       	ror	r21
    1de6:	47 95       	ror	r20
    1de8:	f7 94       	ror	r15
    1dea:	e7 94       	ror	r14
    1dec:	1a 95       	dec	r17
    1dee:	c1 f7       	brne	.-16     	; 0x1de0 <__ftoa_engine+0xe6>
    1df0:	e0 e7       	ldi	r30, 0x70	; 112
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	68 94       	set
    1df6:	15 90       	lpm	r1, Z+
    1df8:	15 91       	lpm	r17, Z+
    1dfa:	35 91       	lpm	r19, Z+
    1dfc:	65 91       	lpm	r22, Z+
    1dfe:	95 91       	lpm	r25, Z+
    1e00:	05 90       	lpm	r0, Z+
    1e02:	7f e2       	ldi	r23, 0x2F	; 47
    1e04:	73 95       	inc	r23
    1e06:	e1 18       	sub	r14, r1
    1e08:	f1 0a       	sbc	r15, r17
    1e0a:	43 0b       	sbc	r20, r19
    1e0c:	56 0b       	sbc	r21, r22
    1e0e:	c9 0b       	sbc	r28, r25
    1e10:	d0 09       	sbc	r29, r0
    1e12:	c0 f7       	brcc	.-16     	; 0x1e04 <__ftoa_engine+0x10a>
    1e14:	e1 0c       	add	r14, r1
    1e16:	f1 1e       	adc	r15, r17
    1e18:	43 1f       	adc	r20, r19
    1e1a:	56 1f       	adc	r21, r22
    1e1c:	c9 1f       	adc	r28, r25
    1e1e:	d0 1d       	adc	r29, r0
    1e20:	7e f4       	brtc	.+30     	; 0x1e40 <__ftoa_engine+0x146>
    1e22:	70 33       	cpi	r23, 0x30	; 48
    1e24:	11 f4       	brne	.+4      	; 0x1e2a <__ftoa_engine+0x130>
    1e26:	8a 95       	dec	r24
    1e28:	e6 cf       	rjmp	.-52     	; 0x1df6 <__ftoa_engine+0xfc>
    1e2a:	e8 94       	clt
    1e2c:	01 50       	subi	r16, 0x01	; 1
    1e2e:	30 f0       	brcs	.+12     	; 0x1e3c <__ftoa_engine+0x142>
    1e30:	08 0f       	add	r16, r24
    1e32:	0a f4       	brpl	.+2      	; 0x1e36 <__ftoa_engine+0x13c>
    1e34:	00 27       	eor	r16, r16
    1e36:	02 17       	cp	r16, r18
    1e38:	08 f4       	brcc	.+2      	; 0x1e3c <__ftoa_engine+0x142>
    1e3a:	20 2f       	mov	r18, r16
    1e3c:	23 95       	inc	r18
    1e3e:	02 2f       	mov	r16, r18
    1e40:	7a 33       	cpi	r23, 0x3A	; 58
    1e42:	28 f0       	brcs	.+10     	; 0x1e4e <__ftoa_engine+0x154>
    1e44:	79 e3       	ldi	r23, 0x39	; 57
    1e46:	7d 93       	st	X+, r23
    1e48:	2a 95       	dec	r18
    1e4a:	e9 f7       	brne	.-6      	; 0x1e46 <__ftoa_engine+0x14c>
    1e4c:	10 c0       	rjmp	.+32     	; 0x1e6e <__ftoa_engine+0x174>
    1e4e:	7d 93       	st	X+, r23
    1e50:	2a 95       	dec	r18
    1e52:	89 f6       	brne	.-94     	; 0x1df6 <__ftoa_engine+0xfc>
    1e54:	06 94       	lsr	r0
    1e56:	97 95       	ror	r25
    1e58:	67 95       	ror	r22
    1e5a:	37 95       	ror	r19
    1e5c:	17 95       	ror	r17
    1e5e:	17 94       	ror	r1
    1e60:	e1 18       	sub	r14, r1
    1e62:	f1 0a       	sbc	r15, r17
    1e64:	43 0b       	sbc	r20, r19
    1e66:	56 0b       	sbc	r21, r22
    1e68:	c9 0b       	sbc	r28, r25
    1e6a:	d0 09       	sbc	r29, r0
    1e6c:	98 f0       	brcs	.+38     	; 0x1e94 <__ftoa_engine+0x19a>
    1e6e:	23 95       	inc	r18
    1e70:	7e 91       	ld	r23, -X
    1e72:	73 95       	inc	r23
    1e74:	7a 33       	cpi	r23, 0x3A	; 58
    1e76:	08 f0       	brcs	.+2      	; 0x1e7a <__ftoa_engine+0x180>
    1e78:	70 e3       	ldi	r23, 0x30	; 48
    1e7a:	7c 93       	st	X, r23
    1e7c:	20 13       	cpse	r18, r16
    1e7e:	b8 f7       	brcc	.-18     	; 0x1e6e <__ftoa_engine+0x174>
    1e80:	7e 91       	ld	r23, -X
    1e82:	70 61       	ori	r23, 0x10	; 16
    1e84:	7d 93       	st	X+, r23
    1e86:	30 f0       	brcs	.+12     	; 0x1e94 <__ftoa_engine+0x19a>
    1e88:	83 95       	inc	r24
    1e8a:	71 e3       	ldi	r23, 0x31	; 49
    1e8c:	7d 93       	st	X+, r23
    1e8e:	70 e3       	ldi	r23, 0x30	; 48
    1e90:	2a 95       	dec	r18
    1e92:	e1 f7       	brne	.-8      	; 0x1e8c <__ftoa_engine+0x192>
    1e94:	11 24       	eor	r1, r1
    1e96:	ef 90       	pop	r14
    1e98:	ff 90       	pop	r15
    1e9a:	0f 91       	pop	r16
    1e9c:	1f 91       	pop	r17
    1e9e:	cf 91       	pop	r28
    1ea0:	df 91       	pop	r29
    1ea2:	99 27       	eor	r25, r25
    1ea4:	87 fd       	sbrc	r24, 7
    1ea6:	90 95       	com	r25
    1ea8:	08 95       	ret

00001eaa <isspace>:
    1eaa:	91 11       	cpse	r25, r1
    1eac:	0c 94 dd 10 	jmp	0x21ba	; 0x21ba <__ctype_isfalse>
    1eb0:	80 32       	cpi	r24, 0x20	; 32
    1eb2:	19 f0       	breq	.+6      	; 0x1eba <isspace+0x10>
    1eb4:	89 50       	subi	r24, 0x09	; 9
    1eb6:	85 50       	subi	r24, 0x05	; 5
    1eb8:	c8 f7       	brcc	.-14     	; 0x1eac <isspace+0x2>
    1eba:	08 95       	ret

00001ebc <tolower>:
    1ebc:	91 11       	cpse	r25, r1
    1ebe:	08 95       	ret
    1ec0:	81 54       	subi	r24, 0x41	; 65
    1ec2:	8a 51       	subi	r24, 0x1A	; 26
    1ec4:	08 f4       	brcc	.+2      	; 0x1ec8 <tolower+0xc>
    1ec6:	80 5e       	subi	r24, 0xE0	; 224
    1ec8:	85 5a       	subi	r24, 0xA5	; 165
    1eca:	08 95       	ret

00001ecc <strchr_P>:
    1ecc:	fc 01       	movw	r30, r24
    1ece:	05 90       	lpm	r0, Z+
    1ed0:	06 16       	cp	r0, r22
    1ed2:	21 f0       	breq	.+8      	; 0x1edc <strchr_P+0x10>
    1ed4:	00 20       	and	r0, r0
    1ed6:	d9 f7       	brne	.-10     	; 0x1ece <strchr_P+0x2>
    1ed8:	c0 01       	movw	r24, r0
    1eda:	08 95       	ret
    1edc:	31 97       	sbiw	r30, 0x01	; 1
    1ede:	cf 01       	movw	r24, r30
    1ee0:	08 95       	ret

00001ee2 <strnlen_P>:
    1ee2:	fc 01       	movw	r30, r24
    1ee4:	05 90       	lpm	r0, Z+
    1ee6:	61 50       	subi	r22, 0x01	; 1
    1ee8:	70 40       	sbci	r23, 0x00	; 0
    1eea:	01 10       	cpse	r0, r1
    1eec:	d8 f7       	brcc	.-10     	; 0x1ee4 <strnlen_P+0x2>
    1eee:	80 95       	com	r24
    1ef0:	90 95       	com	r25
    1ef2:	8e 0f       	add	r24, r30
    1ef4:	9f 1f       	adc	r25, r31
    1ef6:	08 95       	ret

00001ef8 <strcmp>:
    1ef8:	fb 01       	movw	r30, r22
    1efa:	dc 01       	movw	r26, r24
    1efc:	8d 91       	ld	r24, X+
    1efe:	01 90       	ld	r0, Z+
    1f00:	80 19       	sub	r24, r0
    1f02:	01 10       	cpse	r0, r1
    1f04:	d9 f3       	breq	.-10     	; 0x1efc <strcmp+0x4>
    1f06:	99 0b       	sbc	r25, r25
    1f08:	08 95       	ret

00001f0a <strnlen>:
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	61 50       	subi	r22, 0x01	; 1
    1f0e:	70 40       	sbci	r23, 0x00	; 0
    1f10:	01 90       	ld	r0, Z+
    1f12:	01 10       	cpse	r0, r1
    1f14:	d8 f7       	brcc	.-10     	; 0x1f0c <strnlen+0x2>
    1f16:	80 95       	com	r24
    1f18:	90 95       	com	r25
    1f1a:	8e 0f       	add	r24, r30
    1f1c:	9f 1f       	adc	r25, r31
    1f1e:	08 95       	ret

00001f20 <fgetc>:
    1f20:	cf 93       	push	r28
    1f22:	df 93       	push	r29
    1f24:	ec 01       	movw	r28, r24
    1f26:	2b 81       	ldd	r18, Y+3	; 0x03
    1f28:	20 ff       	sbrs	r18, 0
    1f2a:	33 c0       	rjmp	.+102    	; 0x1f92 <fgetc+0x72>
    1f2c:	26 ff       	sbrs	r18, 6
    1f2e:	0a c0       	rjmp	.+20     	; 0x1f44 <fgetc+0x24>
    1f30:	2f 7b       	andi	r18, 0xBF	; 191
    1f32:	2b 83       	std	Y+3, r18	; 0x03
    1f34:	8e 81       	ldd	r24, Y+6	; 0x06
    1f36:	9f 81       	ldd	r25, Y+7	; 0x07
    1f38:	01 96       	adiw	r24, 0x01	; 1
    1f3a:	9f 83       	std	Y+7, r25	; 0x07
    1f3c:	8e 83       	std	Y+6, r24	; 0x06
    1f3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	29 c0       	rjmp	.+82     	; 0x1f96 <fgetc+0x76>
    1f44:	22 ff       	sbrs	r18, 2
    1f46:	0f c0       	rjmp	.+30     	; 0x1f66 <fgetc+0x46>
    1f48:	e8 81       	ld	r30, Y
    1f4a:	f9 81       	ldd	r31, Y+1	; 0x01
    1f4c:	80 81       	ld	r24, Z
    1f4e:	08 2e       	mov	r0, r24
    1f50:	00 0c       	add	r0, r0
    1f52:	99 0b       	sbc	r25, r25
    1f54:	00 97       	sbiw	r24, 0x00	; 0
    1f56:	19 f4       	brne	.+6      	; 0x1f5e <fgetc+0x3e>
    1f58:	20 62       	ori	r18, 0x20	; 32
    1f5a:	2b 83       	std	Y+3, r18	; 0x03
    1f5c:	1a c0       	rjmp	.+52     	; 0x1f92 <fgetc+0x72>
    1f5e:	31 96       	adiw	r30, 0x01	; 1
    1f60:	f9 83       	std	Y+1, r31	; 0x01
    1f62:	e8 83       	st	Y, r30
    1f64:	0e c0       	rjmp	.+28     	; 0x1f82 <fgetc+0x62>
    1f66:	ea 85       	ldd	r30, Y+10	; 0x0a
    1f68:	fb 85       	ldd	r31, Y+11	; 0x0b
    1f6a:	09 95       	icall
    1f6c:	97 ff       	sbrs	r25, 7
    1f6e:	09 c0       	rjmp	.+18     	; 0x1f82 <fgetc+0x62>
    1f70:	2b 81       	ldd	r18, Y+3	; 0x03
    1f72:	01 96       	adiw	r24, 0x01	; 1
    1f74:	11 f0       	breq	.+4      	; 0x1f7a <fgetc+0x5a>
    1f76:	80 e2       	ldi	r24, 0x20	; 32
    1f78:	01 c0       	rjmp	.+2      	; 0x1f7c <fgetc+0x5c>
    1f7a:	80 e1       	ldi	r24, 0x10	; 16
    1f7c:	82 2b       	or	r24, r18
    1f7e:	8b 83       	std	Y+3, r24	; 0x03
    1f80:	08 c0       	rjmp	.+16     	; 0x1f92 <fgetc+0x72>
    1f82:	2e 81       	ldd	r18, Y+6	; 0x06
    1f84:	3f 81       	ldd	r19, Y+7	; 0x07
    1f86:	2f 5f       	subi	r18, 0xFF	; 255
    1f88:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8a:	3f 83       	std	Y+7, r19	; 0x07
    1f8c:	2e 83       	std	Y+6, r18	; 0x06
    1f8e:	99 27       	eor	r25, r25
    1f90:	02 c0       	rjmp	.+4      	; 0x1f96 <fgetc+0x76>
    1f92:	8f ef       	ldi	r24, 0xFF	; 255
    1f94:	9f ef       	ldi	r25, 0xFF	; 255
    1f96:	df 91       	pop	r29
    1f98:	cf 91       	pop	r28
    1f9a:	08 95       	ret

00001f9c <fputc>:
    1f9c:	0f 93       	push	r16
    1f9e:	1f 93       	push	r17
    1fa0:	cf 93       	push	r28
    1fa2:	df 93       	push	r29
    1fa4:	fb 01       	movw	r30, r22
    1fa6:	23 81       	ldd	r18, Z+3	; 0x03
    1fa8:	21 fd       	sbrc	r18, 1
    1faa:	03 c0       	rjmp	.+6      	; 0x1fb2 <fputc+0x16>
    1fac:	8f ef       	ldi	r24, 0xFF	; 255
    1fae:	9f ef       	ldi	r25, 0xFF	; 255
    1fb0:	2c c0       	rjmp	.+88     	; 0x200a <fputc+0x6e>
    1fb2:	22 ff       	sbrs	r18, 2
    1fb4:	16 c0       	rjmp	.+44     	; 0x1fe2 <fputc+0x46>
    1fb6:	46 81       	ldd	r20, Z+6	; 0x06
    1fb8:	57 81       	ldd	r21, Z+7	; 0x07
    1fba:	24 81       	ldd	r18, Z+4	; 0x04
    1fbc:	35 81       	ldd	r19, Z+5	; 0x05
    1fbe:	42 17       	cp	r20, r18
    1fc0:	53 07       	cpc	r21, r19
    1fc2:	44 f4       	brge	.+16     	; 0x1fd4 <fputc+0x38>
    1fc4:	a0 81       	ld	r26, Z
    1fc6:	b1 81       	ldd	r27, Z+1	; 0x01
    1fc8:	9d 01       	movw	r18, r26
    1fca:	2f 5f       	subi	r18, 0xFF	; 255
    1fcc:	3f 4f       	sbci	r19, 0xFF	; 255
    1fce:	31 83       	std	Z+1, r19	; 0x01
    1fd0:	20 83       	st	Z, r18
    1fd2:	8c 93       	st	X, r24
    1fd4:	26 81       	ldd	r18, Z+6	; 0x06
    1fd6:	37 81       	ldd	r19, Z+7	; 0x07
    1fd8:	2f 5f       	subi	r18, 0xFF	; 255
    1fda:	3f 4f       	sbci	r19, 0xFF	; 255
    1fdc:	37 83       	std	Z+7, r19	; 0x07
    1fde:	26 83       	std	Z+6, r18	; 0x06
    1fe0:	14 c0       	rjmp	.+40     	; 0x200a <fputc+0x6e>
    1fe2:	8b 01       	movw	r16, r22
    1fe4:	ec 01       	movw	r28, r24
    1fe6:	fb 01       	movw	r30, r22
    1fe8:	00 84       	ldd	r0, Z+8	; 0x08
    1fea:	f1 85       	ldd	r31, Z+9	; 0x09
    1fec:	e0 2d       	mov	r30, r0
    1fee:	09 95       	icall
    1ff0:	89 2b       	or	r24, r25
    1ff2:	e1 f6       	brne	.-72     	; 0x1fac <fputc+0x10>
    1ff4:	d8 01       	movw	r26, r16
    1ff6:	16 96       	adiw	r26, 0x06	; 6
    1ff8:	8d 91       	ld	r24, X+
    1ffa:	9c 91       	ld	r25, X
    1ffc:	17 97       	sbiw	r26, 0x07	; 7
    1ffe:	01 96       	adiw	r24, 0x01	; 1
    2000:	17 96       	adiw	r26, 0x07	; 7
    2002:	9c 93       	st	X, r25
    2004:	8e 93       	st	-X, r24
    2006:	16 97       	sbiw	r26, 0x06	; 6
    2008:	ce 01       	movw	r24, r28
    200a:	df 91       	pop	r29
    200c:	cf 91       	pop	r28
    200e:	1f 91       	pop	r17
    2010:	0f 91       	pop	r16
    2012:	08 95       	ret

00002014 <printf>:
    2014:	a0 e0       	ldi	r26, 0x00	; 0
    2016:	b0 e0       	ldi	r27, 0x00	; 0
    2018:	e0 e1       	ldi	r30, 0x10	; 16
    201a:	f0 e1       	ldi	r31, 0x10	; 16
    201c:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__prologue_saves__+0x20>
    2020:	ae 01       	movw	r20, r28
    2022:	4b 5f       	subi	r20, 0xFB	; 251
    2024:	5f 4f       	sbci	r21, 0xFF	; 255
    2026:	fa 01       	movw	r30, r20
    2028:	61 91       	ld	r22, Z+
    202a:	71 91       	ld	r23, Z+
    202c:	af 01       	movw	r20, r30
    202e:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <__iob+0x2>
    2032:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <__iob+0x3>
    2036:	0e 94 57 01 	call	0x2ae	; 0x2ae <vfprintf>
    203a:	e2 e0       	ldi	r30, 0x02	; 2
    203c:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__epilogue_restores__+0x20>

00002040 <puts>:
    2040:	0f 93       	push	r16
    2042:	1f 93       	push	r17
    2044:	cf 93       	push	r28
    2046:	df 93       	push	r29
    2048:	e0 91 76 03 	lds	r30, 0x0376	; 0x800376 <__iob+0x2>
    204c:	f0 91 77 03 	lds	r31, 0x0377	; 0x800377 <__iob+0x3>
    2050:	23 81       	ldd	r18, Z+3	; 0x03
    2052:	21 ff       	sbrs	r18, 1
    2054:	1b c0       	rjmp	.+54     	; 0x208c <puts+0x4c>
    2056:	8c 01       	movw	r16, r24
    2058:	d0 e0       	ldi	r29, 0x00	; 0
    205a:	c0 e0       	ldi	r28, 0x00	; 0
    205c:	f8 01       	movw	r30, r16
    205e:	81 91       	ld	r24, Z+
    2060:	8f 01       	movw	r16, r30
    2062:	60 91 76 03 	lds	r22, 0x0376	; 0x800376 <__iob+0x2>
    2066:	70 91 77 03 	lds	r23, 0x0377	; 0x800377 <__iob+0x3>
    206a:	db 01       	movw	r26, r22
    206c:	18 96       	adiw	r26, 0x08	; 8
    206e:	ed 91       	ld	r30, X+
    2070:	fc 91       	ld	r31, X
    2072:	19 97       	sbiw	r26, 0x09	; 9
    2074:	88 23       	and	r24, r24
    2076:	31 f0       	breq	.+12     	; 0x2084 <puts+0x44>
    2078:	09 95       	icall
    207a:	89 2b       	or	r24, r25
    207c:	79 f3       	breq	.-34     	; 0x205c <puts+0x1c>
    207e:	df ef       	ldi	r29, 0xFF	; 255
    2080:	cf ef       	ldi	r28, 0xFF	; 255
    2082:	ec cf       	rjmp	.-40     	; 0x205c <puts+0x1c>
    2084:	8a e0       	ldi	r24, 0x0A	; 10
    2086:	09 95       	icall
    2088:	89 2b       	or	r24, r25
    208a:	19 f0       	breq	.+6      	; 0x2092 <puts+0x52>
    208c:	8f ef       	ldi	r24, 0xFF	; 255
    208e:	9f ef       	ldi	r25, 0xFF	; 255
    2090:	02 c0       	rjmp	.+4      	; 0x2096 <puts+0x56>
    2092:	8d 2f       	mov	r24, r29
    2094:	9c 2f       	mov	r25, r28
    2096:	df 91       	pop	r29
    2098:	cf 91       	pop	r28
    209a:	1f 91       	pop	r17
    209c:	0f 91       	pop	r16
    209e:	08 95       	ret

000020a0 <scanf>:
    20a0:	a0 e0       	ldi	r26, 0x00	; 0
    20a2:	b0 e0       	ldi	r27, 0x00	; 0
    20a4:	e6 e5       	ldi	r30, 0x56	; 86
    20a6:	f0 e1       	ldi	r31, 0x10	; 16
    20a8:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__prologue_saves__+0x20>
    20ac:	ae 01       	movw	r20, r28
    20ae:	4b 5f       	subi	r20, 0xFB	; 251
    20b0:	5f 4f       	sbci	r21, 0xFF	; 255
    20b2:	fa 01       	movw	r30, r20
    20b4:	61 91       	ld	r22, Z+
    20b6:	71 91       	ld	r23, Z+
    20b8:	af 01       	movw	r20, r30
    20ba:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <__iob>
    20be:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <__iob+0x1>
    20c2:	0e 94 b0 07 	call	0xf60	; 0xf60 <vfscanf>
    20c6:	e2 e0       	ldi	r30, 0x02	; 2
    20c8:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__epilogue_restores__+0x20>

000020cc <ungetc>:
    20cc:	fb 01       	movw	r30, r22
    20ce:	23 81       	ldd	r18, Z+3	; 0x03
    20d0:	20 ff       	sbrs	r18, 0
    20d2:	12 c0       	rjmp	.+36     	; 0x20f8 <ungetc+0x2c>
    20d4:	26 fd       	sbrc	r18, 6
    20d6:	10 c0       	rjmp	.+32     	; 0x20f8 <ungetc+0x2c>
    20d8:	8f 3f       	cpi	r24, 0xFF	; 255
    20da:	3f ef       	ldi	r19, 0xFF	; 255
    20dc:	93 07       	cpc	r25, r19
    20de:	61 f0       	breq	.+24     	; 0x20f8 <ungetc+0x2c>
    20e0:	82 83       	std	Z+2, r24	; 0x02
    20e2:	2f 7d       	andi	r18, 0xDF	; 223
    20e4:	20 64       	ori	r18, 0x40	; 64
    20e6:	23 83       	std	Z+3, r18	; 0x03
    20e8:	26 81       	ldd	r18, Z+6	; 0x06
    20ea:	37 81       	ldd	r19, Z+7	; 0x07
    20ec:	21 50       	subi	r18, 0x01	; 1
    20ee:	31 09       	sbc	r19, r1
    20f0:	37 83       	std	Z+7, r19	; 0x07
    20f2:	26 83       	std	Z+6, r18	; 0x06
    20f4:	99 27       	eor	r25, r25
    20f6:	08 95       	ret
    20f8:	8f ef       	ldi	r24, 0xFF	; 255
    20fa:	9f ef       	ldi	r25, 0xFF	; 255
    20fc:	08 95       	ret

000020fe <__ultoa_invert>:
    20fe:	fa 01       	movw	r30, r20
    2100:	aa 27       	eor	r26, r26
    2102:	28 30       	cpi	r18, 0x08	; 8
    2104:	51 f1       	breq	.+84     	; 0x215a <__ultoa_invert+0x5c>
    2106:	20 31       	cpi	r18, 0x10	; 16
    2108:	81 f1       	breq	.+96     	; 0x216a <__ultoa_invert+0x6c>
    210a:	e8 94       	clt
    210c:	6f 93       	push	r22
    210e:	6e 7f       	andi	r22, 0xFE	; 254
    2110:	6e 5f       	subi	r22, 0xFE	; 254
    2112:	7f 4f       	sbci	r23, 0xFF	; 255
    2114:	8f 4f       	sbci	r24, 0xFF	; 255
    2116:	9f 4f       	sbci	r25, 0xFF	; 255
    2118:	af 4f       	sbci	r26, 0xFF	; 255
    211a:	b1 e0       	ldi	r27, 0x01	; 1
    211c:	3e d0       	rcall	.+124    	; 0x219a <__ultoa_invert+0x9c>
    211e:	b4 e0       	ldi	r27, 0x04	; 4
    2120:	3c d0       	rcall	.+120    	; 0x219a <__ultoa_invert+0x9c>
    2122:	67 0f       	add	r22, r23
    2124:	78 1f       	adc	r23, r24
    2126:	89 1f       	adc	r24, r25
    2128:	9a 1f       	adc	r25, r26
    212a:	a1 1d       	adc	r26, r1
    212c:	68 0f       	add	r22, r24
    212e:	79 1f       	adc	r23, r25
    2130:	8a 1f       	adc	r24, r26
    2132:	91 1d       	adc	r25, r1
    2134:	a1 1d       	adc	r26, r1
    2136:	6a 0f       	add	r22, r26
    2138:	71 1d       	adc	r23, r1
    213a:	81 1d       	adc	r24, r1
    213c:	91 1d       	adc	r25, r1
    213e:	a1 1d       	adc	r26, r1
    2140:	20 d0       	rcall	.+64     	; 0x2182 <__ultoa_invert+0x84>
    2142:	09 f4       	brne	.+2      	; 0x2146 <__ultoa_invert+0x48>
    2144:	68 94       	set
    2146:	3f 91       	pop	r19
    2148:	2a e0       	ldi	r18, 0x0A	; 10
    214a:	26 9f       	mul	r18, r22
    214c:	11 24       	eor	r1, r1
    214e:	30 19       	sub	r19, r0
    2150:	30 5d       	subi	r19, 0xD0	; 208
    2152:	31 93       	st	Z+, r19
    2154:	de f6       	brtc	.-74     	; 0x210c <__ultoa_invert+0xe>
    2156:	cf 01       	movw	r24, r30
    2158:	08 95       	ret
    215a:	46 2f       	mov	r20, r22
    215c:	47 70       	andi	r20, 0x07	; 7
    215e:	40 5d       	subi	r20, 0xD0	; 208
    2160:	41 93       	st	Z+, r20
    2162:	b3 e0       	ldi	r27, 0x03	; 3
    2164:	0f d0       	rcall	.+30     	; 0x2184 <__ultoa_invert+0x86>
    2166:	c9 f7       	brne	.-14     	; 0x215a <__ultoa_invert+0x5c>
    2168:	f6 cf       	rjmp	.-20     	; 0x2156 <__ultoa_invert+0x58>
    216a:	46 2f       	mov	r20, r22
    216c:	4f 70       	andi	r20, 0x0F	; 15
    216e:	40 5d       	subi	r20, 0xD0	; 208
    2170:	4a 33       	cpi	r20, 0x3A	; 58
    2172:	18 f0       	brcs	.+6      	; 0x217a <__ultoa_invert+0x7c>
    2174:	49 5d       	subi	r20, 0xD9	; 217
    2176:	31 fd       	sbrc	r19, 1
    2178:	40 52       	subi	r20, 0x20	; 32
    217a:	41 93       	st	Z+, r20
    217c:	02 d0       	rcall	.+4      	; 0x2182 <__ultoa_invert+0x84>
    217e:	a9 f7       	brne	.-22     	; 0x216a <__ultoa_invert+0x6c>
    2180:	ea cf       	rjmp	.-44     	; 0x2156 <__ultoa_invert+0x58>
    2182:	b4 e0       	ldi	r27, 0x04	; 4
    2184:	a6 95       	lsr	r26
    2186:	97 95       	ror	r25
    2188:	87 95       	ror	r24
    218a:	77 95       	ror	r23
    218c:	67 95       	ror	r22
    218e:	ba 95       	dec	r27
    2190:	c9 f7       	brne	.-14     	; 0x2184 <__ultoa_invert+0x86>
    2192:	00 97       	sbiw	r24, 0x00	; 0
    2194:	61 05       	cpc	r22, r1
    2196:	71 05       	cpc	r23, r1
    2198:	08 95       	ret
    219a:	9b 01       	movw	r18, r22
    219c:	ac 01       	movw	r20, r24
    219e:	0a 2e       	mov	r0, r26
    21a0:	06 94       	lsr	r0
    21a2:	57 95       	ror	r21
    21a4:	47 95       	ror	r20
    21a6:	37 95       	ror	r19
    21a8:	27 95       	ror	r18
    21aa:	ba 95       	dec	r27
    21ac:	c9 f7       	brne	.-14     	; 0x21a0 <__ultoa_invert+0xa2>
    21ae:	62 0f       	add	r22, r18
    21b0:	73 1f       	adc	r23, r19
    21b2:	84 1f       	adc	r24, r20
    21b4:	95 1f       	adc	r25, r21
    21b6:	a0 1d       	adc	r26, r0
    21b8:	08 95       	ret

000021ba <__ctype_isfalse>:
    21ba:	99 27       	eor	r25, r25
    21bc:	88 27       	eor	r24, r24

000021be <__ctype_istrue>:
    21be:	08 95       	ret

000021c0 <_exit>:
    21c0:	f8 94       	cli

000021c2 <__stop_program>:
    21c2:	ff cf       	rjmp	.-2      	; 0x21c2 <__stop_program>
